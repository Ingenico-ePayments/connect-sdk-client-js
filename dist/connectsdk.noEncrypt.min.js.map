{"version":3,"sources":["core.js","promise.js","net.js","Util.js","GooglePay.js","PublicKeyResponse.js","C2SCommunicatorConfiguration.js","IinDetailsResponse.js","C2SCommunicator.js","LabelTemplateElement.js","Attribute.js","AccountOnFileDisplayHints.js","AccountOnFile.js","PaymentProduct302SpecificData.js","PaymentProduct320SpecificData.js","PaymentProduct863SpecificData.js","PaymentProductDisplayHints.js","BasicPaymentProduct.js","BasicPaymentProductGroup.js","MaskedString.js","MaskingUtil.js","ValidationRuleLuhn.js","ValidationRuleExpirationDate.js","ValidationRuleFixedList.js","ValidationRuleLength.js","ValidationRuleRange.js","ValidationRuleRegularExpression.js","ValidationRuleResidentIdNumber.js","ValidationRuleEmailAddress.js","ValidationRuleTermsAndConditions.js","ValidationRuleBoletoBancarioRequiredness.js","ValidationRuleIban.js","ValidationRuleFactory.js","DataRestrictions.js","ValueMappingElement.js","FormElement.js","Tooltip.js","PaymentProductFieldDisplayHints.js","PaymentProductField.js","PaymentProduct.js","PaymentProductGroup.js","BasicPaymentProducts.js","BasicPaymentProductGroups.js","BasicPaymentItems.js","PaymentRequest.js","C2SPaymentProductContext.js","JOSEEncryptor.js","Encryptor.js","session.js"],"names":["global","connectsdk","modules","define","module","dependencies","fn","length","i","apply","this","exports","window","turing","Promise","singleton","self","pending","resolve","result","complete","reject","isSingleton","prototype","then","success","failure","push","type","shift","PromiseModule","net","trim","s","replace","ajax","url","options","promise","chain","request","XMLHttpRequest","location","protocol","ActiveXObject","e","xhr","response","send","defaults","Accept","Content-Type","name","headers","hasOwnProperty","setRequestHeader","setHeaders","postBody","error","method","toLowerCase","asynchronous","onreadystatechange","readyState","contentType","mimeType","getResponseHeader","status","responseText","test","responseJSON","parseJSON","responseXML","parseXML","successfulRequest","callback","open","serialize","set","key","value","data","end","arguments","JSONPCallback","methodName","parseInt","Date","getTime","json","teardown","object","results","encodeURIComponent","join","string","JSON","parse","DOMParser","text","parseFromString","xml","async","loadXML","run","scriptTag","document","createElement","id","src","that","onerror","body","appendChild","removeChild","get","post","jsonp","Util","instance","getInstance","applePayPaymentProductId","googlePayPaymentProductId","bancontactPaymentProductId","getMetadata","screenSize","innerWidth","innerHeight","platformIdentifier","navigator","userAgent","sdkIdentifier","GC","rppEnabledPage","sdkCreator","collectDeviceInformation","timezoneOffsetUtcMinutes","getTimezoneOffset","locale","language","browserData","javaScriptEnabled","javaEnabled","colorDepth","screen","screenHeight","height","screenWidth","width","base64Encode","stringify","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","slice","filterOutProductsThatAreNotSupportedInThisBrowser","paymentProducts","product","paymentProductsThatAreNotSupportedInThisBrowser","indexOf","splice","_util","_paymentProductSpecificInputs","_context","_gateway","_networks","paymentsClient","_getBaseCardPaymentMethod","parameters","allowedAuthMethods","allowedCardNetworks","_getGooglePaymentDataRequestForPrefetch","apiVersion","apiVersionMinor","allowedPaymentMethods","Object","assign","tokenizationSpecification","gateway","gatewayMerchantId","googlePay","transactionInfo","totalPriceStatus","currencyCode","currency","merchantInfo","merchantName","_getGooglePaymentsClient","googlePayEnvironment","environment","google","payments","api","PaymentsClient","console","GooglePay","C2SCommunicator","isGooglePayAvailable","context","paymentProductSpecificInputs","googlePayData","networks","setTimeout","isReadyToPay","paymentDataRequest","prefetchPaymentData","warn","catch","isMerchantIdProvided","merchantId","PublicKeyResponse","keyId","publicKey","C2SCommunicatorConfiguration","sessionDetails","endpoints","PROD","EU","API","ASSETS","US","AMS","PAR","PREPROD","SANDBOX","INTEGRATION","DEV_NAMI","DEV_ISC","clientSessionId","clientSessionID","Error","assetUrl","assetsBaseUrl","clientApiUrl","apiBaseUrl","customerId","region","tester","split","path","IinDetailsResponse","countryCode","paymentProductId","isAllowedInContext","coBrands","Net","c2SCommunicatorConfiguration","paymentProduct","_c2SCommunicatorConfiguration","_cache","_providedPaymentProduct","_GooglePay","_mapType","expirydate","numericstring","integer","expirationDate","formatUrl","endsWith","formatImageUrl","imageUrl","startsWith","prefix","suffix","_cleanJSON","il","fields","field","validatorKey","displayHints","obfuscate","dataRestrictions","validators","formElement","list","tooltip","image","sort","a","b","displayOrder","logo","_extendLogoUrl","postfix","metadata","getBasicPaymentProducts","cacheKeyLocale","cacheBust","cacheKey","totalAmount","isRecurring","urlParameterLocale","res","_isPaymentProductInList","paymentProduct320SpecificData","_getGooglePayData","getBasicPaymentProductGroups","getPaymentProduct","errorId","errors","code","propertyName","message","httpStatusCode","urlParameterlocale","getPaymentProductUrl","bancontact","forceBasicFlow","cleanedJSON","getPaymentProductGroup","paymentProductGroupId","getPaymentProductIdByCreditCardNumber","partialCreditCardNumber","iinDetailsResponse","isEnoughDigits","convertContextToIinDetailsContext","payload","bin","paymentContext","amountOfMoney","amount","accountOnFileId","getPublicKey","publicKeyResponse","getPaymentProductNetworks","getPaymentProductDirectory","convertAmount","source","target","getThirdPartyPaymentStatus","paymentId","getCustomerDetails","constructCacheKeyFromKeyValues","values","transformPaymentProductJSON","LabelTemplateElement","attributeKey","mask","wildcardMask","Attribute","mustWriteReason","AccountOnFileDisplayHints","labelTemplate","labelTemplateElementByAttributeKey","_json","_labelTemplate","_labelTemplateElementByAttributeKey","l","labelTemplateElement","_parseJSON","AccountOnFile","attributes","attributeByKey","getMaskedValueByAttributeKey","undefined","MaskingUtil","applyMask","_attributes","_attributeByKey","attribute","PaymentProduct302SpecificData","PaymentProduct320SpecificData","PaymentProduct863SpecificData","integrationTypes","PaymentProductDisplayHints","label","BasicPaymentProduct","accountsOnFile","accountOnFileById","allowsRecurring","allowsTokenization","autoTokenized","maxAmount","minAmount","paymentMethod","mobileIntegrationLevel","usesRedirectionTo3rdParty","paymentProductGroup","_paymentProduct","_accountsOnFile","_accountOnFileById","accountOnFile","paymentProduct302SpecificData","paymentProduct863SpecificData","BasicPaymentProductGroup","MaskedString","formattedValue","cursorIndex","_fillBuffer","index","offset","buffer","tempMask","valuec","Number","newValue","oldValue","maskc","c","cursor","substring","getMaxLengthBasedOnMask","newLength","removeMask","valueIndex","inMask","ValidationRuleLuhn","errorMessageId","validate","luhnArr","sum","p","o","ValidationRuleExpirationDate","_validateDateFormat","expirationMonth","expirationYear","getMonth","getFullYear","nowWithDay","now","maxExpirationDate","ValidationRuleFixedList","allowedValues","ValidationRuleLength","maxLength","minLength","ValidationRuleRange","maxValue","minValue","isNaN","ValidationRuleRegularExpression","regularExpression","RegExp","ValidationRuleResidentIdNumber","weights","Math","pow","checkSum","csChar","ValidationRuleEmailAddress","ValidationRuleTermsAndConditions","ValidationRuleBoletoBancarioRequiredness","fiscalNumberLength","fiscalNumberValue","_sanitizeValue","toUpperCase","ValidationRuleIban","_isValidFormat","block","remainder","d","_toComputedString","validationRules","EmailAddress","TermsAndConditions","ExpirationDate","FixedList","Length","Luhn","Range","RegularExpression","BoletoBancarioRequiredness","Iban","ResidentIdNumber","ValidationRuleFactory","makeValidator","rule","DataRestrictions","isRequired","validationRuleByType","_validationRules","_validationRuleByType","validationRuleFactory","validationRule","ValueMappingElement","displayName","FormElement","valueMapping","_valueMapping","Tooltip","PaymentProductFieldDisplayHints","placeholderLabel","preferredInputType","alwaysShow","PaymentProductField","_errorCodes","getErrorCodes","isValid","hasError","maskedValue","validator","applyWildcardMask","PaymentProduct","basicPaymentProduct","paymentProductFields","paymentProductFieldById","_paymentProductFields","_paymentProductFieldById","paymentProductField","PaymentProductGroup","BasicPaymentProducts","basicPaymentProducts","basicPaymentProductById","basicPaymentProductByAccountOnFileId","_paymentProducts","_paymentProductById","_paymentProductByAccountOnFileId","aofs","j","jl","aof","_parseJson","BasicPaymentProductGroups","basicPaymentProductGroups","basicPaymentProductGroupById","_paymentProductGroups","_paymentProductGroupById","paymentProductGroups","BasicPaymentItems","products","groups","basicPaymentItems","basicPaymentItemById","_products","_groups","_basicPaymentItems","doRemove","groupId","groupReplaced","productMethod","basicPaymentItem","PaymentRequest","_fieldValues","_accountOnFile","_tokenize","getErrorMessageIds","allRequiredFieldsPresent","getValue","getAccountOnFile","setValue","paymentProductFieldId","setTokenize","tokenize","getTokenize","concat","getValues","getMaskedValue","getMaskedValues","maskedString","getUnmaskedValues","setPaymentProduct","setAccountOnFile","getClientSessionID","C2SPaymentProductContext","pki","forge","base64UrlEncode","asn1","str","util","encode64","JOSEEncryptor","encrypt","plainTextValues","kid","JOSEHeader","publickeyB64Encoded","publickeyB64Decoded","buffer2","publickeyObject2","protectedHeader","alg","encodededProtectedHeader","CEK","random","getBytesSync","CEKKEYLENGTH","encryptedContentEncryptionKey","encryptContentEncryptionKey","decode64","createBuffer","fromDer","publicKeyFromAsn1","encodedEncryptedContentEncryptionKey","macKey","encKey","initializationVector","IVLENGTH","encodededinitializationVector","cipherText","cipher","createCipher","start","iv","update","finish","output","bytes","encryptPayload","encodedCipherText","calculatedHmac","al","putBytes","hmacInput","hmac","create","sha512","digest","calculateHMAC","lengthInBits","putInt32","calculateAdditionalAuthenticatedDataLength","authenticationTag","Encryptor","publicKeyResponsePromise","paymentRequest","encryptedString","blob","nonce","bytesToHex","paymentValues","ownValues","getOwnPropertyNames","joseEncryptor","session","_paymentRequestPayload","_paymentRequest","_paymentProductGroup","_c2sCommunicator","_session","paymentRequestPayload","c2SPaymentProductContext","getBasicPaymentItems","useGroups","getIinDetails","getPaymentRequest","getEncryptor","transformPaymentProductGroupJSON","Session"],"mappings":"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","file":"connectsdk.noEncrypt.min.js","sourcesContent":["(function (global) {\r\n    var connectsdk = {}, modules = {};\r\n\r\n    /* SDK internal function */\r\n    connectsdk.define = function (module, dependencies, fn) {\r\n        if (dependencies && dependencies.length) {\r\n            for (var i = 0; i < dependencies.length; i++) {\r\n                dependencies[i] = modules[dependencies[i]];\r\n            }\r\n        }\r\n        modules[module] = fn.apply(this, dependencies || []);\r\n    };\r\n\r\n    // Export `connectsdk` based on environment.\r\n    global.connectsdk = connectsdk;\r\n\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n\r\n    connectsdk.define('connectsdk.core', [], function () {\r\n        return connectsdk;\r\n    });\r\n\r\n    // use require.js if available otherwise we use our own\r\n    if (typeof define === 'undefined') {\r\n        global.define = connectsdk.define;\r\n    }\r\n} (typeof window === 'undefined' ? this : window));\r\n\r\n// (re)define core\r\ndefine(\"connectsdk.core\", [], function () {\r\n    var global = typeof window === 'undefined' ? this : window;\r\n    var connectsdk = {};\r\n    global.connectsdk = connectsdk;\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n    return connectsdk;\r\n});\r\n","define('connectsdk.promise', ['connectsdk.core'], function(turing) {\r\n\tfunction PromiseModule(global) {\r\n\t\t/**\r\n\t\t * The Promise class.\r\n\t\t */\r\n\t\tfunction Promise(singleton) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.pending = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Resolves a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.resolve = function(result) {\r\n\t\t\t\tself.complete('resolve', result);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Rejects a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.reject = function(result) {\r\n\t\t\t\tself.complete('reject', result);\r\n\t\t\t};\r\n\r\n\t\t\tif (singleton) {\r\n\t\t\t\tthis.isSingleton = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tPromise.prototype = {\r\n\t\t\t/**\r\n\t\t\t * Adds a success and failure handler for completion of this Promise object.\r\n\t\t\t *\r\n\t\t\t * @param {Function} success The success handler\r\n\t\t\t * @param {Function} success The failure handler\r\n\t\t\t * @returns {Promise} `this`\r\n\t\t\t */\r\n\t\t\tthen : function(success, failure) {\r\n\t\t\t\tthis.pending.push({\r\n\t\t\t\t\tresolve : success,\r\n\t\t\t\t\treject : failure\r\n\t\t\t\t});\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Runs through each pending 'thenable' based on type (resolve, reject).\r\n\t\t\t *\r\n\t\t\t * @param {String} type The thenable type\r\n\t\t\t * @param {Object} result A value\r\n\t\t\t */\r\n\t\t\tcomplete : function(type, result) {\r\n\t\t\t\twhile (this.pending[0]) {\r\n\t\t\t\t\tthis.pending.shift()[type](result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tglobal.Promise = Promise;\r\n\t}\r\n\tPromiseModule(connectsdk);\r\n\r\n\treturn connectsdk.Promise;\r\n});\r\n","define('connectsdk.net', ['connectsdk.core'], function(connectsdk) {\r\n  var net = {};\r\n\r\n  /**\r\n    * Ajax request options:\r\n    *\r\n    *   - `method`: {String} HTTP method - GET, POST, etc.\r\n    *   - `success`: {Function} A callback to run when a request is successful\r\n    *   - `error`: {Function} A callback to run when the request fails\r\n    *   - `asynchronous`: {Boolean} Defaults to asynchronous\r\n    *   - `postBody`: {String} The HTTP POST body\r\n    *   - `contentType`: {String} The content type of the request, default is `application/x-www-form-urlencoded`\r\n    *\r\n    */\r\n\r\n  /**\r\n    * Removes leading and trailing whitespace.\r\n    * @param {String}\r\n    * @return {String}\r\n    */\r\n  var trim = ''.trim\r\n    ? function(s) { return s.trim(); }\r\n    : function(s) { return s.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); };\r\n\r\n  function xhr() {\r\n    if (typeof XMLHttpRequest !== 'undefined' && (window.location.protocol !== 'file:' || !window.ActiveXObject)) {\r\n      return new XMLHttpRequest();\r\n    } else {\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.6.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.3.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function successfulRequest(request) {\r\n    return (request.status >= 200 && request.status < 300) ||\r\n        request.status == 304 ||\r\n        (request.status == 0 && request.responseText);\r\n  }\r\n\r\n  /**\r\n    * Serialize JavaScript for HTTP requests.\r\n    *\r\n    * @param {Object} object An Array or Object\r\n    * @returns {String} A string suitable for a GET or POST request\r\n    */\r\n  net.serialize = function(object) {\r\n    if (!object) return;\r\n\r\n    if (typeof object === 'string') {\r\n      return object;\r\n    }\r\n\r\n    var results = [];\r\n    for (var key in object) {\r\n      results.push(encodeURIComponent(key) + '=' + encodeURIComponent(object[key]));\r\n    }\r\n    return results.join('&');\r\n  };\r\n\r\n  /**\r\n    * JSON.parse support can be inferred using `connectsdk.detect('JSON.parse')`.\r\n    */\r\n  //connectsdk.addDetectionTest('JSON.parse', function() {\r\n  //  return window.JSON && window.JSON.parse;\r\n  //});\r\n\r\n  /**\r\n    * Parses JSON represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  net.parseJSON = function(string) {\r\n    if (typeof string !== 'string' || !string) return null;\r\n    string = trim(string);\r\n    /*\r\n    return connectsdk.detect('JSON.parse') ?\r\n      window.JSON.parse(string) :\r\n      (new Function('return ' + string))();\r\n    */\r\n    return window.JSON.parse(string);\r\n  };\r\n\r\n  /**\r\n    * Parses XML represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  if (window.DOMParser) {\r\n    net.parseXML = function(text) {\r\n      return new DOMParser().parseFromString(text, 'text/xml');\r\n    };\r\n  } else {\r\n    net.parseXML = function(text) {\r\n      var xml = new ActiveXObject('Microsoft.XMLDOM');\r\n      xml.async = 'false';\r\n      xml.loadXML(text);\r\n      return xml;\r\n    };\r\n  }\r\n\r\n  /**\r\n    * Creates an Ajax request.  Returns an object that can be used\r\n    * to chain calls.  For example:\r\n    *\r\n    *      $t.post('/post-test')\r\n    *        .data({ key: 'value' })\r\n    *        .end(function(res) {\r\n    *          assert.equal('value', res.responseText);\r\n    *        });\r\n    *\r\n    *      $t.get('/get-test')\r\n    *        .set('Accept', 'text/html')\r\n    *        .end(function(res) {\r\n    *          assert.equal('Sample text', res.responseText);\r\n    *        });\r\n    *\r\n    * The available chained methods are:\r\n    *\r\n    * `set` -- set a HTTP header\r\n    * `data` -- the postBody\r\n    * `end` -- send the request over the network, and calls your callback with a `res` object\r\n    * `send` -- sends the request and calls `data`: `.send({ data: value }, function(res) { });`\r\n    *\r\n    * @param {String} The URL to call\r\n    * @param {Object} Optional settings\r\n    * @returns {Object} A chainable object for further configuration\r\n    */\r\n  function ajax(url, options) {\r\n    var request = xhr(),\r\n        promise,\r\n        then,\r\n        response = {},\r\n        chain;\r\n    if (connectsdk.Promise) {\r\n      promise = new connectsdk.Promise();\r\n    }\r\n\r\n    function respondToReadyState(readyState) {\r\n      if (request.readyState == 4) {\r\n        var contentType = request.mimeType || request.getResponseHeader('content-type') || '';\r\n\r\n        response.status = request.status;\r\n        response.responseText = request.responseText;\r\n        if (/json/.test(contentType)) {\r\n          response.responseJSON = net.parseJSON(request.responseText);\r\n        } else if (/xml/.test(contentType)) {\r\n          response.responseXML = net.parseXML(request.responseText);\r\n      \t}\r\n\r\n        response.success = successfulRequest(request);\r\n\r\n        if (options.callback) {\r\n          return options.callback(response, request);\r\n        }\r\n\r\n        if (response.success) {\r\n          if (options.success) options.success(response, request);\r\n          if (promise) promise.resolve(response, request);\r\n        } else {\r\n          if (options.error) options.error(response, request);\r\n          if (promise) promise.reject(response, request);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Set the HTTP headers\r\n    function setHeaders() {\r\n      var defaults = {\r\n        'Accept': 'text/javascript, application/json, text/html, application/xml, text/xml, */*',\r\n        'Content-Type': 'application/json'\r\n      };\r\n\r\n      /**\r\n       * Merge headers with defaults.\r\n       */\r\n      for (var name in defaults) {\r\n        if (!options.headers.hasOwnProperty(name))\r\n          options.headers[name] = defaults[name];\r\n      }\r\n      for (var name in options.headers) {\r\n        request.setRequestHeader(name, options.headers[name]);\r\n      }\r\n\r\n    }\r\n\r\n    if (typeof options === 'undefined') options = {};\r\n\r\n    options.method = options.method ? options.method.toLowerCase() : 'get';\r\n    options.asynchronous = options.asynchronous || true;\r\n    options.postBody = options.postBody || '';\r\n    request.onreadystatechange = respondToReadyState;\r\n    request.open(options.method, url, options.asynchronous);\r\n\r\n    options.headers = options.headers || {};\r\n    if (options.contentType) {\r\n      options.headers['Content-Type'] = options.contentType;\r\n    }\r\n\r\n    if (typeof options.postBody !== 'string') {\r\n      // Serialize JavaScript\r\n      options.postBody = net.serialize(options.postBody);\r\n    }\r\n\r\n    // setHeaders();\r\n\r\n    function send() {\r\n      try {\r\n      \tsetHeaders();\r\n        request.send(options.postBody);\r\n      } catch (e) {\r\n        if (options.error) {\r\n          options.error();\r\n        }\r\n      }\r\n    }\r\n\r\n    chain = {\r\n      set: function(key, value) {\r\n        options.headers[key] = value;\r\n        return chain;\r\n      },\r\n\r\n      send: function(data, callback) {\r\n        options.postBody = net.serialize(data);\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      end: function(callback) {\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      data: function(data) {\r\n        options.postBody = net.serialize(data);\r\n        return chain;\r\n      },\r\n\r\n      then: function() {\r\n        chain.end();\r\n        if (promise) promise.then.apply(promise, arguments);\r\n        return chain;\r\n      }\r\n    };\r\n\r\n    return chain;\r\n  }\r\n\r\n  function JSONPCallback(url, success, failure) {\r\n    var self = this;\r\n    this.url = url;\r\n    this.methodName = '__connectsdk_jsonp_' + parseInt(new Date().getTime());\r\n    this.success = success;\r\n    this.failure = failure;\r\n\r\n    function runCallback(json) {\r\n      self.success(json);\r\n      self.teardown();\r\n    }\r\n\r\n    window[this.methodName] = runCallback;\r\n  }\r\n\r\n  JSONPCallback.prototype.run = function() {\r\n    this.scriptTag = document.createElement('script');\r\n    this.scriptTag.id = this.methodName;\r\n    this.scriptTag.src = this.url.replace('{callback}', this.methodName);\r\n    var that = this;\r\n    this.scriptTag.onerror = function() {\r\n    \tthat.failure();\r\n    };\r\n    document.body.appendChild(this.scriptTag);\r\n  };\r\n\r\n  JSONPCallback.prototype.teardown = function() {\r\n    window[this.methodName] = null;\r\n    try {\r\n    \tdelete window[this.methodName];\r\n    } catch (e) {}\r\n    if (this.scriptTag) {\r\n      document.body.removeChild(this.scriptTag);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * An Ajax GET request.\r\n   *\r\n   *      $t.get('/get-test')\r\n   *        .set('Accept', 'text/html')\r\n   *        .end(function(res) {\r\n   *          assert.equal('Sample text', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options\r\n   * @returns {Object} A chainable object for further configuration\r\n   */\r\n  net.get = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'get';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * An Ajax POST request.\r\n   *\r\n   *      $t.post('/post-test')\r\n   *        .data({ key: 'value' })\r\n   *        .end(function(res) {\r\n   *          assert.equal('value', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options (`postBody` may come in handy here)\r\n   * @returns {Object} An object for further chaining with promises\r\n   */\r\n  net.post = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'post';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * A jsonp request.  Example:\r\n   *\r\n   *     var url = 'http://feeds.delicious.com/v1/json/';\r\n   *     url += 'alex_young/javascript?callback={callback}';\r\n   *\r\n   *     connectsdk.net.jsonp(url, {\r\n   *       success: function(json) {\r\n   *         console.log(json);\r\n   *       }\r\n   *     });\r\n   *\r\n   * @param {String} url The URL to request\r\n   */\r\n  net.jsonp = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    var callback = new JSONPCallback(url, options.success, options.failure);\r\n    callback.run();\r\n  };\r\n\r\n  /**\r\n    * The Ajax methods are mapped to the `connectsdk` object:\r\n    *\r\n    *      connectsdk.get();\r\n    *      connectsdk.post();\r\n    *      connectsdk.json();\r\n    *\r\n    */\r\n  connectsdk.get = net.get;\r\n  connectsdk.post = net.post;\r\n  connectsdk.jsonp = net.jsonp;\r\n\r\n  net.ajax = ajax;\r\n  connectsdk.net = net;\r\n  return net;\r\n});\r\n","define(\"connectsdk.Util\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\t// Create a singleton from Util so the same util function can be used in different modules\r\n\tvar Util = (function () {\r\n\t\tvar instance;\r\n\r\n\t\tfunction createInstance() {\r\n\t\t\t// private variables to use in the public methods\r\n\t\t\tvar applePayPaymentProductId = 302;\r\n\t\t\tvar googlePayPaymentProductId = 320;\r\n\t\t\tvar bancontactPaymentProductId = 3012;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tapplePayPaymentProductId: applePayPaymentProductId,\r\n\t\t\t\tgooglePayPaymentProductId: googlePayPaymentProductId,\r\n\t\t\t\tbancontactPaymentProductId: bancontactPaymentProductId,\r\n\t\t\t\tgetMetadata: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tscreenSize: window.innerWidth + \"x\" + window.innerHeight,\r\n\t\t\t\t\t\tplatformIdentifier: window.navigator.userAgent,\r\n\t\t\t\t\t\tsdkIdentifier: ((document.GC && document.GC.rppEnabledPage) ? 'rpp-' : '') + 'JavaScriptClientSDK/v${version}',\r\n\t\t\t\t\t\tsdkCreator: 'Ingenico'\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tcollectDeviceInformation: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\"timezoneOffsetUtcMinutes\": new Date().getTimezoneOffset(),\r\n\t\t\t\t\t\t\"locale\": navigator.language,\r\n\t\t\t\t\t\t\"browserData\": {\r\n\t\t\t\t\t\t\t\"javaScriptEnabled\": true,\r\n\t\t\t\t\t\t\t\"javaEnabled\": navigator.javaEnabled(),\r\n\t\t\t\t\t\t\t\"colorDepth\": screen.colorDepth,\r\n\t\t\t\t\t\t\t\"screenHeight\": screen.height,\r\n\t\t\t\t\t\t\t\"screenWidth\": screen.width,\r\n\t\t\t\t\t\t\t\"innerHeight\": window.innerHeight,\r\n\t\t\t\t\t\t\t\"innerWidth\": window.innerWidth\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tbase64Encode: function (data) {\r\n\t\t\t\t\tif (typeof data === \"object\") {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdata = JSON.stringify(data);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tthrow \"data must be either a String or a JSON object\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\t\t\t\t\tvar o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', tmp_arr = [];\r\n\r\n\t\t\t\t\tif (!data) {\r\n\t\t\t\t\t\treturn data;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdo {// pack three octets into four hexets\r\n\t\t\t\t\t\to1 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to2 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to3 = data.charCodeAt(i++);\r\n\r\n\t\t\t\t\t\tbits = o1 << 16 | o2 << 8 | o3;\r\n\r\n\t\t\t\t\t\th1 = bits >> 18 & 0x3f;\r\n\t\t\t\t\t\th2 = bits >> 12 & 0x3f;\r\n\t\t\t\t\t\th3 = bits >> 6 & 0x3f;\r\n\t\t\t\t\t\th4 = bits & 0x3f;\r\n\r\n\t\t\t\t\t\t// use hexets to index into b64, and append result to encoded string\r\n\t\t\t\t\t\ttmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\r\n\t\t\t\t\t} while (i < data.length);\r\n\r\n\t\t\t\t\tenc = tmp_arr.join('');\r\n\r\n\t\t\t\t\tvar r = data.length % 3;\r\n\r\n\t\t\t\t\treturn (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\r\n\t\t\t\t},\r\n\t\t\t\tfilterOutProductsThatAreNotSupportedInThisBrowser: function (json) {\r\n\t\t\t\t\tfor (var i = json.paymentProducts.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\t\t\tvar product = json.paymentProducts[i];\r\n\t\t\t\t\t\tif (product && this.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(product.id) > -1) {\r\n\t\t\t\t\t\t\tjson.paymentProducts.splice(i, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tpaymentProductsThatAreNotSupportedInThisBrowser: [applePayPaymentProductId]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tgetInstance: function () {\r\n\t\t\t\tif (!instance) {\r\n\t\t\t\t\tinstance = createInstance();\r\n\t\t\t\t}\r\n\t\t\t\treturn instance;\r\n\t\t\t}\r\n\t\t};\r\n\t})();\r\n\r\n\tconnectsdk.Util = Util;\r\n\treturn Util;\r\n});\r\n","define(\"connectsdk.GooglePay\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.Util\"], function (connectsdk, Promise, Util) {\r\n\r\n    var _util = Util.getInstance();\r\n    var _C2SCommunicator = null;\r\n    var _paymentProductSpecificInputs = null;\r\n    var _context = null;\r\n    var _gateway = null;\r\n    var _networks = null;\r\n    var paymentsClient = null;\r\n\r\n    // Only base is needed to trigger isReadyToPay\r\n    var _getBaseCardPaymentMethod = function () {\r\n        return {\r\n            type: 'CARD',\r\n            parameters: {\r\n                allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\r\n                allowedCardNetworks: _networks\r\n            }\r\n        }\r\n    };\r\n\r\n    var _getTokenizationSpecification = function () {\r\n        return {\r\n            type: 'PAYMENT_GATEWAY',\r\n            parameters: {\r\n                'gateway': _gateway,\r\n                'gatewayMerchantId': _paymentProductSpecificInputs.googlePay.gatewayMerchantId\r\n            }\r\n        }\r\n    };\r\n\r\n    // To prefetch payment data we need base + tokenizationSpecification\r\n    var _getCardPaymentMethod = function () {\r\n        return Object.assign(\r\n            {},\r\n            _getBaseCardPaymentMethod(),\r\n            {\r\n                tokenizationSpecification: _getTokenizationSpecification()\r\n            }\r\n        );\r\n    };\r\n\r\n    var _getTransactionInfo = function () {\r\n        return {\r\n            \"totalPriceStatus\": \"NOT_CURRENTLY_KNOWN\",\r\n            \"currencyCode\": _context.currency\r\n        };\r\n    };\r\n\r\n    var _getMerchantInfo = function () {\r\n        return {\r\n            \"merchantName\": _paymentProductSpecificInputs.googlePay.merchantName\r\n        };\r\n    };\r\n\r\n    var _getGooglePaymentDataRequest = function () {\r\n        return {\r\n            apiVersion: 2,\r\n            apiVersionMinor: 0,\r\n            allowedPaymentMethods: [_getBaseCardPaymentMethod()]\r\n        };\r\n    };\r\n\r\n    var _getGooglePaymentDataRequestForPrefetch = function () {\r\n        // transactionInfo must be set but does not affect cache\r\n        return {\r\n            apiVersion: 2,\r\n            apiVersionMinor: 0,\r\n            allowedPaymentMethods: [_getCardPaymentMethod()],\r\n            transactionInfo: _getTransactionInfo(),\r\n            merchantInfo: _getMerchantInfo()\r\n        };\r\n    };\r\n\r\n    function _getGooglePaymentsClient() {\r\n        if (paymentsClient === null) {\r\n            var googlePayEnvironment = 'TEST';\r\n            if (_context.environment === 'PROD') {\r\n                googlePayEnvironment = 'PROD';\r\n            }\r\n            if (window.google) {\r\n                paymentsClient = new google.payments.api.PaymentsClient({environment: googlePayEnvironment});\r\n            } else {\r\n                console.error(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\r\n            }\r\n        }\r\n        return paymentsClient;\r\n    }\r\n\r\n    /**\r\n     * Prefetch payment data to improve performance\r\n     *\r\n     * @see {@link https://developers.google.com/pay/api/web/reference/client#prefetchPaymentData|prefetchPaymentData()}\r\n     */\r\n    function prefetchGooglePaymentData() {\r\n        var paymentDataRequest = _getGooglePaymentDataRequestForPrefetch();\r\n\r\n        var paymentsClient = _getGooglePaymentsClient();\r\n\r\n        // Prefetching is only effective when all information is provided\r\n        if (_paymentProductSpecificInputs.googlePay.gatewayMerchantId &&\r\n            _paymentProductSpecificInputs.googlePay.merchantName) {\r\n            paymentsClient.prefetchPaymentData(paymentDataRequest);\r\n        } else {\r\n            console.warn(\"Prefetching payment data was not triggered because of missing information. \" +\r\n                \"gatewayMerchantId: \" + _paymentProductSpecificInputs.googlePay.gatewayMerchantId +\r\n                \", merchantName: \" + _paymentProductSpecificInputs.googlePay.merchantName)\r\n        }\r\n    }\r\n\r\n    var GooglePay = function (C2SCommunicator) {\r\n        _C2SCommunicator = C2SCommunicator;\r\n        this.isGooglePayAvailable = function (context, paymentProductSpecificInputs, googlePayData) {\r\n            _context = context;\r\n            _paymentProductSpecificInputs = paymentProductSpecificInputs;\r\n            if (googlePayData && googlePayData.networks) {\r\n                _gateway = googlePayData.gateway;\r\n                _networks = googlePayData.networks;\r\n            } else {\r\n                _gateway = \"ingenicoglobalcollect\";\r\n                _networks = googlePayData;\r\n            }\r\n            var promise = new Promise();\r\n            // This setTimeout is essential to make the following (not fully asynchronous) code work in a promise way in all scenarios. (not needed in happy flow)\r\n            // The SDK has it's only PolyFill for the promise which is not feature complete.\r\n            setTimeout(function () {\r\n                if (_networks && _networks.length > 0) {\r\n                    var paymentsClient = _getGooglePaymentsClient();\r\n                    if (!paymentsClient) {\r\n                        _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                        promise.reject(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\r\n                    } else {\r\n                        paymentsClient.isReadyToPay(_getGooglePaymentDataRequest())\r\n                            .then(function (response) {\r\n                                promise.resolve(response);\r\n\r\n                                prefetchGooglePaymentData();\r\n                            })\r\n                            .catch(function () {\r\n                                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                                promise.reject('failed to run isReadyToPay() with Google Pay API');\r\n                            });\r\n                    }\r\n                } else {\r\n                    _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                    promise.reject('There are no product networks available');\r\n                }\r\n            }, 0);\r\n            return promise;\r\n        };\r\n\r\n        this.isMerchantIdProvided = function (paymentProductSpecificInputs) {\r\n            if (paymentProductSpecificInputs.googlePay.merchantId) {\r\n                return paymentProductSpecificInputs.googlePay.merchantId;\r\n            } else {\r\n                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    connectsdk.GooglePay = GooglePay;\r\n    return GooglePay;\r\n});\r\n","define(\"connectsdk.PublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PublicKeyResponse = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.keyId = json.keyId;\r\n\t\tthis.publicKey = json.publicKey;\r\n\t};\r\n\r\n\tconnectsdk.PublicKeyResponse = PublicKeyResponse;\r\n\treturn PublicKeyResponse;\r\n});","define(\"connectsdk.C2SCommunicatorConfiguration\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n    var C2SCommunicatorConfiguration = function (sessionDetails, apiVersion) {\r\n        this.endpoints = {\r\n            PROD: {\r\n                EU: {\r\n                    API: \"https://ams1.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.secured-by-ingenico.com\"\r\n                }\r\n            },\r\n            PREPROD: {\r\n                EU: {\r\n                    API: \"https://ams1.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.preprod.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.preprod.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.preprod.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par-preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.preprod.secured-by-ingenico.com\"\r\n                }\r\n            },\r\n            SANDBOX: {\r\n                EU: {\r\n                    API: \"https://ams1.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.sandbox.secured-by-ingenico.com\"\r\n                }\r\n            }\r\n\r\n            // Non public settings. Only needed in GC development environment. Do not use\r\n            // these, they will not work outside GC.\r\n            ,\r\n            INTEGRATION: {\r\n                EU: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                US: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                }\r\n            },\r\n            DEV_NAMI: {\r\n                EU: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                US: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                }\r\n            },\r\n            DEV_ISC: {\r\n                EU: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                },\r\n                US: {\r\n                    API: \"//api.gc-ci-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-ci-dev.isaac.local\"\r\n                },\r\n                AMS: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                },\r\n                PAR: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                }\r\n            }\r\n        };\r\n\r\n        // clientSessionID, assetBaseUrl and apiBaseUrl are deprecated but still may be used. Here we check for presense of new variables, if they dont exist... Use the old variables.\r\n        if (!sessionDetails.clientSessionId) {\r\n            sessionDetails.clientSessionId = sessionDetails.clientSessionID;\r\n        } else if (sessionDetails.clientSessionID) {\r\n            throw new Error(\"You cannot use both the clientSessionId and the clientSessionID at the same time, please use the clientSessionId only.\");\r\n        }\r\n        if (!sessionDetails.assetUrl) {\r\n            sessionDetails.assetUrl = sessionDetails.assetsBaseUrl\r\n        } else if (sessionDetails.assetsBaseUrl) {\r\n            throw new Error(\"You cannot use both the assetUrl and the assetsBaseUrl at the same time, please use the assetUrl only.\");\r\n        }\r\n        if (!sessionDetails.clientApiUrl) {\r\n            sessionDetails.clientApiUrl = sessionDetails.apiBaseUrl\r\n        } else if (sessionDetails.apiBaseUrl) {\r\n            throw new Error(\"You cannot use both the clientApiUrl and the apiBaseUrl at the same time, please use the clientApiUrl only.\");\r\n        }\r\n\r\n        this.clientSessionId = sessionDetails.clientSessionId;\r\n        this.customerId = sessionDetails.customerId;\r\n\r\n        // can be removed in a newer version of the SDK from this line\r\n        if (sessionDetails.region && !sessionDetails.clientApiUrl) {\r\n            // use regions; old stuff\r\n            console.warn(\"Using regions is deprecated, switch to clientApiUrl\");\r\n            this.clientApiUrl = this.endpoints[sessionDetails.environment][sessionDetails.region].API;\r\n            this.assetUrl = this.endpoints[sessionDetails.environment][sessionDetails.region].ASSETS;\r\n        } else {\r\n            // till this line; normal behaviour is below\r\n            // ignore the region here\r\n            this.clientApiUrl = sessionDetails.clientApiUrl;\r\n            this.assetUrl = sessionDetails.assetUrl;\r\n            if (!this.clientApiUrl) {\r\n                throw new Error(\"This version of the connectSDK requires an clientApiUrl, which you did not provide.\");\r\n            }\r\n            if (!this.assetUrl) {\r\n                throw new Error(\"This version of the connectSDK requires an assetUrl, which you did not provide.\");\r\n            }\r\n\r\n            // now that the clientApiUrl is set check when if the api version is set in the URL, its the correct version break if not.\r\n            if (this.clientApiUrl.indexOf(\"//\") === -1) {\r\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\r\n            }\r\n            var tester = this.clientApiUrl.split(\"/\"); // [0] = (http(s): || \"\") , [1] = \"\", [2] = \"host:port\", [3+] = path\r\n            if (tester[0] !== \"\" && tester[0].indexOf(\"http\") !== 0) {\r\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\r\n            }\r\n            // if you cannot provide an URL that starts with (http(s)::)// and want an error: please provide a PR :)\r\n\r\n            var path = tester.splice(3).join(\"/\"); // the path (if no path; path = \"\").\r\n            if (!path) { //If path == \"\"\r\n                this.clientApiUrl += \"/\" + apiVersion;\r\n            } else if (path === 'client') { //If path == client\r\n                this.clientApiUrl += \"/\" + apiVersion.split('/')[1];\r\n            } else if (path.indexOf(apiVersion) !== 0 || path.length !== apiVersion.length) {\r\n                throw new Error(\"This version of the connectSDK is only compatible with \" + apiVersion + \", you supplied: '\" + path + \"'\");\r\n            }\r\n        }\r\n    };\r\n    connectsdk.C2SCommunicatorConfiguration = C2SCommunicatorConfiguration;\r\n    return C2SCommunicatorConfiguration;\r\n});","define(\"connectsdk.IinDetailsResponse\", [\"connectsdk.core\", \"connectsdk.promise\"], function(connectsdk, Promise) {\r\n\r\n\tvar IinDetailsResponse = function () {\r\n\t\tthis.status = '';\r\n\t\tthis.countryCode = '';\r\n\t\tthis.paymentProductId = '';\r\n\t\tthis.isAllowedInContext = '';\r\n\t\tthis.coBrands = [];\r\n\t};\r\n\tconnectsdk.IinDetailsResponse = IinDetailsResponse;\r\n\treturn IinDetailsResponse;\r\n});","define(\"connectsdk.C2SCommunicator\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.net\", \"connectsdk.Util\", \"connectsdk.PublicKeyResponse\", \"connectsdk.IinDetailsResponse\", \"connectsdk.GooglePay\"], function (connectsdk, Promise, Net, Util, PublicKeyResponse, IinDetailsResponse, GooglePay) {\r\n\tvar C2SCommunicator = function (c2SCommunicatorConfiguration, paymentProduct) {\r\n\t\tvar _c2SCommunicatorConfiguration = c2SCommunicatorConfiguration;\r\n\t\tvar _util = Util.getInstance();\r\n\t\tvar _cache = {};\r\n\t\tvar _providedPaymentProduct = paymentProduct;\r\n\t\tvar that = this;\r\n\t\tvar _GooglePay = new GooglePay(that);\r\n\r\n\t\tvar _mapType = {\r\n\t\t\t\"expirydate\": \"tel\",\r\n\t\t\t\"string\": \"text\",\r\n\t\t\t\"numericstring\": \"tel\",\r\n\t\t\t\"integer\": \"number\",\r\n\t\t\t\"expirationDate\": \"tel\"\r\n\t\t};\r\n\r\n\t\tvar formatUrl = function (url) {\r\n\t\t\treturn (url && endsWith(url, '/')) ? url : url + '/';\r\n\t\t};\r\n\r\n\t\tvar formatImageUrl = function(url, imageUrl) {\r\n\t\t\turl = formatUrl(url);\r\n\t\t\t// _cleanJSON can be called multiple times with the same data (which is cached between calls).\r\n\t\t\t// Don't prepend the url after the first time.\r\n\t\t\tif (startsWith(imageUrl, url)) {\r\n\t\t\t\treturn imageUrl;\r\n\t\t\t}\r\n\t\t\treturn url + imageUrl;\r\n\t\t};\r\n\r\n\t\tvar startsWith = function(string, prefix) {\r\n\t\t\treturn string.indexOf(prefix) === 0;\r\n\t\t};\r\n\r\n\t\tvar endsWith = function(string, suffix) {\r\n\t\t\treturn string.indexOf(suffix, string.length - suffix.length) !== -1;\r\n\t\t};\r\n\r\n\t\tvar _cleanJSON = function (json, url) {\r\n\t\t\tfor (var i = 0, il = json.fields.length; i < il; i++) {\r\n\t\t\t\tvar field = json.fields[i];\r\n\t\t\t\tfield.type = (field.displayHints && field.displayHints.obfuscate) ? \"password\" : _mapType[field.type];\r\n\r\n\t\t\t\t// helper code for templating tools like Handlebars\r\n\t\t\t\tfor (validatorKey in field.dataRestrictions.validators) {\r\n\t\t\t\t\tfield.validators = field.validators || [];\r\n\t\t\t\t\tfield.validators.push(validatorKey);\r\n\t\t\t\t}\r\n\t\t\t\tif (field.displayHints && field.displayHints.formElement && field.displayHints.formElement.type === 'list') {\r\n\t\t\t\t\tfield.displayHints.formElement.list = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// full image paths\r\n\t\t\t\tif (field.displayHints && field.displayHints.tooltip && field.displayHints.tooltip.image) {\r\n\t\t\t\t\tfield.displayHints.tooltip.image = formatImageUrl(url, field.displayHints.tooltip.image);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// The server orders in a different way, so we apply the sortorder\r\n\t\t\tjson.fields.sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\t// set full image path\r\n\t\t\tjson.displayHints.logo = formatImageUrl(url, json.displayHints.logo);\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _extendLogoUrl = function (json, url, postfix) {\r\n\t\t\tfor (var i = 0, il = json[\"paymentProduct\" + postfix].length; i < il; i++) {\r\n\t\t\t\tvar product = json[\"paymentProduct\" + postfix][i];\r\n\t\t\t\tproduct.displayHints.logo = formatImageUrl(url, product.displayHints.logo);\r\n\t\t\t}\r\n\t\t\tjson[\"paymentProduct\" + postfix].sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _isPaymentProductInList = function (list, paymentProductId) {\r\n\t\t\tfor (var i = list.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\tvar product = list[i];\r\n\t\t\t\tif (product && (product.id === paymentProductId)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n        var _getGooglePayData = function (list, paymentProductId) {\r\n            for (var i = list.length - 1, il = 0; i >= il; i--) {\r\n                var product = list[i];\r\n                if (product && (product.id === paymentProductId)) {\r\n                    return product.paymentProduct320SpecificData;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n\r\n\t\tvar metadata = _util.getMetadata();\r\n\r\n\t\tthis.getBasicPaymentProducts = function (context, paymentProductSpecificInputs) {\r\n\t\t\tvar cacheKeyLocale= context.locale ? context.locale + \"_\" : '';\r\n\t\t\tpaymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProducts-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ cacheKeyLocale + context.isRecurring + \"_\" + context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterLocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields\" + urlParameterLocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"s\");\r\n\t\t\t\t\t\t\tif (_isPaymentProductInList(json.paymentProducts, _util.googlePayPaymentProductId)) {\r\n\t\t\t\t\t\t\t\tif (_GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n\t\t\t\t\t\t\t\t\tvar googlePayData = _getGooglePayData(json.paymentProducts, _util.googlePayPaymentProductId);\r\n\t\t\t\t\t\t\t\t\t_GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, googlePayData).then(function (isGooglePayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//GooglePay does not have merchantId\r\n\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\tconsole.warn('You have not provided a merchantId for Google Pay, you can set this in the paymentProductSpecificInputs object');\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject('failed to retrieve Basic Payment Products', res);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function (context) {\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroups-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ cacheKeyLocale + context.isRecurring + \"_\" + context.currency;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterLocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields\" + urlParameterLocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"Groups\");\r\n\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function (paymentProductId, context, paymentProductSpecificInputs) {\r\n\t\t\tpaymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProduct-\" + paymentProductId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\r\n\t\t\tif (_util.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(paymentProductId) > -1) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.reject({\r\n\t\t\t\t\t\t\"errorId\": \"48b78d2d-1b35-4f8b-92cb-57cc2638e901\",\r\n\t\t\t\t\t\t\"errors\": [{\r\n\t\t\t\t\t\t\t\"code\": \"1007\",\r\n\t\t\t\t\t\t\t\"propertyName\": \"productId\",\r\n\t\t\t\t\t\t\t\"message\": \"UNKNOWN_PRODUCT_ID\",\r\n\t\t\t\t\t\t\t\"httpStatusCode\": 404\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductId) {\r\n\t\t\t\t\tif (!_cache[cacheKey]) {\r\n\t\t\t\t\t\t_cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar urlParameterlocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\t\tvar getPaymentProductUrl = formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t\t+ \"/products/\" + paymentProductId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t\t+ \"&currencyCode=\" + context.currency + urlParameterlocale;\r\n\r\n\t\t\t\t\tif ((paymentProductId === _util.bancontactPaymentProductId) &&\r\n\t\t\t\t\tpaymentProductSpecificInputs &&\r\n\t\t\t\t\tpaymentProductSpecificInputs.bancontact &&\r\n\t\t\t\t\tpaymentProductSpecificInputs.bancontact.forceBasicFlow) {\r\n\t\t\t\t\t\t// Add query parameter to products call to force basic flow for bancontact\r\n\t\t\t\t\t\tgetPaymentProductUrl += \"&forceBasicFlow=\" + paymentProductSpecificInputs.bancontact.forceBasicFlow\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgetPaymentProductUrl += \"&cacheBust=\" + cacheBust;\r\n\r\n\t\t\t\t\tNet.get(getPaymentProductUrl)\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t\t\t\tif (paymentProductId === _util.googlePayPaymentProductId) {\r\n\t\t\t\t\t\t\t\t\tif (_GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n                                        var networks = cleanedJSON.paymentProduct320SpecificData.networks;\r\n\t\t\t\t\t\t\t\t\t\t_GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, networks).then(function (isGooglePayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (isGooglePayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t\t//_isGooglePayAvailable returned false so google pay is not available, so reject getPaymentProduct\r\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t//_isGooglePayAvailable rejected so not available\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t// merchantId is not provided so reject\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tpromise.reject('failed to retrieve Payment Product', res);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, context) {\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroup-\" + paymentProductGroupId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency;\r\n\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductGroupId) {\r\n\t\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterlocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups/\" + paymentProductGroupId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t+ \"&currencyCode=\" + context.currency + urlParameterlocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductIdByCreditCardNumber = function (partialCreditCardNumber, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, iinDetailsResponse = new IinDetailsResponse()\r\n\t\t\t\t, cacheKey = \"getPaymentProductIdByCreditCardNumber-\" + partialCreditCardNumber;\r\n\r\n\t\t\tvar that = this;\r\n\t\t\tthis.context = context;\r\n\t\t\tif (_cache[cacheKey]) {// cache is based on digit 1-6\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar isEnoughDigits = function (partialCreditCardNumber) {\r\n\t\t\t\t\treturn partialCreditCardNumber.length >= 6;\r\n\t\t\t\t};\r\n\t\t\t\tif (isEnoughDigits(partialCreditCardNumber)) {\r\n\t\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/services/getIINdetails\")\r\n\t\t\t\t\t\t.data(JSON.stringify(this.convertContextToIinDetailsContext(partialCreditCardNumber, this.context)))\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.json = res.responseJSON;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.countryCode = res.responseJSON.countryCode;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.paymentProductId = res.responseJSON.paymentProductId;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.isAllowedInContext = res.responseJSON.isAllowedInContext;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.coBrands = res.responseJSON.coBrands;\r\n\t\t\t\t\t\t\t\t// check if this card is supported\r\n\t\t\t\t\t\t\t\t// if isAllowedInContext is available in the response set status and resolve\r\n\t\t\t\t\t\t\t\tif (res.responseJSON.hasOwnProperty('isAllowedInContext')) {\r\n\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\tif (iinDetailsResponse.isAllowedInContext === false) {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"EXISTING_BUT_NOT_ALLOWED\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//if isAllowedInContext is not available get the payment product again to determine status and resolve\r\n\t\t\t\t\t\t\t\t\tthat.getPaymentProduct(iinDetailsResponse.paymentProductId, that.context).then(function (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\tif (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNSUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tiinDetailsResponse.status = \"NOT_ENOUGH_DIGITS\";\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertContextToIinDetailsContext = function (partialCreditCardNumber, context) {\r\n\t\t\tvar payload = {\r\n\t\t\t\t\"bin\": partialCreditCardNumber,\r\n\t\t\t\t\"paymentContext\": {\r\n\t\t\t\t\t\"countryCode\": context.countryCode,\r\n\t\t\t\t\t\"isRecurring\": context.isRecurring,\r\n\t\t\t\t\t\"amountOfMoney\": {\r\n\t\t\t\t\t\t\"amount\": context.totalAmount,\r\n\t\t\t\t\t\t\"currencyCode\": context.currency\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Account on file id is needed only in case when the merchant\r\n\t\t\t// uses multiple payment platforms at the same time.\r\n\t\t\tif (typeof context.accountOnFileId !== 'undefined') {\r\n\t\t\t\tpayload.accountOnFileId = context.accountOnFileId;\r\n\t\t\t}\r\n\r\n\t\t\treturn payload;\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"publicKey\";\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/crypto/publickey\")\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar publicKeyResponse = new PublicKeyResponse(res.responseJSON);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = publicKeyResponse;\r\n\t\t\t\t\t\t\tpromise.resolve(publicKeyResponse);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to get public key\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"paymentProductNetworks-\" + paymentProductId + \"_\" + context.countryCode + \"_\" + context.currency + \"_\"\r\n\t\t\t\t\t+ context.totalAmount + \"_\" + context.isRecurring;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products/\" + paymentProductId + \"/networks\" + \"?countryCode=\" + context.countryCode + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&isRecurring=\" + context.isRecurring)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"getPaymentProductDirectory-\" + paymentProductId + \"_\" + currencyCode + \"_\" + countryCode;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/directory?countryCode=\" + countryCode + \"&currencyCode=\" + currencyCode)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to retrieve payment product directory\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"convertAmount-\" + amount + \"_\" + source + \"_\" + target;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/services/convert/amount?source=\" + source + \"&target=\" + target + \"&amount=\" + amount)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to convert amount\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\r\n\t\t\tvar promise = new Promise();\r\n\r\n\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/payments/\" + paymentId + \"/thirdpartystatus\")\r\n\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t.end(function (res) {\r\n\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpromise.reject(\"unable to retrieve third party status\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getCustomerDetails = function(paymentProductId, context) {\r\n\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar cacheKey = \"getCustomerDetails_\" + context.countryCode;\r\n\t\t\tcacheKey = constructCacheKeyFromKeyValues(cacheKey, context.values);\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/customerDetails\")\r\n\t\t\t\t\t.data(JSON.stringify(context))\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(res.responseJSON);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tvar constructCacheKeyFromKeyValues = function(prefix, values) {\r\n\t\t\tvar cacheKey = prefix;\r\n\t\t\tfor (var key in values){\r\n\t\t\t\tif (values.hasOwnProperty(key)) {\r\n\t\t\t\t\tcacheKey += \"_\" + values[key].key + \"_\" + values[key].value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn cacheKey;\r\n\t\t};\r\n\r\n        /* Transforms the JSON representation of a payment product (group) so it matches the result of getPaymentProduct and getPaymentProductGroup. */\r\n        this.transformPaymentProductJSON = function (json) {\r\n            return _cleanJSON(json, _c2SCommunicatorConfiguration.assetUrl)\r\n        };\r\n\t};\r\n\r\n\tconnectsdk.C2SCommunicator = C2SCommunicator;\r\n\treturn C2SCommunicator;\r\n});\r\n","define(\"connectsdk.LabelTemplateElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar LabelTemplateElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.attributeKey = json.attributeKey;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.LabelTemplateElement = LabelTemplateElement;\r\n\treturn LabelTemplateElement;\r\n});","define(\"connectsdk.Attribute\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Attribute = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.key = json.key;\r\n\t\tthis.value = json.value;\r\n\t\tthis.status = json.status;\r\n\t\tthis.mustWriteReason = json.mustWriteReason;\r\n\t};\r\n\r\n\tconnectsdk.Attribute = Attribute;\r\n\treturn Attribute;\r\n});","define(\"connectsdk.AccountOnFileDisplayHints\", [\"connectsdk.core\", \"connectsdk.LabelTemplateElement\"], function(connectsdk, LabelTemplateElement) {\r\n\r\n\tvar _parseJSON = function (_json, _labelTemplate, _labelTemplateElementByAttributeKey) {\r\n\t\tif (_json.labelTemplate) {\r\n\t\t\tfor (var i = 0, l = _json.labelTemplate.length; i < l; i++) {\r\n\t\t\t\tvar labelTemplateElement = new LabelTemplateElement(_json.labelTemplate[i]);\r\n\t\t\t\t_labelTemplate.push(labelTemplateElement);\r\n\t\t\t\t_labelTemplateElementByAttributeKey[labelTemplateElement.attributeKey] = labelTemplateElement;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFileDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.labelTemplate = [];\r\n\t\tthis.labelTemplateElementByAttributeKey = {};\r\n\r\n\t\t_parseJSON(json, this.labelTemplate, this.labelTemplateElementByAttributeKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFileDisplayHints = AccountOnFileDisplayHints;\r\n\treturn AccountOnFileDisplayHints;\r\n});","define(\"connectsdk.AccountOnFile\", [\"connectsdk.core\" ,\"connectsdk.AccountOnFileDisplayHints\", \"connectsdk.Attribute\"], function(connectsdk, AccountOnFileDisplayHints, Attribute) {\r\n\r\n\tvar _parseJSON = function (_json, _attributes, _attributeByKey) {\r\n\t\tif (_json.attributes) {\r\n\t\t\tfor (var i = 0, l = _json.attributes.length; i < l; i++) {\r\n\t\t\t\tvar attribute = new Attribute(_json.attributes[i]);\r\n\t\t\t\t_attributes.push(attribute);\r\n\t\t\t\t_attributeByKey[attribute.key] = attribute;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFile = function (json) {\r\n\t\tvar that = this;\r\n\t\tthis.json = json;\r\n\t\tthis.attributes = [];\r\n\t\tthis.attributeByKey = {};\r\n\t\tthis.displayHints = new AccountOnFileDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.paymentProductId = json.paymentProductId;\r\n\r\n\t\tthis.getMaskedValueByAttributeKey = function(attributeKey) {\r\n\t\t\tvar value = this.attributeByKey[attributeKey].value;\r\n\t\t\tvar wildcardMask;\r\n\t\t\ttry {\r\n\t\t\t\twildcardMask = this.displayHints.labelTemplateElementByAttributeKey[attributeKey].wildcardMask;\r\n\t\t\t} catch (e) {}\r\n\t\t\tif (value !== undefined && wildcardMask !== undefined) {\r\n\t\t\t\tvar maskingUtil = new connectsdk.MaskingUtil();\r\n\t\t\t\treturn maskingUtil.applyMask(wildcardMask, value);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t};\r\n\r\n\t\t_parseJSON(json, this.attributes, this.attributeByKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFile = AccountOnFile;\r\n\treturn AccountOnFile;\r\n});","define(\"connectsdk.PaymentProduct302SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct302SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.networks = json.networks;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct302SpecificData = PaymentProduct302SpecificData;\r\n\treturn PaymentProduct302SpecificData;\r\n});","define(\"connectsdk.PaymentProduct320SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct320SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.gateway = json.gateway;\r\n\t\tthis.networks = json.networks;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct320SpecificData = PaymentProduct320SpecificData;\r\n\treturn PaymentProduct320SpecificData;\r\n});","define(\"connectsdk.PaymentProduct863SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct863SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.integrationTypes = json.integrationTypes;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct863SpecificData = PaymentProduct863SpecificData;\r\n\treturn PaymentProduct863SpecificData;\r\n});","define(\"connectsdk.PaymentProductDisplayHints\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProductDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayOrder = json.displayOrder;\r\n\t\tthis.label = json.label;\r\n\t\tthis.logo = json.logo;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductDisplayHints = PaymentProductDisplayHints;\r\n\treturn PaymentProductDisplayHints;\r\n});","define(\"connectsdk.BasicPaymentProduct\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\", \"connectsdk.PaymentProduct302SpecificData\", \"connectsdk.PaymentProduct320SpecificData\", \"connectsdk.PaymentProduct863SpecificData\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints, PaymentProduct302SpecificData, PaymentProduct320SpecificData, PaymentProduct863SpecificData) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProduct, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (_json.paymentProduct302SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct302SpecificData = new PaymentProduct302SpecificData(_json.paymentProduct302SpecificData);\r\n\t\t}\r\n\t\tif (_json.paymentProduct320SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct320SpecificData = new PaymentProduct320SpecificData(_json.paymentProduct320SpecificData);\r\n\t\t}\r\n\t\tif (_json.paymentProduct863SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct863SpecificData = new PaymentProduct863SpecificData(_json.paymentProduct863SpecificData);\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProduct = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"product\";\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.allowsRecurring = json.allowsRecurring;\r\n\t\tthis.allowsTokenization = json.allowsTokenization;\r\n\t\tthis.autoTokenized  = json.autoTokenized ;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.maxAmount = json.maxAmount;\r\n\t\tthis.minAmount = json.minAmount;\r\n\t\tthis.paymentMethod = json.paymentMethod;\r\n\t\tthis.mobileIntegrationLevel = json.mobileIntegrationLevel;\r\n\t\tthis.usesRedirectionTo3rdParty = json.usesRedirectionTo3rdParty;\r\n\t\tthis.paymentProductGroup = json.paymentProductGroup;\r\n\r\n\t\t_parseJSON(json, this, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProduct = BasicPaymentProduct;\r\n\treturn BasicPaymentProduct;\r\n});","define(\"connectsdk.BasicPaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\r\n\r\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroup = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"group\";\r\n\t\tthis.id = json.id;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroup = BasicPaymentProductGroup;\r\n\treturn BasicPaymentProductGroup;\r\n});","define(\"connectsdk.MaskedString\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar MaskedString = function(formattedValue, cursorIndex) {\r\n\r\n\t\tthis.formattedValue = formattedValue;\r\n\t\tthis.cursorIndex = cursorIndex;\r\n\t};\r\n\r\n\tconnectsdk.MaskedString = MaskedString;\r\n\treturn MaskedString;\r\n});","define(\"connectsdk.MaskingUtil\", [\"connectsdk.core\", \"connectsdk.MaskedString\"], function(connectsdk, MaskedString) {\r\n\r\n\tvar _fillBuffer = function(index, offset, buffer, tempMask, valuec) {\r\n\t\tif (index+offset < valuec.length && index < tempMask.length) {\r\n\t\t\tif ((tempMask[index] === \"9\" && Number(valuec[index+offset]) > -1 && valuec[index+offset] !== \" \") || tempMask[index] === \"*\") {\r\n\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t} else {\r\n\t\t\t\tif (valuec[index+offset] === tempMask[index]) {\r\n\t\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t\t} else if (tempMask[index] !== \"9\" && tempMask[index] !== \"*\") {\r\n\t\t\t\t\tbuffer.push(tempMask[index]);\r\n\t\t\t\t\toffset--;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// offset++;\r\n\t\t\t\t\tvaluec.splice(index+offset, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_fillBuffer(index+1, offset, buffer, tempMask, valuec);\r\n\t\t}\r\n\t};\r\n\r\n\tvar MaskingUtil = function () {\r\n\t\tthis.applyMask = function (mask, newValue, oldValue) {\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = newValue.split(\"\");\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\ttempMask = [];\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttempMask.push(c);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// tempmask now contains the replaceable chars and the non-replaceable masks at the correct index\r\n\t\t\t\t_fillBuffer(0, 0, buffer, tempMask, valuec);\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnewValue = buffer.join(\"\");\r\n\t\t\tvar cursor = 1;\r\n\t\t\t// calculate the cursor index\r\n\t\t\tif (oldValue) {\r\n\t\t\t\tvar tester = oldValue.split(\"\");\r\n\t\t\t\tfor (var i = 0, il = buffer.length; i < il; i++) {\r\n\t\t\t\t\tif (buffer[i] !== tester[i]) {\r\n\t\t\t\t\t\tcursor = i+1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (newValue.substring(0, newValue.length -1) === oldValue) {\r\n\t\t\t\tcursor = newValue.length + 1;\r\n\t\t\t}\r\n\t\t\treturn new MaskedString(newValue, cursor);\r\n\t\t};\r\n\r\n\t\tthis.getMaxLengthBasedOnMask = function (mask) {\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tnewLength = -1;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tnewLength++;\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tnewLength--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newLength;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.removeMask = function (mask, value) {\r\n\t\t\t// remove the mask from the masked input\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = (value) ? value.split(\"\") : [];\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tvalueIndex = -1,\r\n\t\t\t\t\t\tinMask = false;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tvalueIndex++;\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tvalueIndex--;\r\n\t\t\t\t\t\tif (c === \"{\") {\r\n\t\t\t\t\t\t\tinMask = true;\r\n\t\t\t\t\t\t} else if (c === \"}\") {\r\n\t\t\t\t\t\t\tinMask = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (inMask && valuec[valueIndex]) {\r\n\t\t\t\t\t\t\tbuffer.push(valuec[valueIndex]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn buffer.join(\"\").trim();\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.MaskingUtil = MaskingUtil;\r\n\treturn MaskingUtil;\r\n});\r\n","define(\"connectsdk.ValidationRuleLuhn\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLuhn = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.validate = function (value) {\r\n\t\t\tvar luhnArr = [[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]]\r\n\t\t\t\t,sum = 0;\r\n\r\n\t   \t\tvalue.replace(/\\D+/g,\"\").replace(/[\\d]/g, function(c, p, o) {\r\n\t\t        sum += luhnArr[ (o.length-p)&1 ][ parseInt(c,10) ];\r\n\t\t    });\r\n\t\t    return (sum%10 === 0) && (sum > 0);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLuhn = ValidationRuleLuhn;\r\n\treturn ValidationRuleLuhn;\r\n});\r\n","define(\"connectsdk.ValidationRuleExpirationDate\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\tvar _validateDateFormat = function (value) {\r\n\t\t// value is mmYY or mmYYYY\r\n\t\tvar pattern = /\\d{4}|\\d{6}$/g;\r\n\t\treturn pattern.test(value);\r\n\t};\r\n\r\n\tvar ValidationRuleExpirationDate = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type;\r\n\t\tthis.errorMessageId = json.type;\r\n\r\n\t\tthis.validate = function (value) {\r\n\r\n\t\t\tvalue = value.replace(/[^\\d]/g, '');\r\n\t\t\tif (!_validateDateFormat(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar split;\r\n\t\t\tif (value.length === 4) {\r\n\t\t\t\tsplit = [value.substring(0, 2), \"20\" + value.substring(2, 4)];\r\n\t\t\t} else if (value.length === 6) {\r\n\t\t\t\tsplit = [value.substring(0, 2), value.substring(2, 6)];\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// The month is zero-based, so subtract one.\r\n\t\t\tvar expirationMonth = split[0] - 1;\r\n\t\t\tvar expirationYear = split[1];\r\n\t\t\tvar expirationDate = new Date(expirationYear, expirationMonth, 1);\r\n\r\n\t\t\t// Compare the input with the parsed date, to check if the date rolled over.\r\n\t\t\tif (expirationDate.getMonth() !== Number(expirationMonth) || expirationDate.getFullYear() !== Number(expirationYear)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// For comparison, set the current year & month and the maximum allowed expiration date.\r\n\t\t\tvar nowWithDay = new Date();\r\n\t\t\tvar now = new Date(nowWithDay.getFullYear(), nowWithDay.getMonth(), 1);\r\n\t\t\tvar maxExpirationDate = new Date(nowWithDay.getFullYear() + 25, 11, 1);\r\n\r\n\t\t\t// The card is still valid if it expires this month.\r\n\t\t\treturn expirationDate >= now && expirationDate <= maxExpirationDate;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleExpirationDate = ValidationRuleExpirationDate;\r\n\treturn ValidationRuleExpirationDate;\r\n});\r\n","define(\"connectsdk.ValidationRuleFixedList\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleFixedList = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.allowedValues = json.attributes.allowedValues;\r\n\r\n\t\tthis.validate = function (value) {\r\n\t\t\tfor (var i = 0, il = this.allowedValues.length; i < il; i++) {\r\n\t\t\t\tif (this.allowedValues[i] === value) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleFixedList = ValidationRuleFixedList;\r\n\treturn ValidationRuleFixedList;\r\n});\r\n","define(\"connectsdk.ValidationRuleLength\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLength = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxLength = json.attributes.maxLength;\r\n\t\tthis.minLength = json.attributes.minLength;\r\n\r\n\t\tthis.validate = function (value) {\r\n\t\t\treturn this.minLength <= value.length && value.length <= this.maxLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLength = ValidationRuleLength;\r\n\treturn ValidationRuleLength;\r\n});\r\n","define(\"connectsdk.ValidationRuleRange\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRange = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxValue = json.attributes.maxValue;\r\n\t\tthis.minValue = json.attributes.minValue;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\tif (isNaN(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = Number(value);\r\n\t\t\treturn this.minValue <= value && value <= this.maxValue;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRange = ValidationRuleRange;\r\n\treturn ValidationRuleRange;\r\n});\r\n","define(\"connectsdk.ValidationRuleRegularExpression\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRegularExpression = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.regularExpression = json.attributes.regularExpression;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(this.regularExpression);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRegularExpression = ValidationRuleRegularExpression;\r\n\treturn ValidationRuleRegularExpression;\r\n});\r\n","define(\"connectsdk.ValidationRuleResidentIdNumber\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleResidentIdNumber = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\r\n        // https://en.wikipedia.org/wiki/Resident_Identity_Card\r\n\t\tvar weights = [];\r\n\t\t// storing weights in the reverse order so that we can begin\r\n\t\t// from the 0th position of ID while calculating checksum\r\n\t\tfor(var i=18; i > 0; i--) {\r\n\t\t\tweights.push(Math.pow(2, i-1) % 11);\r\n\t\t}\r\n\r\n\t\tthis.validate = function (value) {\r\n\t\t\tif(value.length < 15) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(value.length == 15) {\r\n\t\t\t\treturn !isNaN(value);\r\n\t\t\t}\r\n\r\n\t\t\tif(value.length < 18 || value.length > 18) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n            var sum = 0;\r\n            for(var i = 0; i < value.length-1; i++) {\r\n            \tsum += value.charAt(i) * weights[i];\r\n            }\r\n\r\n            var checkSum = (12 - (sum % 11)) % 11;\r\n            var csChar = value.charAt(17);\r\n\r\n            if(checkSum < 10) {\r\n               return (checkSum == csChar); // check only values\r\n            }\r\n\r\n\t\t    return (csChar === 'X'); // check the type as well\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleResidentIdNumber = ValidationRuleResidentIdNumber;\r\n\treturn ValidationRuleResidentIdNumber;\r\n});","define(\"connectsdk.ValidationRuleEmailAddress\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleEmailAddress = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\tthis.errorMessageId = json.type;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(/^[^@\\.]+(\\.[^@\\.]+)*@([^@\\.]+\\.)*[^@\\.]+\\.[^@\\.][^@\\.]+$/i);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleEmailAddress = ValidationRuleEmailAddress;\r\n\treturn ValidationRuleEmailAddress;\r\n});","define(\"connectsdk.ValidationRuleTermsAndConditions\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleTermsAndConditions = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\tthis.errorMessageId = json.type;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\treturn true === value || \"true\" === value;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleTermsAndConditions = ValidationRuleTermsAndConditions;\r\n\treturn ValidationRuleTermsAndConditions;\r\n});","define(\"connectsdk.ValidationRuleBoletoBancarioRequiredness\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleBoletoBancarioRequiredness = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.fiscalNumberLength = json.attributes.fiscalNumberLength;\r\n\r\n\t\tthis.validate = function (value, fiscalNumberValue) {\r\n\t\t\tif (typeof fiscalNumberValue === 'undefined') {\r\n\t\t\t\tfiscalNumberValue = '';\r\n\t\t\t}\r\n\r\n\t\t\treturn (fiscalNumberValue.length === this.fiscalNumberLength && value.length > 0) || fiscalNumberValue.length !== this.fiscalNumberLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleBoletoBancarioRequiredness = ValidationRuleBoletoBancarioRequiredness;\r\n\treturn ValidationRuleBoletoBancarioRequiredness;\r\n});\r\n","define('connectsdk.ValidationRuleIban', ['connectsdk.core'], function (connectsdk) {\r\n\r\n  /**\r\n   * Sanitize value by remove all unwanted chars of a Iban format\r\n   *\r\n   * @param {String} value\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  var _sanitizeValue = function (value) {\r\n    return value.replace(/[^\\d\\w]+/g, '').toUpperCase();\r\n  };\r\n\r\n  /**\r\n   * Get state if given value is a valid Iban format\r\n   *\r\n   * @param {String} value\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  var _isValidFormat = function (value) {\r\n    return typeof value === 'string' && /^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{7}([A-Z0-9]?){0,16}$/.test(_sanitizeValue(value));\r\n  };\r\n\r\n  /**\r\n   * Convert a value to a string needed for validation calculations\r\n   *\r\n   * @param {String} value\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  var _toComputedString = function (value) {\r\n    return _sanitizeValue(value)\r\n\r\n    // place the first 4 chars to the end\r\n      .replace(/(^.{4})(.*)/, '$2$1')\r\n\r\n      // replace letters by corresponding numbers A=10 / Z=35\r\n      .replace(/[A-Z]/g, function (d) {\r\n        return d.charCodeAt(0) - 55;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Validate Iban by given json\r\n   *\r\n   * @param {Object} json\r\n   * @constructor\r\n   */\r\n  var ValidationRuleIban = function (json) {\r\n    this.json           = json;\r\n    this.type           = json.type;\r\n    this.errorMessageId = json.type;\r\n\r\n    /**\r\n     * Validate Iban nrule\r\n     *\r\n     * @see https://github.com/arhs/iban.js/blob/master/iban.js\r\n     *\r\n     * @param   {string} value\r\n     * @returns {boolean}\r\n     */\r\n    this.validate = function (value) {\r\n\r\n      // bail if format is invalid\r\n      if (!_isValidFormat(value)) {\r\n        return false;\r\n      }\r\n\r\n      // Check if reminder module 97 equals 1\r\n      // only then it should pass the validation\r\n      var remainder = _toComputedString(value),\r\n          block;\r\n\r\n      while (remainder.length > 2) {\r\n        block     = remainder.slice(0, 9);\r\n        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\r\n      }\r\n\r\n      return (parseInt(remainder, 10) % 97) === 1;\r\n    };\r\n  };\r\n\r\n  connectsdk.ValidationRuleIban = ValidationRuleIban;\r\n  return ValidationRuleIban;\r\n});","define(\"connectsdk.ValidationRuleFactory\", [\"connectsdk.core\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleTermsAndConditions\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleBoletoBancarioRequiredness\", \"connectsdk.ValidationRuleIban\", \"connectsdk.ValidationRuleResidentIdNumber\"], function (connectsdk, ValidationRuleEmailAddress, ValidationRuleTermsAndConditions, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleBoletoBancarioRequiredness, ValidationRuleIban, ValidationRuleResidentIdNumber) {\r\n\r\n    var validationRules = {\r\n        EmailAddress : ValidationRuleEmailAddress,\r\n        TermsAndConditions: ValidationRuleTermsAndConditions,\r\n        ExpirationDate : ValidationRuleExpirationDate,\r\n        FixedList : ValidationRuleFixedList,\r\n        Length : ValidationRuleLength,\r\n        Luhn: ValidationRuleLuhn,\r\n        Range: ValidationRuleRange,\r\n        RegularExpression: ValidationRuleRegularExpression,\r\n        BoletoBancarioRequiredness: ValidationRuleBoletoBancarioRequiredness,\r\n        Iban: ValidationRuleIban,\r\n        ResidentIdNumber: ValidationRuleResidentIdNumber\r\n    }\r\n\r\n    var ValidationRuleFactory = function () {\r\n        this.makeValidator = function (json) {\r\n            try {\r\n                var rule = json.type.charAt(0).toUpperCase() + json.type.slice(1);\r\n                return new validationRules[rule](json);\r\n            } catch (e) {\r\n                console.warn('no validator for ', rule);\r\n            }\r\n            return null;\r\n        };\r\n    };\r\n\r\n    connectsdk.ValidationRuleFactory = ValidationRuleFactory;\r\n    return ValidationRuleFactory;\r\n});\r\n","define(\"connectsdk.DataRestrictions\", [\"connectsdk.core\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleTermsAndConditions\", \"connectsdk.ValidationRuleIban\", \"connectsdk.ValidationRuleResidentIdNumber\", \"connectsdk.ValidationRuleFactory\"], function(connectsdk, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleEmailAddress, ValidationRuleTermsAndConditions, ValidationRuleIban, ValidationRuleResidentIdNumber, ValidationRuleFactory) {\r\n\r\n\tvar DataRestrictions = function (json, mask) {\r\n\r\n\t\tvar _parseJSON = function (_json, _validationRules, _validationRuleByType) {\r\n\t\t    var validationRuleFactory = new ValidationRuleFactory();\r\n\t\t\tif (_json.validators) {\r\n\t\t\t\tfor (var key in _json.validators) {\r\n\t\t\t\t\tvar validationRule = validationRuleFactory.makeValidator({type: key, attributes: _json.validators[key]});\r\n\t\t\t\t\tif (validationRule) {\r\n\t\t\t\t\t\t_validationRules.push(validationRule);\r\n\t\t\t\t\t\t_validationRuleByType[validationRule.type] = validationRule;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.isRequired = json.isRequired;\r\n\t\tthis.validationRules = [];\r\n\t\tthis.validationRuleByType = {};\r\n\r\n\t\t_parseJSON(json, this.validationRules, this.validationRuleByType);\r\n\t};\r\n\r\n\tconnectsdk.DataRestrictions = DataRestrictions;\r\n\treturn DataRestrictions;\r\n});","define(\"connectsdk.ValueMappingElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValueMappingElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayName = json.displayName;\r\n\t\tthis.value = json.value;\r\n\t};\r\n\r\n\tconnectsdk.ValueMappingElement = ValueMappingElement;\r\n\treturn ValueMappingElement;\r\n});","define(\"connectsdk.FormElement\", [\"connectsdk.core\", \"connectsdk.ValueMappingElement\"], function(connectsdk, ValueMappingElement) {\r\n\r\n\tvar FormElement = function (json) {\r\n\r\n\t\tvar _parseJSON = function (_json, _valueMapping) {\r\n\t\t\tif (_json.valueMapping) {\r\n\t\t\t\tfor (var i = 0, l = _json.valueMapping.length; i < l; i++) {\r\n\t\t\t\t\t_valueMapping.push(new ValueMappingElement(_json.valueMapping[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type;\r\n\t\tthis.valueMapping = [];\r\n\r\n\t\t_parseJSON(json, this.valueMapping);\r\n\t};\r\n\r\n\tconnectsdk.FormElement = FormElement;\r\n\treturn FormElement;\r\n});\r\n","define(\"connectsdk.Tooltip\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Tooltip = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.image = json.image;\r\n\t\tthis.label = json.label;\r\n\t};\r\n\r\n\tconnectsdk.Tooltip = Tooltip;\r\n\treturn Tooltip;\r\n});","define(\"connectsdk.PaymentProductFieldDisplayHints\", [\"connectsdk.core\", \"connectsdk.Tooltip\", \"connectsdk.FormElement\"], function(connectsdk, Tooltip, FormElement) {\r\n\r\n\tvar PaymentProductFieldDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n \t\tthis.displayOrder = json.displayOrder;\r\n\t\tif (json.formElement) {\r\n\t\t\tthis.formElement = new FormElement(json.formElement);\r\n\t\t}\r\n\t\tthis.label = json.label;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.obfuscate = json.obfuscate;\r\n\t\tthis.placeholderLabel = json.placeholderLabel;\r\n\t\tthis.preferredInputType = json.preferredInputType;\r\n\t\tthis.tooltip = json.tooltip? new Tooltip(json.tooltip): undefined;\r\n\t\tthis.alwaysShow = json.alwaysShow;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductFieldDisplayHints = PaymentProductFieldDisplayHints;\r\n\treturn PaymentProductFieldDisplayHints;\r\n});","define(\"connectsdk.PaymentProductField\", [\"connectsdk.core\", \"connectsdk.PaymentProductFieldDisplayHints\", \"connectsdk.DataRestrictions\", \"connectsdk.MaskingUtil\"], function(connectsdk, PaymentProductFieldDisplayHints, DataRestrictions, MaskingUtil) {\r\n\tvar PaymentProductField = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayHints = json.displayHints ? new PaymentProductFieldDisplayHints(json.displayHints) : '';\r\n\t\tthis.dataRestrictions = new DataRestrictions(json.dataRestrictions, this.displayHints ? this.displayHints.mask : '');\r\n\t\tthis.id = json.id;\r\n\t\tthis.type = json.type;\r\n\t\tvar _errorCodes = [];\r\n\r\n\t\tthis.getErrorCodes = function (value) {\r\n\t\t\tif (value) {\r\n\t\t\t\t_errorCodes = [];\r\n\t\t\t\tthis.isValid(value);\r\n\t\t\t}\r\n\t\t\treturn _errorCodes;\r\n\t\t};\r\n\t\tthis.isValid = function (value) {\r\n\t\t\t// isValid checks all datarestrictions\r\n\t\t\tvar validators = this.dataRestrictions.validationRules;\r\n\t\t\tvar hasError = false;\r\n\r\n\t\t\t// Apply masking value first\r\n\t\t\tvar maskedValue = this.applyMask(value);\r\n\t\t\tvalue = this.removeMask(maskedValue.formattedValue);\r\n\t\t\tfor (var i = 0, il = validators.length; i < il; i++) {\r\n\t\t\t\tvar validator = validators[i];\r\n\t\t\t\tif (!validator.validate(value)) {\r\n\t\t\t\t\thasError = true;\r\n\t\t\t\t\t_errorCodes.push(validator.errorMessageId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn !hasError;\r\n\t\t};\r\n\t\tthis.applyMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.mask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.applyWildcardMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.wildcardMask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.removeMask = function (value) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.removeMask(this.displayHints.mask, value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductField = PaymentProductField;\r\n\treturn PaymentProductField;\r\n});","define(\"connectsdk.PaymentProduct\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProduct = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct = PaymentProduct;\r\n\treturn PaymentProduct;\r\n});\r\n","define(\"connectsdk.PaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProductGroup = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.json = json;\r\n\t\tbasicPaymentProduct.json.type = \"group\";\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductGroup = PaymentProductGroup;\r\n\treturn PaymentProductGroup;\r\n});","define(\"connectsdk.BasicPaymentProducts\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\"], function(connectsdk, BasicPaymentProduct) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProducts, _accountsOnFile, _paymentProductById, _accountOnFileById, _paymentProductByAccountOnFileId) {\r\n\t\tif (_json.paymentProducts) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProducts.length; i < il; i++) {\r\n\t\t\t\tvar paymentProduct = new BasicPaymentProduct(_json.paymentProducts[i]);\r\n\t\t\t\t_paymentProducts.push(paymentProduct);\r\n\t\t\t\t_paymentProductById[paymentProduct.id] = paymentProduct;\r\n\r\n\t\t\t\tif (paymentProduct.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProduct.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t\t_paymentProductByAccountOnFileId[aof.id] = paymentProduct;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProducts = function (json) {\r\n\t\tthis.basicPaymentProducts = [];\r\n\t\tthis.basicPaymentProductById = {};\r\n\t\tthis.basicPaymentProductByAccountOnFileId = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProducts, this.accountsOnFile, this.basicPaymentProductById, this.accountOnFileById, this.basicPaymentProductByAccountOnFileId);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProducts = BasicPaymentProducts;\r\n\treturn BasicPaymentProducts;\r\n});","define(\"connectsdk.BasicPaymentProductGroups\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProductGroup\"], function(connectsdk, BasicPaymentProductGroup) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProductGroups, _accountsOnFile, _paymentProductGroupById, _accountOnFileById) {\r\n\t\tif (_json.paymentProductGroups) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductGroup = new BasicPaymentProductGroup(_json.paymentProductGroups[i]);\r\n\t\t\t\t_paymentProductGroups.push(paymentProductGroup);\r\n\t\t\t\t_paymentProductGroupById[paymentProductGroup.id] = paymentProductGroup;\r\n\r\n\t\t\t\tif (paymentProductGroup.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProductGroup.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroups = function (json) {\r\n\t\tthis.basicPaymentProductGroups = [];\r\n\t\tthis.basicPaymentProductGroupById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProductGroups, this.accountsOnFile, this.basicPaymentProductGroupById, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroups = BasicPaymentProductGroups;\r\n\treturn BasicPaymentProductGroups;\r\n});","define(\"connectsdk.BasicPaymentItems\", [\"connectsdk.core\"], function(connectsdk) {\r\n\t\"use strict\";\r\n\r\n\t\tvar _parseJson = function (_products, _groups, _basicPaymentItems) {\r\n\t\tvar doRemove = [];\r\n\t\tif (_groups) {\r\n\t\t\tfor (var i = 0, il = _groups.basicPaymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar groupId = _groups.basicPaymentProductGroups[i].id,\r\n\t\t\t\t\t\tgroupReplaced = false;\r\n\t\t\t\tfor (var j = 0, jl = _products.basicPaymentProducts.length; j < jl; j++) {\r\n\t\t\t\t\tvar productMethod = _products.basicPaymentProducts[j].paymentProductGroup;\r\n\t\t\t\t\tif (productMethod === groupId && groupReplaced === false) {\r\n\t\t\t\t\t\t// replace instance by group\r\n\t\t\t\t\t\t_products.basicPaymentProducts.splice(j, 1, _groups.basicPaymentProductGroups[i]);\r\n\t\t\t\t\t\tgroupReplaced = true;\r\n\t\t\t\t\t} else if (productMethod === groupId && groupReplaced === true) {\r\n\t\t\t\t\t\t// mark for removal\r\n\t\t\t\t\t\tdoRemove.push(j);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = doRemove.length -1, il = 0; i >= il; i--) {\r\n\t\t\t\t_products.basicPaymentProducts.splice(doRemove[i], 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t_basicPaymentItems.basicPaymentItems = JSON.parse(JSON.stringify(_products.basicPaymentProducts));\r\n\t\tfor (var i = 0, il = _basicPaymentItems.basicPaymentItems.length; i < il; i++) {\r\n\t\t\tvar basicPaymentItem = _basicPaymentItems.basicPaymentItems[i];\r\n\t\t\t_basicPaymentItems.basicPaymentItemById[basicPaymentItem.id] = basicPaymentItem;\r\n\t\t\tif (basicPaymentItem.accountsOnFile) {\r\n\t\t\t\tvar aofs = basicPaymentItem.accountsOnFile;\r\n\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t_basicPaymentItems.accountsOnFile.push(aof);\r\n\t\t\t\t\t_basicPaymentItems.accountOnFileById[aof.id] = aof;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tvar BasicPaymentItems = function (products, groups) {\r\n\t\tthis.basicPaymentItems = [];\r\n\t\tthis.basicPaymentItemById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJson(products, groups, this);\r\n\t};\r\n\tconnectsdk.BasicPaymentItems = BasicPaymentItems;\r\n\treturn BasicPaymentItems;\r\n});","define(\"connectsdk.PaymentRequest\", [\"connectsdk.core\"], function(connectsdk) {\r\n  var PaymentRequest = function(clientSessionID) {\r\n    var _clientSessionID = clientSessionID;\r\n    var _fieldValues = {};\r\n    var _paymentProduct = null;\r\n    var _accountOnFile = null;\r\n    var _tokenize = false;\r\n\r\n    this.isValid = function() {\r\n      var errors = this.getErrorMessageIds();\r\n      // besides checking the fields for errors check if all mandatory fields are present as well\r\n      var paymentProduct = this.getPaymentProduct();\r\n      if (!paymentProduct) {\r\n        return false;\r\n      }\r\n      var allRequiredFieldsPresent = true;\r\n      for (var i = 0; i < paymentProduct.paymentProductFields.length; i++) {\r\n        var field = paymentProduct.paymentProductFields[i];\r\n        if (field.dataRestrictions.isRequired) {\r\n          // is this field present in the request?\r\n          var storedValue = this.getValue(field.id);\r\n          if (!storedValue && !this.getAccountOnFile()) {\r\n              // if we have an acoount on file the account on file could have the field, so we can ignore it\r\n            allRequiredFieldsPresent = false;\r\n          }\r\n        }\r\n      }\r\n      return errors.length === 0 && allRequiredFieldsPresent;\r\n    };\r\n    this.setValue = function(paymentProductFieldId, value) {\r\n      _fieldValues[paymentProductFieldId] = value;\r\n    };\r\n    this.setTokenize = function(tokenize) {\r\n      _tokenize = tokenize;\r\n    };\r\n    this.getTokenize = function() {\r\n      return _tokenize;\r\n    };\r\n    this.getErrorMessageIds = function() {\r\n      var errors = [];\r\n      for (key in _fieldValues) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[key];\r\n        if (paymentProductField) {\r\n          errors = errors.concat(paymentProductField.getErrorCodes(_fieldValues[key]));\r\n        }\r\n      }\r\n      return errors;\r\n    };\r\n    this.getValue = function(paymentProductFieldId) {\r\n      return _fieldValues[paymentProductFieldId];\r\n    };\r\n    this.getValues = function() {\r\n      return _fieldValues;\r\n    };\r\n    this.getMaskedValue = function(paymentProductFieldId) {\r\n      var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n      var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n      return maskedString.formattedValue();\r\n    };\r\n    this.getMaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n        result[paymentProductFieldId] = maskedString.formattedValue;\r\n      }\r\n      return result;\r\n    };\r\n    this.getUnmaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        if (paymentProductField) {\r\n          var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n          var formattedValue = maskedString.formattedValue;\r\n          result[paymentProductFieldId] = paymentProductField.removeMask(formattedValue);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n    this.setPaymentProduct = function(paymentProduct) {\r\n      if (paymentProduct.type === \"group\") {\r\n        return;\r\n      }\r\n      _paymentProduct = paymentProduct;\r\n    };\r\n    this.getPaymentProduct = function() {\r\n      return _paymentProduct;\r\n    };\r\n    this.setAccountOnFile = function(accountOnFile) {\r\n      for (var i = 0, il = accountOnFile.attributes.length; i < il; i++) {\r\n        var attribute = accountOnFile.attributes[i];\r\n        delete _fieldValues[attribute.key];\r\n      }\r\n      _accountOnFile = accountOnFile;\r\n    };\r\n    this.getAccountOnFile = function() {\r\n      return _accountOnFile;\r\n    };\r\n    this.getClientSessionID = function() {\r\n\t\t    return clientSessionID;\r\n    };\r\n  };\r\n  connectsdk.PaymentRequest = PaymentRequest;\r\n  return PaymentRequest;\r\n});","define(\"connectsdk.C2SPaymentProductContext\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n    var C2SPaymentProductContext = function (payload) {\r\n        this.totalAmount = typeof payload.totalAmount !== 'undefined' ? payload.totalAmount : '';\r\n        this.countryCode = payload.countryCode;\r\n        this.isRecurring = typeof payload.isRecurring !== 'undefined' ? payload.isRecurring : '';\r\n        this.currency = payload.currency;\r\n\r\n        if (typeof payload.locale !== 'undefined') {\r\n            this.locale = payload.locale;\r\n        }\r\n\r\n        if (typeof payload.accountOnFileId !== 'undefined') {\r\n            this.accountOnFileId = parseInt(payload.accountOnFileId);\r\n        }\r\n    };\r\n\r\n  connectsdk.C2SPaymentProductContext = C2SPaymentProductContext;\r\n  return C2SPaymentProductContext;\r\n});\r\n","define(\"connectsdk.JOSEEncryptor\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar pki = forge.pki;\r\n\tvar asn1 = forge.asn1;\r\n\tvar CEKKEYLENGTH = 512;\r\n\tvar IVLENGTH = 128;\r\n\r\n\tvar base64UrlEncode = function(str) {\r\n\t\tstr = forge.util.encode64(str);\r\n\t\tstr = str.split('=')[0];\r\n\t\tstr = str.replace(/\\+/g, '-');\r\n\t\tstr = str.replace(/\\//g, '_');\r\n\t\treturn str;\r\n\t};\r\n\r\n\tvar createProtectedHeader = function(kid) {\r\n\t\tvar JOSEHeader = {\r\n\t\t\t\"alg\" : \"RSA-OAEP\",\r\n\t\t\t\"enc\" : \"A256CBC-HS512\",\r\n\t\t\t\"kid\" : kid\r\n\t\t};\r\n\t\treturn JSON.stringify(JOSEHeader);\r\n\t};\r\n\r\n\tvar decodePemPublicKey = function(publickeyB64Encoded) {\r\n\t\t// step 1: base64decode\r\n\t\tvar publickeyB64Decoded = forge.util.decode64(publickeyB64Encoded);\r\n\t\t// create a bytebuffer with these bytes\r\n\t\tvar buffer2 = forge.util.createBuffer(publickeyB64Decoded, 'raw');\r\n\t\t// convert DER to ASN1 object\r\n\t\tvar publickeyObject2 = forge.asn1.fromDer(buffer2);\r\n\t\t// convert to publicKey object\r\n\t\tvar publicKey2 = pki.publicKeyFromAsn1(publickeyObject2);\r\n\t\treturn publicKey2;\r\n\t};\r\n\r\n\tvar encryptContentEncryptionKey = function(CEK, publicKey) {\r\n\t\t// encrypt CEK with OAEP+SHA-1+MGF1Padding\r\n\t\tvar encryptedCEK = publicKey.encrypt(CEK, 'RSA-OAEP');\r\n\t\treturn encryptedCEK;\r\n\t};\r\n\r\n\tvar encryptPayload = function(payload, encKey, initializationVector) {\r\n\t\tvar cipher = forge.cipher.createCipher('AES-CBC', encKey);\r\n\t\tcipher.start({\r\n\t\t\tiv : initializationVector\r\n\t\t});\r\n\t\tcipher.update(forge.util.createBuffer(payload));\r\n\t\tcipher.finish();\r\n\t\treturn cipher.output.bytes();\r\n\t};\r\n\r\n\tvar calculateAdditionalAuthenticatedDataLength = function(encodededProtectedHeader) {\r\n\t\tvar buffer = forge.util.createBuffer(encodededProtectedHeader);\r\n\t\tvar lengthInBits = buffer.length() * 8;\r\n\r\n\t\tvar buffer2 = forge.util.createBuffer();\r\n\t\t// convert int to 64bit big endian\r\n\t\tbuffer2.putInt32(0);\r\n\t\tbuffer2.putInt32(lengthInBits);\r\n\t\treturn buffer2.bytes();\r\n\t};\r\n\r\n\tvar calculateHMAC = function(macKey, encodededProtectedHeader, initializationVector, cipherText, al) {\r\n\t\tvar buffer = forge.util.createBuffer();\r\n\t\tbuffer.putBytes(encodededProtectedHeader);\r\n\t\tbuffer.putBytes(initializationVector);\r\n\t\tbuffer.putBytes(cipherText);\r\n\t\tbuffer.putBytes(al);\r\n\r\n\t\tvar hmacInput = buffer.bytes();\r\n\r\n\t\tvar hmac = forge.hmac.create();\r\n\t\thmac.start(forge.sha512.create(), macKey);\r\n\t\thmac.update(hmacInput);\r\n\t\treturn hmac.digest().bytes();\r\n\t};\r\n\r\n\tvar JOSEEncryptor = function() {\r\n\r\n\t\tthis.encrypt = function(plainTextValues, publicKeyResponse) {\r\n\t\t\t// Create protected header and encode it with Base64 encoding\r\n\t\t\tvar payload = JSON.stringify(plainTextValues);\r\n\t\t\tvar protectedHeader = createProtectedHeader(publicKeyResponse.keyId);\r\n\t\t\tvar encodededProtectedHeader = base64UrlEncode(protectedHeader);\r\n\r\n\t\t\t// Create ContentEncryptionKey, is a random byte[]\r\n\t\t\tvar CEK = forge.random.getBytesSync(CEKKEYLENGTH / 8);\r\n\t\t\tvar publicKey = decodePemPublicKey(publicKeyResponse.publicKey);\r\n\r\n\t\t\t// Encrypt the contentEncryptionKey with the GC gateway publickey and encode it with Base64 encoding\r\n\t\t\tvar encryptedContentEncryptionKey = encryptContentEncryptionKey(CEK, publicKey);\r\n\t\t\tvar encodedEncryptedContentEncryptionKey = base64UrlEncode(encryptedContentEncryptionKey);\r\n\r\n\t\t\t// Split the contentEncryptionKey in ENC_KEY and MAC_KEY for using hmac\r\n\t\t\tvar macKey = CEK.substring(0, CEKKEYLENGTH / 2 / 8);\r\n\t\t\tvar encKey = CEK.substring(CEKKEYLENGTH / 2 / 8);\r\n\r\n\t\t\t// Create Initialization Vector\r\n\t\t\tvar initializationVector = forge.random.getBytesSync(IVLENGTH / 8);\r\n\t\t\tvar encodededinitializationVector = base64UrlEncode(initializationVector);\r\n\r\n\t\t\t// Encrypt content with ContentEncryptionKey and Initialization Vector\r\n\t\t\tvar cipherText = encryptPayload(payload, encKey, initializationVector);\r\n\t\t\tvar encodedCipherText = base64UrlEncode(cipherText);\r\n\r\n\t\t\t// Create Additional Authenticated Data  and Additional Authenticated Data Length\r\n\t\t\tvar al = calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader);\r\n\r\n\t\t\t// Calculates HMAC\r\n\t\t\tvar calculatedHmac = calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al);\r\n\r\n\t\t\t// Truncate HMAC Value to Create Authentication Tag\r\n\t\t\tvar authenticationTag = calculatedHmac.substring(0, calculatedHmac.length / 2);\r\n\t\t\tvar encodedAuthenticationTag = base64UrlEncode(authenticationTag);\r\n\r\n\t\t\treturn encodededProtectedHeader + \".\" + encodedEncryptedContentEncryptionKey + \".\" + encodededinitializationVector + \".\" + encodedCipherText + \".\" + encodedAuthenticationTag;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.JOSEEncryptor = JOSEEncryptor;\r\n\treturn JOSEEncryptor;\r\n});","define(\"connectsdk.Encryptor\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.JOSEEncryptor\", \"connectsdk.Util\"], function(connectsdk, Promise, JOSEEncryptor, Util) {\r\n\r\n\tvar _util = Util.getInstance();\r\n\r\n\tvar Encryptor = function(publicKeyResponsePromise) {\r\n\t\tthis.encrypt = function(paymentRequest) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar encryptedString = '';\r\n\t\t\tpublicKeyResponsePromise.then(function (publicKeyResponse) {\r\n\t\t\t\tif (paymentRequest.isValid()) {\r\n\r\n\t\t\t\t\tvar blob = {\r\n\t\t\t\t\t   clientSessionId: paymentRequest.getClientSessionID()\r\n\t\t\t\t\t   ,nonce: forge.util.bytesToHex(forge.random.getBytesSync(16))\r\n\t\t\t\t\t   ,paymentProductId: paymentRequest.getPaymentProduct().id\r\n                       ,tokenize: paymentRequest.getTokenize()\r\n                    };\r\n\r\n\t\t\t\t\tif (paymentRequest.getAccountOnFile()) {\r\n                        blob[\"accountOnFileId\"] = paymentRequest.getAccountOnFile().id;\r\n                    }\r\n\r\n                    var paymentValues = [], values = paymentRequest.getUnmaskedValues();\r\n                    var ownValues = Object.getOwnPropertyNames(values);\r\n\t\t\t\t\tfor (var i = 0; i < ownValues.length; i++) {\r\n\t\t\t\t\t\tvar propertyName = ownValues[i];\r\n\t\t\t\t\t\tif (propertyName !== \"length\") {\r\n\t\t\t\t\t\t\tpaymentValues.push({\r\n\t\t\t\t\t\t\t\tkey: propertyName,\r\n\t\t\t\t\t\t\t\tvalue: values[propertyName]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    blob[\"paymentValues\"] = paymentValues;\r\n\r\n\t\t\t\t\tblob[\"collectedDeviceInformation\"] = _util.collectDeviceInformation();\r\n\r\n\t\t\t\t\t// use blob to encrypt\r\n\t\t\t\t\tvar joseEncryptor = new JOSEEncryptor();\r\n\t\t\t\t\tencryptedString = joseEncryptor.encrypt(blob, publicKeyResponse);\r\n\t\t\t\t\tpromise.resolve(encryptedString);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpromise.reject(paymentRequest.getErrorMessageIds());\r\n\t\t\t\t}\r\n\t\t\t}, function (error) {\r\n\t\t\t\tpromise.reject(error);\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.Encryptor = Encryptor;\r\n\treturn Encryptor;\r\n});\r\n","define(\"connectsdk.Session\", [\"connectsdk.core\", \"connectsdk.C2SCommunicator\", \"connectsdk.C2SCommunicatorConfiguration\", \"connectsdk.IinDetailsResponse\", \"connectsdk.promise\", \"connectsdk.C2SPaymentProductContext\", \"connectsdk.BasicPaymentProducts\", \"connectsdk.BasicPaymentProductGroups\", \"connectsdk.PaymentProduct\", \"connectsdk.PaymentProductGroup\", \"connectsdk.BasicPaymentItems\", \"connectsdk.PaymentRequest\", \"connectsdk.Encryptor\"], function (connectsdk, C2SCommunicator, C2SCommunicatorConfiguration, IinDetailsResponse, Promise, C2SPaymentProductContext, BasicPaymentProducts, BasicPaymentProductGroups, PaymentProduct, PaymentProductGroup, BasicPaymentItems, PaymentRequest, Encryptor) {\r\n\tvar APIVERSION = \"client/v1\";\r\n\tvar session = function (sessionDetails, paymentProduct) {\r\n\r\n\t\tvar _c2SCommunicatorConfiguration = new C2SCommunicatorConfiguration(sessionDetails, APIVERSION),\r\n\t\t\t_c2sCommunicator = new C2SCommunicator(_c2SCommunicatorConfiguration, paymentProduct),\r\n\t\t\t_session = this,\r\n\t\t\t_paymentProductId, _paymentProduct, _paymentRequestPayload, _paymentRequest, _paymentProductGroupId, _paymentProductGroup;\r\n\t\tthis.clientApiUrl = _c2SCommunicatorConfiguration.clientApiUrl;\r\n\t\tthis.assetUrl = _c2SCommunicatorConfiguration.assetUrl;\r\n\r\n\t\tthis.getBasicPaymentProducts = function (paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProducts(c2SPaymentProductContext, paymentProductSpecificInputs).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProducts = new BasicPaymentProducts(json);\r\n\t\t\t\tpromise.resolve(paymentProducts);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function (paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProductGroups(c2SPaymentProductContext).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProductGroups = new BasicPaymentProductGroups(json);\r\n\t\t\t\tpromise.resolve(paymentProductGroups);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentItems = function (paymentRequestPayload, useGroups, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t// get products & groups\r\n\t\t\tif (useGroups) {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\t_session.getBasicPaymentProductGroups(paymentRequestPayload).then(function (groups) {\r\n\t\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, groups);\r\n\t\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, null);\r\n\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function (paymentProductId, paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductId = paymentProductId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProduct(paymentProductId, c2SPaymentProductContext, paymentProductSpecificInputs).then(function (response) {\r\n\t\t\t\t_paymentProduct = new PaymentProduct(response);\r\n\t\t\t\tpromise.resolve(_paymentProduct);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProduct = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductGroupId = paymentProductGroupId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductGroup(paymentProductGroupId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentProductGroup = new PaymentProductGroup(response);\r\n\t\t\t\tpromise.resolve(_paymentProductGroup);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProductGroup = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getIinDetails = function (partialCreditCardNumber, paymentRequestPayload) {\r\n\t\t\tpartialCreditCardNumber = partialCreditCardNumber.replace(/ /g, '');\r\n\t\t\tif (partialCreditCardNumber.length >= 8) {\r\n\t\t\t\tpartialCreditCardNumber = partialCreditCardNumber.substring(0, 8);\r\n\t\t\t} else {\r\n\t\t\t\tpartialCreditCardNumber = partialCreditCardNumber.substring(0, 6);\r\n\t\t\t}\r\n\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\treturn _c2sCommunicator.getPaymentProductIdByCreditCardNumber(partialCreditCardNumber, c2SPaymentProductContext);\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\treturn _c2sCommunicator.getPublicKey();\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductNetworks(paymentProductId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tpromise.resolve(response);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\treturn _c2sCommunicator.getPaymentProductDirectory(paymentProductId, currencyCode, countryCode);\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\treturn _c2sCommunicator.convertAmount(amount, source, target);\r\n\t\t};\r\n\r\n\t\tthis.getPaymentRequest = function () {\r\n\t\t\tif (!_paymentRequest) {\r\n\t\t\t\t_paymentRequest = new PaymentRequest(_c2SCommunicatorConfiguration.clientSessionId);\r\n\t\t\t}\r\n\t\t\treturn _paymentRequest;\r\n\t\t};\r\n\r\n\t\tthis.getEncryptor = function () {\r\n\t\t\tvar publicKeyResponsePromise = _c2sCommunicator.getPublicKey();\r\n\t\t\treturn new Encryptor(publicKeyResponsePromise);\r\n\t\t};\r\n\r\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_c2sCommunicator.getThirdPartyPaymentStatus(paymentId).then(function (response) {\r\n\t\t\t\tpromise.resolve(response);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getCustomerDetails = function (paymentProductId, paymentRequestPayload) {\r\n\t\t\treturn _c2sCommunicator.getCustomerDetails(paymentProductId, paymentRequestPayload);\r\n\t\t};\r\n\r\n\t\t/* In case a full JSON representation of a payment product is already available in context,\r\n\t\t   this method can be used instead of getPaymentProduct for the same (but synchronous) result. */\r\n\t\tthis.transformPaymentProductJSON = function(json) {\r\n\t\t\treturn new PaymentProduct(_c2sCommunicator.transformPaymentProductJSON(json))\r\n\t\t};\r\n\r\n\t\t/* In case a full JSON representation of a payment product group is already available in context,\r\n\t\t   this method can be used instead of getPaymentProductGroup for the same (but synchronous) result. */\r\n\t\tthis.transformPaymentProductGroupJSON = function(json) {\r\n\t\t\treturn new PaymentProductGroup(_c2sCommunicator.transformPaymentProductJSON(json))\r\n\t\t};\r\n\t};\r\n\tconnectsdk.Session = session;\r\n\treturn session;\r\n});\r\n"]}