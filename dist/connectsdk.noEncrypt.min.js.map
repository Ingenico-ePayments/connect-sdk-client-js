{"version":3,"sources":["core.js","promise.js","net.js","util.js","GooglePay.js","PublicKeyResponse.js","C2SCommunicatorConfiguration.js","IinDetailsResponse.js","C2SCommunicator.js","LabelTemplateElement.js","Attribute.js","AccountOnFileDisplayHints.js","AccountOnFile.js","PaymentProduct302SpecificData.js","PaymentProduct320SpecificData.js","PaymentProduct863SpecificData.js","PaymentProductDisplayHints.js","BasicPaymentProduct.js","BasicPaymentProductGroup.js","MaskedString.js","MaskingUtil.js","ValidationRuleLuhn.js","ValidationRuleExpirationDate.js","ValidationRuleFixedList.js","ValidationRuleLength.js","ValidationRuleRange.js","ValidationRuleRegularExpression.js","ValidationRuleEmailAddress.js","ValidationRuleTermsAndConditions.js","ValidationRuleBoletoBancarioRequiredness.js","ValidationRuleIban.js","ValidationRuleFactory.js","DataRestrictions.js","ValueMappingElement.js","FormElement.js","Tooltip.js","PaymentProductFieldDisplayHints.js","PaymentProductField.js","PaymentProduct.js","PaymentProductGroup.js","BasicPaymentProducts.js","BasicPaymentProductGroups.js","BasicPaymentItems.js","PaymentRequest.js","C2SPaymentProductContext.js","JOSEEncryptor.js","Encryptor.js","session.js"],"names":["global","connectsdk","modules","define","module","dependencies","fn","length","i","apply","this","exports","window","turing","Promise","singleton","self","pending","resolve","result","complete","reject","isSingleton","prototype","then","success","failure","push","type","shift","xhr","XMLHttpRequest","location","protocol","ActiveXObject","e","successfulRequest","request","status","responseText","ajax","url","options","respondToReadyState","readyState","contentType","mimeType","getResponseHeader","response","test","responseJSON","net","parseJSON","responseXML","parseXML","callback","promise","error","setHeaders","defaults","Accept","Content-Type","name","headers","hasOwnProperty","setRequestHeader","send","postBody","chain","method","toLowerCase","asynchronous","onreadystatechange","open","serialize","set","key","value","data","end","arguments","JSONPCallback","runCallback","json","teardown","methodName","parseInt","Date","getTime","trim","s","replace","object","results","encodeURIComponent","join","string","JSON","parse","DOMParser","text","parseFromString","xml","async","loadXML","run","scriptTag","document","createElement","id","src","that","onerror","body","appendChild","removeChild","get","post","jsonp","Util","createInstance","applePayPaymentProductId","googlePayPaymentProductId","bancontactPaymentProductId","getMetadata","screenSize","innerWidth","innerHeight","platformIdentifier","navigator","userAgent","sdkIdentifier","GC","rppEnabledPage","sdkCreator","base64Encode","stringify","o1","o2","o3","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","slice","filterOutProductsThatAreNotSupportedInThisBrowser","paymentProducts","product","paymentProductsThatAreNotSupportedInThisBrowser","indexOf","splice","instance","getInstance","_getGooglePaymentsClient","paymentsClient","googlePayEnvironment","_context","environment","google","payments","api","PaymentsClient","console","prefetchGooglePaymentData","paymentDataRequest","_getGooglePaymentDataRequestForPrefetch","_paymentProductSpecificInputs","googlePay","gatewayMerchantId","merchantName","prefetchPaymentData","warn","_util","_C2SCommunicator","_networks","_getBaseCardPaymentMethod","parameters","allowedAuthMethods","allowedCardNetworks","_getTokenizationSpecification","gateway","_getCardPaymentMethod","Object","assign","tokenizationSpecification","_getTransactionInfo","totalPriceStatus","currencyCode","currency","_getMerchantInfo","_getGooglePaymentDataRequest","apiVersion","apiVersionMinor","allowedPaymentMethods","transactionInfo","merchantInfo","GooglePay","C2SCommunicator","isGooglePayAvailable","context","paymentProductSpecificInputs","networks","setTimeout","isReadyToPay","catch","isMerchantIdProvided","merchantId","PublicKeyResponse","keyId","publicKey","C2SCommunicatorConfiguration","sessionDetails","endpoints","PROD","EU","API","ASSETS","US","AMS","PAR","PREPROD","SANDBOX","INTEGRATION","DEV_NAMI","DEV_ISC","clientSessionId","clientSessionID","Error","assetUrl","assetsBaseUrl","clientApiUrl","apiBaseUrl","customerId","region","tester","split","path","IinDetailsResponse","countryCode","paymentProductId","isAllowedInContext","coBrands","Net","c2SCommunicatorConfiguration","paymentProduct","_c2SCommunicatorConfiguration","_cache","_providedPaymentProduct","_GooglePay","_mapType","expirydate","numericstring","integer","expirationDate","formatUrl","endsWith","suffix","_cleanJSON","il","fields","field","displayHints","obfuscate","validatorKey","dataRestrictions","validators","formElement","list","tooltip","image","sort","a","b","displayOrder","logo","_extendLogoUrl","postfix","_isPaymentProductInList","_getGooglePayNetworks","paymentProduct320SpecificData","metadata","getBasicPaymentProducts","cacheKeyLocale","locale","cacheBust","cacheKey","totalAmount","isRecurring","urlParameterLocale","res","getBasicPaymentProductGroups","getPaymentProduct","errorId","errors","code","propertyName","message","httpStatusCode","urlParameterlocale","getPaymentProductUrl","bancontact","forceBasicFlow","cleanedJSON","getPaymentProductGroup","paymentProductGroupId","getPaymentProductIdByCreditCardNumber","partialCreditCardNumber","iinDetailsResponse","convertContextToIinDetailsContext","bin","paymentContext","amountOfMoney","amount","getPublicKey","publicKeyResponse","getPaymentProductNetworks","getPaymentProductDirectory","convertAmount","source","target","getThirdPartyPaymentStatus","paymentId","getCustomerDetails","constructCacheKeyFromKeyValues","values","prefix","LabelTemplateElement","attributeKey","mask","wildcardMask","Attribute","mustWriteReason","_parseJSON","_json","_labelTemplate","_labelTemplateElementByAttributeKey","labelTemplate","l","labelTemplateElement","AccountOnFileDisplayHints","labelTemplateElementByAttributeKey","_attributes","_attributeByKey","attributes","attribute","AccountOnFile","attributeByKey","getMaskedValueByAttributeKey","undefined","MaskingUtil","applyMask","PaymentProduct302SpecificData","PaymentProduct320SpecificData","PaymentProduct863SpecificData","integrationTypes","PaymentProductDisplayHints","label","_paymentProduct","_accountsOnFile","_accountOnFileById","accountsOnFile","accountOnFile","paymentProduct302SpecificData","paymentProduct863SpecificData","BasicPaymentProduct","accountOnFileById","allowsRecurring","allowsTokenization","autoTokenized","maxAmount","minAmount","paymentMethod","mobileIntegrationLevel","usesRedirectionTo3rdParty","paymentProductGroup","BasicPaymentProductGroup","MaskedString","formattedValue","cursorIndex","_fillBuffer","index","offset","buffer","tempMask","valuec","Number","newValue","oldValue","maskc","c","cursor","substring","getMaxLengthBasedOnMask","newLength","removeMask","valueIndex","inMask","ValidationRuleLuhn","errorMessageId","validate","luhnArr","sum","p","o","_validateDateFormat","ValidationRuleExpirationDate","now","getFullYear","getMonth","ValidationRuleFixedList","allowedValues","ValidationRuleLength","maxLength","minLength","ValidationRuleRange","maxValue","minValue","isNaN","ValidationRuleRegularExpression","regularExpression","RegExp","ValidationRuleEmailAddress","ValidationRuleTermsAndConditions","ValidationRuleBoletoBancarioRequiredness","fiscalNumberLength","fiscalNumberValue","_sanitizeValue","toUpperCase","_isValidFormat","_toComputedString","d","ValidationRuleIban","block","remainder","ValidationRuleFactory","makeValidator","classType","className","eval","DataRestrictions","isRequired","validationRules","validationRuleByType","_validationRules","_validationRuleByType","validationRuleFactory","validationRule","ValueMappingElement","displayName","FormElement","valueMapping","_valueMapping","Tooltip","PaymentProductFieldDisplayHints","placeholderLabel","preferredInputType","alwaysShow","PaymentProductField","_errorCodes","getErrorCodes","isValid","hasError","validator","applyWildcardMask","_paymentProductFields","_paymentProductFieldById","paymentProductField","PaymentProduct","basicPaymentProduct","paymentProductFields","paymentProductFieldById","PaymentProductGroup","_parseJson","_paymentProducts","_paymentProductById","_paymentProductByAccountOnFileId","aofs","j","jl","aof","BasicPaymentProducts","basicPaymentProducts","basicPaymentProductById","basicPaymentProductByAccountOnFileId","_paymentProductGroups","_paymentProductGroupById","paymentProductGroups","BasicPaymentProductGroups","basicPaymentProductGroups","basicPaymentProductGroupById","_products","_groups","_basicPaymentItems","doRemove","groupId","groupReplaced","productMethod","basicPaymentItems","basicPaymentItem","basicPaymentItemById","BasicPaymentItems","products","groups","PaymentRequest","_fieldValues","_accountOnFile","_tokenize","getErrorMessageIds","allRequiredFieldsPresent","getValue","getAccountOnFile","setValue","paymentProductFieldId","setTokenize","tokenize","getTokenize","concat","getValues","getMaskedValue","getMaskedValues","maskedString","getUnmaskedValues","setPaymentProduct","setAccountOnFile","getClientSessionID","C2SPaymentProductContext","payload","pki","forge","base64UrlEncode","asn1","str","util","encode64","createProtectedHeader","kid","JOSEHeader","alg","decodePemPublicKey","publickeyB64Encoded","publickeyB64Decoded","decode64","buffer2","createBuffer","publickeyObject2","fromDer","publicKeyFromAsn1","encryptContentEncryptionKey","CEK","encrypt","encryptPayload","encKey","initializationVector","cipher","createCipher","start","iv","update","finish","output","bytes","calculateAdditionalAuthenticatedDataLength","encodededProtectedHeader","lengthInBits","putInt32","calculateHMAC","macKey","cipherText","al","putBytes","hmacInput","hmac","create","sha512","digest","JOSEEncryptor","plainTextValues","protectedHeader","random","getBytesSync","CEKKEYLENGTH","encryptedContentEncryptionKey","encodedEncryptedContentEncryptionKey","IVLENGTH","encodededinitializationVector","encodedCipherText","calculatedHmac","authenticationTag","Encryptor","publicKeyResponsePromise","paymentRequest","encryptedString","blob","nonce","bytesToHex","paymentValues","ownValues","getOwnPropertyNames","joseEncryptor","session","_paymentProductId","_paymentRequestPayload","_paymentRequest","_paymentProductGroupId","_paymentProductGroup","_c2sCommunicator","_session","paymentRequestPayload","c2SPaymentProductContext","getBasicPaymentItems","useGroups","getIinDetails","getPaymentRequest","getEncryptor","Session"],"mappings":"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","file":"connectsdk.noEncrypt.min.js","sourcesContent":["(function (global) {\r\n    var connectsdk = {}, modules = {};\r\n\r\n    /* SDK internal function */\r\n    connectsdk.define = function (module, dependencies, fn) {\r\n        if (dependencies && dependencies.length) {\r\n            for (var i = 0; i < dependencies.length; i++) {\r\n                dependencies[i] = modules[dependencies[i]];\r\n            }\r\n        }\r\n        modules[module] = fn.apply(this, dependencies || []);\r\n    };\r\n\r\n    // Export `connectsdk` based on environment.\r\n    global.connectsdk = connectsdk;\r\n\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n\r\n    connectsdk.define('connectsdk.core', [], function () {\r\n        return connectsdk;\r\n    });\r\n\r\n    // use require.js if available otherwise we use our own\r\n    if (typeof define === 'undefined') {\r\n        global.define = connectsdk.define;\r\n    }\r\n} (typeof window === 'undefined' ? this : window));\r\n\r\n// (re)define core\r\ndefine(\"connectsdk.core\", [], function () {\r\n    var global = typeof window === 'undefined' ? this : window;\r\n    var connectsdk = {};\r\n    global.connectsdk = connectsdk;\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n    return connectsdk;\r\n});\r\n","define('connectsdk.promise', ['connectsdk.core'], function(turing) {\r\n\tfunction PromiseModule(global) {\r\n\t\t/**\r\n\t\t * The Promise class.\r\n\t\t */\r\n\t\tfunction Promise(singleton) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.pending = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Resolves a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.resolve = function(result) {\r\n\t\t\t\tself.complete('resolve', result);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Rejects a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.reject = function(result) {\r\n\t\t\t\tself.complete('reject', result);\r\n\t\t\t};\r\n\r\n\t\t\tif (singleton) {\r\n\t\t\t\tthis.isSingleton = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tPromise.prototype = {\r\n\t\t\t/**\r\n\t\t\t * Adds a success and failure handler for completion of this Promise object.\r\n\t\t\t *\r\n\t\t\t * @param {Function} success The success handler\r\n\t\t\t * @param {Function} success The failure handler\r\n\t\t\t * @returns {Promise} `this`\r\n\t\t\t */\r\n\t\t\tthen : function(success, failure) {\r\n\t\t\t\tthis.pending.push({\r\n\t\t\t\t\tresolve : success,\r\n\t\t\t\t\treject : failure\r\n\t\t\t\t});\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Runs through each pending 'thenable' based on type (resolve, reject).\r\n\t\t\t *\r\n\t\t\t * @param {String} type The thenable type\r\n\t\t\t * @param {Object} result A value\r\n\t\t\t */\r\n\t\t\tcomplete : function(type, result) {\r\n\t\t\t\twhile (this.pending[0]) {\r\n\t\t\t\t\tthis.pending.shift()[type](result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tglobal.Promise = Promise;\r\n\t}\r\n\tPromiseModule(connectsdk);\r\n\r\n\treturn connectsdk.Promise;\r\n});","define('connectsdk.net', ['connectsdk.core'], function(connectsdk) {\r\n  var net = {};\r\n\r\n  /**\r\n    * Ajax request options:\r\n    *\r\n    *   - `method`: {String} HTTP method - GET, POST, etc.\r\n    *   - `success`: {Function} A callback to run when a request is successful\r\n    *   - `error`: {Function} A callback to run when the request fails\r\n    *   - `asynchronous`: {Boolean} Defaults to asynchronous\r\n    *   - `postBody`: {String} The HTTP POST body\r\n    *   - `contentType`: {String} The content type of the request, default is `application/x-www-form-urlencoded`\r\n    *\r\n    */\r\n\r\n  /**\r\n    * Removes leading and trailing whitespace.\r\n    * @param {String}\r\n    * @return {String}\r\n    */\r\n  var trim = ''.trim\r\n    ? function(s) { return s.trim(); }\r\n    : function(s) { return s.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); };\r\n\r\n  function xhr() {\r\n    if (typeof XMLHttpRequest !== 'undefined' && (window.location.protocol !== 'file:' || !window.ActiveXObject)) {\r\n      return new XMLHttpRequest();\r\n    } else {\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.6.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.3.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function successfulRequest(request) {\r\n    return (request.status >= 200 && request.status < 300) ||\r\n        request.status == 304 ||\r\n        (request.status == 0 && request.responseText);\r\n  }\r\n\r\n  /**\r\n    * Serialize JavaScript for HTTP requests.\r\n    *\r\n    * @param {Object} object An Array or Object\r\n    * @returns {String} A string suitable for a GET or POST request\r\n    */\r\n  net.serialize = function(object) {\r\n    if (!object) return;\r\n\r\n    if (typeof object === 'string') {\r\n      return object;\r\n    }\r\n\r\n    var results = [];\r\n    for (var key in object) {\r\n      results.push(encodeURIComponent(key) + '=' + encodeURIComponent(object[key]));\r\n    }\r\n    return results.join('&');\r\n  };\r\n\r\n  /**\r\n    * JSON.parse support can be inferred using `connectsdk.detect('JSON.parse')`.\r\n    */\r\n  //connectsdk.addDetectionTest('JSON.parse', function() {\r\n  //  return window.JSON && window.JSON.parse;\r\n  //});\r\n\r\n  /**\r\n    * Parses JSON represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  net.parseJSON = function(string) {\r\n    if (typeof string !== 'string' || !string) return null;\r\n    string = trim(string);\r\n    /*\r\n    return connectsdk.detect('JSON.parse') ?\r\n      window.JSON.parse(string) :\r\n      (new Function('return ' + string))();\r\n    */\r\n    return window.JSON.parse(string);\r\n  };\r\n\r\n  /**\r\n    * Parses XML represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  if (window.DOMParser) {\r\n    net.parseXML = function(text) {\r\n      return new DOMParser().parseFromString(text, 'text/xml');\r\n    };\r\n  } else {\r\n    net.parseXML = function(text) {\r\n      var xml = new ActiveXObject('Microsoft.XMLDOM');\r\n      xml.async = 'false';\r\n      xml.loadXML(text);\r\n      return xml;\r\n    };\r\n  }\r\n\r\n  /**\r\n    * Creates an Ajax request.  Returns an object that can be used\r\n    * to chain calls.  For example:\r\n    *\r\n    *      $t.post('/post-test')\r\n    *        .data({ key: 'value' })\r\n    *        .end(function(res) {\r\n    *          assert.equal('value', res.responseText);\r\n    *        });\r\n    *\r\n    *      $t.get('/get-test')\r\n    *        .set('Accept', 'text/html')\r\n    *        .end(function(res) {\r\n    *          assert.equal('Sample text', res.responseText);\r\n    *        });\r\n    *\r\n    * The available chained methods are:\r\n    *\r\n    * `set` -- set a HTTP header\r\n    * `data` -- the postBody\r\n    * `end` -- send the request over the network, and calls your callback with a `res` object\r\n    * `send` -- sends the request and calls `data`: `.send({ data: value }, function(res) { });`\r\n    *\r\n    * @param {String} The URL to call\r\n    * @param {Object} Optional settings\r\n    * @returns {Object} A chainable object for further configuration\r\n    */\r\n  function ajax(url, options) {\r\n    var request = xhr(),\r\n        promise,\r\n        then,\r\n        response = {},\r\n        chain;\r\n    if (connectsdk.Promise) {\r\n      promise = new connectsdk.Promise();\r\n    }\r\n\r\n\r\n    function respondToReadyState(readyState) {\r\n      if (request.readyState == 4) {\r\n        var contentType = request.mimeType || request.getResponseHeader('content-type') || '';\r\n\r\n        response.status = request.status;\r\n        response.responseText = request.responseText;\r\n        if (/json/.test(contentType)) {\r\n          response.responseJSON = net.parseJSON(request.responseText);\r\n        } else if (/xml/.test(contentType)) {\r\n          response.responseXML = net.parseXML(request.responseText);\r\n      \t}\r\n\r\n        response.success = successfulRequest(request);\r\n\r\n        if (options.callback) {\r\n          return options.callback(response, request);\r\n        }\r\n\r\n        if (response.success) {\r\n          if (options.success) options.success(response, request);\r\n          if (promise) promise.resolve(response, request);\r\n        } else {\r\n          if (options.error) options.error(response, request);\r\n          if (promise) promise.reject(response, request);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Set the HTTP headers\r\n    function setHeaders() {\r\n      var defaults = {\r\n        'Accept': 'text/javascript, application/json, text/html, application/xml, text/xml, */*',\r\n        'Content-Type': 'application/json'\r\n      };\r\n\r\n      /**\r\n       * Merge headers with defaults.\r\n       */\r\n      for (var name in defaults) {\r\n        if (!options.headers.hasOwnProperty(name))\r\n          options.headers[name] = defaults[name];\r\n      }\r\n      for (var name in options.headers) {\r\n        request.setRequestHeader(name, options.headers[name]);\r\n      }\r\n\r\n    }\r\n\r\n    if (typeof options === 'undefined') options = {};\r\n\r\n    options.method = options.method ? options.method.toLowerCase() : 'get';\r\n    options.asynchronous = options.asynchronous || true;\r\n    options.postBody = options.postBody || '';\r\n    request.onreadystatechange = respondToReadyState;\r\n    request.open(options.method, url, options.asynchronous);\r\n\r\n    options.headers = options.headers || {};\r\n    if (options.contentType) {\r\n      options.headers['Content-Type'] = options.contentType;\r\n    }\r\n\r\n    if (typeof options.postBody !== 'string') {\r\n      // Serialize JavaScript\r\n      options.postBody = net.serialize(options.postBody);\r\n    }\r\n\r\n    // setHeaders();\r\n\r\n    function send() {\r\n      try {\r\n      \tsetHeaders();\r\n        request.send(options.postBody);\r\n      } catch (e) {\r\n        if (options.error) {\r\n          options.error();\r\n        }\r\n      }\r\n    }\r\n\r\n    chain = {\r\n      set: function(key, value) {\r\n        options.headers[key] = value;\r\n        return chain;\r\n      },\r\n\r\n      send: function(data, callback) {\r\n        options.postBody = net.serialize(data);\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      end: function(callback) {\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      data: function(data) {\r\n        options.postBody = net.serialize(data);\r\n        return chain;\r\n      },\r\n\r\n      then: function() {\r\n        chain.end();\r\n        if (promise) promise.then.apply(promise, arguments);\r\n        return chain;\r\n      }\r\n    };\r\n\r\n    return chain;\r\n  }\r\n\r\n  function JSONPCallback(url, success, failure) {\r\n    var self = this;\r\n    this.url = url;\r\n    this.methodName = '__connectsdk_jsonp_' + parseInt(new Date().getTime());\r\n    this.success = success;\r\n    this.failure = failure;\r\n\r\n    function runCallback(json) {\r\n      self.success(json);\r\n      self.teardown();\r\n    }\r\n\r\n    window[this.methodName] = runCallback;\r\n  }\r\n\r\n  JSONPCallback.prototype.run = function() {\r\n    this.scriptTag = document.createElement('script');\r\n    this.scriptTag.id = this.methodName;\r\n    this.scriptTag.src = this.url.replace('{callback}', this.methodName);\r\n    var that = this;\r\n    this.scriptTag.onerror = function() {\r\n    \tthat.failure();\r\n    };\r\n    document.body.appendChild(this.scriptTag);\r\n  };\r\n\r\n  JSONPCallback.prototype.teardown = function() {\r\n    window[this.methodName] = null;\r\n    try {\r\n    \tdelete window[this.methodName];\r\n    } catch (e) {}\r\n    if (this.scriptTag) {\r\n      document.body.removeChild(this.scriptTag);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * An Ajax GET request.\r\n   *\r\n   *      $t.get('/get-test')\r\n   *        .set('Accept', 'text/html')\r\n   *        .end(function(res) {\r\n   *          assert.equal('Sample text', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options\r\n   * @returns {Object} A chainable object for further configuration\r\n   */\r\n  net.get = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'get';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * An Ajax POST request.\r\n   *\r\n   *      $t.post('/post-test')\r\n   *        .data({ key: 'value' })\r\n   *        .end(function(res) {\r\n   *          assert.equal('value', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options (`postBody` may come in handy here)\r\n   * @returns {Object} An object for further chaining with promises\r\n   */\r\n  net.post = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'post';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * A jsonp request.  Example:\r\n   *\r\n   *     var url = 'http://feeds.delicious.com/v1/json/';\r\n   *     url += 'alex_young/javascript?callback={callback}';\r\n   *\r\n   *     connectsdk.net.jsonp(url, {\r\n   *       success: function(json) {\r\n   *         console.log(json);\r\n   *       }\r\n   *     });\r\n   *\r\n   * @param {String} url The URL to request\r\n   */\r\n  net.jsonp = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    var callback = new JSONPCallback(url, options.success, options.failure);\r\n    callback.run();\r\n  };\r\n\r\n  /**\r\n    * The Ajax methods are mapped to the `connectsdk` object:\r\n    *\r\n    *      connectsdk.get();\r\n    *      connectsdk.post();\r\n    *      connectsdk.json();\r\n    *\r\n    */\r\n  connectsdk.get = net.get;\r\n  connectsdk.post = net.post;\r\n  connectsdk.jsonp = net.jsonp;\r\n\r\n  net.ajax = ajax;\r\n  connectsdk.net = net;\r\n  return net;\r\n});","define(\"connectsdk.Util\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\t// Create a singleton from Util so the same util function can be used in different modules\r\n\tvar Util = (function () {\r\n\t\tvar instance;\r\n\r\n\t\tfunction createInstance() {\r\n\t\t\t// private variables to use in the public methods\r\n\t\t\tvar applePayPaymentProductId = 302;\r\n\t\t\tvar googlePayPaymentProductId = 320;\r\n\t\t\tvar bancontactPaymentProductId = 3012;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tapplePayPaymentProductId: applePayPaymentProductId,\r\n\t\t\t\tgooglePayPaymentProductId: googlePayPaymentProductId,\r\n\t\t\t\tbancontactPaymentProductId: bancontactPaymentProductId,\r\n\t\t\t\tgetMetadata: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tscreenSize: window.innerWidth + \"x\" + window.innerHeight,\r\n\t\t\t\t\t\tplatformIdentifier: window.navigator.userAgent,\r\n\t\t\t\t\t\tsdkIdentifier: ((document.GC && document.GC.rppEnabledPage) ? 'rpp-' : '') + 'JavaScriptClientSDK/v${version}',\r\n\t\t\t\t\t\tsdkCreator: 'Ingenico'\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tbase64Encode: function (data) {\r\n\t\t\t\t\tif (typeof data === \"object\") {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdata = JSON.stringify(data);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tthrow \"data must be either a String or a JSON object\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\t\t\t\t\tvar o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', tmp_arr = [];\r\n\r\n\t\t\t\t\tif (!data) {\r\n\t\t\t\t\t\treturn data;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdo {// pack three octets into four hexets\r\n\t\t\t\t\t\to1 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to2 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to3 = data.charCodeAt(i++);\r\n\r\n\t\t\t\t\t\tbits = o1 << 16 | o2 << 8 | o3;\r\n\r\n\t\t\t\t\t\th1 = bits >> 18 & 0x3f;\r\n\t\t\t\t\t\th2 = bits >> 12 & 0x3f;\r\n\t\t\t\t\t\th3 = bits >> 6 & 0x3f;\r\n\t\t\t\t\t\th4 = bits & 0x3f;\r\n\r\n\t\t\t\t\t\t// use hexets to index into b64, and append result to encoded string\r\n\t\t\t\t\t\ttmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\r\n\t\t\t\t\t} while (i < data.length);\r\n\r\n\t\t\t\t\tenc = tmp_arr.join('');\r\n\r\n\t\t\t\t\tvar r = data.length % 3;\r\n\r\n\t\t\t\t\treturn (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\r\n\t\t\t\t},\r\n\t\t\t\tfilterOutProductsThatAreNotSupportedInThisBrowser: function (json) {\r\n\t\t\t\t\tfor (var i = json.paymentProducts.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\t\t\tvar product = json.paymentProducts[i];\r\n\t\t\t\t\t\tif (product && this.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(product.id) > -1) {\r\n\t\t\t\t\t\t\tjson.paymentProducts.splice(i, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tpaymentProductsThatAreNotSupportedInThisBrowser: [applePayPaymentProductId]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tgetInstance: function () {\r\n\t\t\t\tif (!instance) {\r\n\t\t\t\t\tinstance = createInstance();\r\n\t\t\t\t}\r\n\t\t\t\treturn instance;\r\n\t\t\t}\r\n\t\t};\r\n\t})();\r\n\r\n\tconnectsdk.Util = Util;\r\n\treturn Util;\r\n});\r\n","define(\"connectsdk.GooglePay\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.Util\"], function (connectsdk, Promise, Util) {\r\n\r\n    var _util = Util.getInstance();\r\n    var _C2SCommunicator = null;\r\n    var _paymentProductSpecificInputs = null;\r\n    var _context = null;\r\n    var _networks = null;\r\n    var paymentsClient = null;\r\n\r\n    // Only base is needed to trigger isReadyToPay\r\n    var _getBaseCardPaymentMethod = function () {\r\n        return {\r\n            type: 'CARD',\r\n            parameters: {\r\n                allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\r\n                allowedCardNetworks: _networks\r\n            }\r\n        }\r\n    };\r\n\r\n    var _getTokenizationSpecification = function () {\r\n        return {\r\n            type: 'PAYMENT_GATEWAY',\r\n            parameters: {\r\n                'gateway': 'ingenicoglobalcollect',\r\n                'gatewayMerchantId': _paymentProductSpecificInputs.googlePay.gatewayMerchantId\r\n            }\r\n        }\r\n    };\r\n\r\n    // To prefetch payment data we need base + tokenizationSpecification\r\n    var _getCardPaymentMethod = function () {\r\n        return Object.assign(\r\n            {},\r\n            _getBaseCardPaymentMethod(),\r\n            {\r\n                tokenizationSpecification: _getTokenizationSpecification()\r\n            }\r\n        );\r\n    };\r\n\r\n    var _getTransactionInfo = function () {\r\n        return {\r\n            \"totalPriceStatus\": \"NOT_CURRENTLY_KNOWN\",\r\n            \"currencyCode\": _context.currency\r\n        };\r\n    };\r\n\r\n    var _getMerchantInfo = function () {\r\n        return {\r\n            \"merchantName\": _paymentProductSpecificInputs.googlePay.merchantName\r\n        };\r\n    };\r\n\r\n    var _getGooglePaymentDataRequest = function () {\r\n        return {\r\n            apiVersion: 2,\r\n            apiVersionMinor: 0,\r\n            allowedPaymentMethods: [_getBaseCardPaymentMethod()]\r\n        };\r\n    };\r\n\r\n    var _getGooglePaymentDataRequestForPrefetch = function () {\r\n        // transactionInfo must be set but does not affect cache\r\n        return {\r\n            apiVersion: 2,\r\n            apiVersionMinor: 0,\r\n            allowedPaymentMethods: [_getCardPaymentMethod()],\r\n            transactionInfo: _getTransactionInfo(),\r\n            merchantInfo: _getMerchantInfo()\r\n        };\r\n    };\r\n\r\n    function _getGooglePaymentsClient() {\r\n        if (paymentsClient === null) {\r\n            var googlePayEnvironment = 'TEST';\r\n            if (_context.environment === 'PROD') {\r\n                googlePayEnvironment = 'PROD';\r\n            }\r\n            if (window.google) {\r\n                paymentsClient = new google.payments.api.PaymentsClient({environment: googlePayEnvironment});\r\n            } else {\r\n                console.error(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\r\n            }\r\n        }\r\n        return paymentsClient;\r\n    }\r\n\r\n    /**\r\n     * Prefetch payment data to improve performance\r\n     *\r\n     * @see {@link https://developers.google.com/pay/api/web/reference/client#prefetchPaymentData|prefetchPaymentData()}\r\n     */\r\n    function prefetchGooglePaymentData() {\r\n        var paymentDataRequest = _getGooglePaymentDataRequestForPrefetch();\r\n\r\n        var paymentsClient = _getGooglePaymentsClient();\r\n\r\n        // Prefetching is only effective when all information is provided\r\n        if (_paymentProductSpecificInputs.googlePay.gatewayMerchantId &&\r\n            _paymentProductSpecificInputs.googlePay.merchantName) {\r\n            paymentsClient.prefetchPaymentData(paymentDataRequest);\r\n        } else {\r\n            console.warn(\"Prefetching payment data was not triggered because of missing information. \" +\r\n                \"gatewayMerchantId: \" + _paymentProductSpecificInputs.googlePay.gatewayMerchantId +\r\n                \", merchantName: \" + _paymentProductSpecificInputs.googlePay.merchantName)\r\n        }\r\n    }\r\n\r\n    var GooglePay = function (C2SCommunicator) {\r\n        _C2SCommunicator = C2SCommunicator;\r\n        this.isGooglePayAvailable = function (context, paymentProductSpecificInputs, networks) {\r\n            _context = context;\r\n            _paymentProductSpecificInputs = paymentProductSpecificInputs;\r\n            _networks = networks;\r\n            var promise = new Promise();\r\n            // This setTimeout is essential to make the following (not fully asynchronous) code work in a promise way in all scenarios. (not needed in happy flow)\r\n            // The SDK has it's only PolyFill for the promise which is not feature complete.\r\n            setTimeout(function () {\r\n                if (_networks && _networks.length > 0) {\r\n                    var paymentsClient = _getGooglePaymentsClient();\r\n                    if (!paymentsClient) {\r\n                        _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                        promise.reject(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\r\n                    } else {\r\n                        paymentsClient.isReadyToPay(_getGooglePaymentDataRequest())\r\n                            .then(function (response) {\r\n                                promise.resolve(response);\r\n\r\n                                prefetchGooglePaymentData();\r\n                            })\r\n                            .catch(function () {\r\n                                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                                promise.reject('failed to run isReadyToPay() with Google Pay API');\r\n                            });\r\n                    }\r\n                } else {\r\n                    _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                    promise.reject('There are no product networks available');\r\n                }\r\n            }, 0);\r\n            return promise;\r\n        };\r\n\r\n        this.isMerchantIdProvided = function (paymentProductSpecificInputs) {\r\n            if (paymentProductSpecificInputs.googlePay.merchantId) {\r\n                return paymentProductSpecificInputs.googlePay.merchantId;\r\n            } else {\r\n                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    connectsdk.GooglePay = GooglePay;\r\n    return GooglePay;\r\n});\r\n","define(\"connectsdk.PublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PublicKeyResponse = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.keyId = json.keyId;\r\n\t\tthis.publicKey = json.publicKey;\r\n\t};\r\n\r\n\tconnectsdk.PublicKeyResponse = PublicKeyResponse;\r\n\treturn PublicKeyResponse;\r\n});","define(\"connectsdk.C2SCommunicatorConfiguration\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n    var C2SCommunicatorConfiguration = function (sessionDetails, apiVersion) {\r\n        this.endpoints = {\r\n            PROD: {\r\n                EU: {\r\n                    API: \"https://ams1.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.secured-by-ingenico.com\"\r\n                }\r\n            },\r\n            PREPROD: {\r\n                EU: {\r\n                    API: \"https://ams1.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.preprod.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.preprod.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.preprod.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par-preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.preprod.secured-by-ingenico.com\"\r\n                }\r\n            },\r\n            SANDBOX: {\r\n                EU: {\r\n                    API: \"https://ams1.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.sandbox.secured-by-ingenico.com\"\r\n                }\r\n            }\r\n\r\n            // Non public settings. Only needed in GC development environment. Do not use\r\n            // these, they will not work outside GC.\r\n            ,\r\n            INTEGRATION: {\r\n                EU: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                US: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                }\r\n            },\r\n            DEV_NAMI: {\r\n                EU: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                US: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                }\r\n            },\r\n            DEV_ISC: {\r\n                EU: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                },\r\n                US: {\r\n                    API: \"//api.gc-ci-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-ci-dev.isaac.local\"\r\n                },\r\n                AMS: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                },\r\n                PAR: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                }\r\n            }\r\n        };\r\n\r\n        // clientSessionID, assetBaseUrl and apiBaseUrl are deprecated but still may be used. Here we check for presense of new variables, if they dont exist... Use the old variables.\r\n        if (!sessionDetails.clientSessionId) {\r\n            sessionDetails.clientSessionId = sessionDetails.clientSessionID;\r\n        } else if (sessionDetails.clientSessionID) {\r\n            throw new Error(\"You cannot use both the clientSessionId and the clientSessionID at the same time, please use the clientSessionId only.\");\r\n        }\r\n        if (!sessionDetails.assetUrl) {\r\n            sessionDetails.assetUrl = sessionDetails.assetsBaseUrl\r\n        } else if (sessionDetails.assetsBaseUrl) {\r\n            throw new Error(\"You cannot use both the assetUrl and the assetsBaseUrl at the same time, please use the assetUrl only.\");\r\n        }\r\n        if (!sessionDetails.clientApiUrl) {\r\n            sessionDetails.clientApiUrl = sessionDetails.apiBaseUrl\r\n        } else if (sessionDetails.apiBaseUrl) {\r\n            throw new Error(\"You cannot use both the clientApiUrl and the apiBaseUrl at the same time, please use the clientApiUrl only.\");\r\n        }\r\n\r\n        this.clientSessionId = sessionDetails.clientSessionId;\r\n        this.customerId = sessionDetails.customerId;\r\n\r\n        // can be removed in a newer version of the SDK from this line\r\n        if (sessionDetails.region && !sessionDetails.clientApiUrl) {\r\n            // use regions; old stuff\r\n            console.warn(\"Using regions is deprecated, switch to clientApiUrl\");\r\n            this.clientApiUrl = this.endpoints[sessionDetails.environment][sessionDetails.region].API;\r\n            this.assetUrl = this.endpoints[sessionDetails.environment][sessionDetails.region].ASSETS;\r\n        } else {\r\n            // till this line; normal behaviour is below\r\n            // ignore the region here\r\n            this.clientApiUrl = sessionDetails.clientApiUrl;\r\n            this.assetUrl = sessionDetails.assetUrl;\r\n            if (!this.clientApiUrl) {\r\n                throw new Error(\"This version of the connectSDK requires an clientApiUrl, which you did not provide.\");\r\n            }\r\n            if (!this.assetUrl) {\r\n                throw new Error(\"This version of the connectSDK requires an assetUrl, which you did not provide.\");\r\n            }\r\n\r\n            // now that the clientApiUrl is set check when if the api version is set in the URL, its the correct version break if not.\r\n            if (this.clientApiUrl.indexOf(\"//\") === -1) {\r\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\r\n            }\r\n            var tester = this.clientApiUrl.split(\"/\"); // [0] = (http(s): || \"\") , [1] = \"\", [2] = \"host:port\", [3+] = path\r\n            if (tester[0] !== \"\" && tester[0].indexOf(\"http\") !== 0) {\r\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\r\n            }\r\n            // if you cannot provide an URL that starts with (http(s)::)// and want an error: please provide a PR :)\r\n\r\n            var path = tester.splice(3).join(\"/\"); // the path (if no path; path = \"\").\r\n            if (!path) { //If path == \"\"\r\n                this.clientApiUrl += \"/\" + apiVersion;\r\n            } else if (path === 'client') { //If path == client\r\n                this.clientApiUrl += \"/\" + apiVersion.split('/')[1];\r\n            } else if (path.indexOf(apiVersion) !== 0 || path.length !== apiVersion.length) {\r\n                throw new Error(\"This version of the connectSDK is only compatible with \" + apiVersion + \", you supplied: '\" + path + \"'\");\r\n            }\r\n        }\r\n    };\r\n    connectsdk.C2SCommunicatorConfiguration = C2SCommunicatorConfiguration;\r\n    return C2SCommunicatorConfiguration;\r\n});","define(\"connectsdk.IinDetailsResponse\", [\"connectsdk.core\", \"connectsdk.promise\"], function(connectsdk, Promise) {\r\n\r\n\tvar IinDetailsResponse = function () {\r\n\t\tthis.status = '';\r\n\t\tthis.countryCode = '';\r\n\t\tthis.paymentProductId = '';\r\n\t\tthis.isAllowedInContext = '';\r\n\t\tthis.coBrands = [];\r\n\t};\r\n\tconnectsdk.IinDetailsResponse = IinDetailsResponse;\r\n\treturn IinDetailsResponse;\r\n});","define(\"connectsdk.C2SCommunicator\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.net\", \"connectsdk.Util\", \"connectsdk.PublicKeyResponse\", \"connectsdk.IinDetailsResponse\", \"connectsdk.GooglePay\"], function (connectsdk, Promise, Net, Util, PublicKeyResponse, IinDetailsResponse, GooglePay) {\r\n\tvar C2SCommunicator = function (c2SCommunicatorConfiguration, paymentProduct) {\r\n\t\tvar _c2SCommunicatorConfiguration = c2SCommunicatorConfiguration;\r\n\t\tvar _util = Util.getInstance();\r\n\t\tvar _cache = {};\r\n\t\tvar _providedPaymentProduct = paymentProduct;\r\n\t\tvar that = this;\r\n\t\tvar _GooglePay = new GooglePay(that);\r\n\r\n\t\tvar _mapType = {\r\n\t\t\t\"expirydate\": \"tel\",\r\n\t\t\t\"string\": \"text\",\r\n\t\t\t\"numericstring\": \"tel\",\r\n\t\t\t\"integer\": \"number\",\r\n\t\t\t\"expirationDate\": \"tel\"\r\n\t\t};\r\n\r\n\t\tvar formatUrl = function (url) {\r\n\t\t\treturn (url && endsWith(url, '/')) ? url : url + '/';\r\n\t\t};\r\n\r\n\t\tvar endsWith = function(string, suffix) {\r\n\t\t\treturn string.indexOf(suffix, string.length - suffix.length) !== -1;\r\n\t\t};\r\n\r\n\t\tvar _cleanJSON = function (json, url) {\r\n\t\t\tfor (var i = 0, il = json.fields.length; i < il; i++) {\r\n\t\t\t\tvar field = json.fields[i];\r\n\t\t\t\tfield.type = (field.displayHints && field.displayHints.obfuscate) ? \"password\" : _mapType[field.type];\r\n\r\n\t\t\t\t// helper code for templating tools like Handlebars\r\n\t\t\t\tfor (validatorKey in field.dataRestrictions.validators) {\r\n\t\t\t\t\tfield.validators = field.validators || [];\r\n\t\t\t\t\tfield.validators.push(validatorKey);\r\n\t\t\t\t}\r\n\t\t\t\tif (field.displayHints && field.displayHints.formElement && field.displayHints.formElement.type === 'list') {\r\n\t\t\t\t\tfield.displayHints.formElement.list = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// full image paths\r\n\t\t\t\tif (field.displayHints && field.displayHints.tooltip && field.displayHints.tooltip.image) {\r\n\t\t\t\t\tfield.displayHints.tooltip.image = formatUrl(url) + field.displayHints.tooltip.image;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// The server orders in a different way, so we apply the sortorder\r\n\t\t\tjson.fields.sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\t// set full image path\r\n\t\t\tjson.displayHints.logo = formatUrl(url) + json.displayHints.logo;\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _extendLogoUrl = function (json, url, postfix) {\r\n\t\t\tfor (var i = 0, il = json[\"paymentProduct\" + postfix].length; i < il; i++) {\r\n\t\t\t\tvar product = json[\"paymentProduct\" + postfix][i];\r\n\t\t\t\tproduct.displayHints.logo = formatUrl(url) + product.displayHints.logo;\r\n\t\t\t}\r\n\t\t\tjson[\"paymentProduct\" + postfix].sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _isPaymentProductInList = function (list, paymentProductId) {\r\n\t\t\tfor (var i = list.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\tvar product = list[i];\r\n\t\t\t\tif (product && (product.id === paymentProductId)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n        var _getGooglePayNetworks = function (list, paymentProductId) {\r\n            for (var i = list.length - 1, il = 0; i >= il; i--) {\r\n                var product = list[i];\r\n                if (product && (product.id === paymentProductId)) {\r\n                    return product.paymentProduct320SpecificData.networks\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n\r\n\t\tvar metadata = _util.getMetadata();\r\n\r\n\t\tthis.getBasicPaymentProducts = function (context, paymentProductSpecificInputs) {\r\n\t\t\tvar cacheKeyLocale= context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar paymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProducts-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ cacheKeyLocale + context.isRecurring + \"_\" + context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterLocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields\" + urlParameterLocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"s\");\r\n\t\t\t\t\t\t\tif (_isPaymentProductInList(json.paymentProducts, _util.googlePayPaymentProductId)) {\r\n\t\t\t\t\t\t\t\tif (_GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n\t\t\t\t\t\t\t\t\tvar networks = _getGooglePayNetworks(json.paymentProducts, _util.googlePayPaymentProductId);\r\n\t\t\t\t\t\t\t\t\t_GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, networks).then(function (isGooglePayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//GooglePay does not have merchantId\r\n\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\tconsole.warn('You have not provided a merchantId for Google Pay, you can set this in the paymentProductSpecificInputs object');\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject('failed to retrieve Basic Payment Products', res);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function (context) {\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroups-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ cacheKeyLocale + context.isRecurring + \"_\" + context.currency;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterLocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields\" + urlParameterLocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"Groups\");\r\n\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function (paymentProductId, context, paymentProductSpecificInputs) {\r\n\t\t\tvar paymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProduct-\" + paymentProductId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\r\n\t\t\tif (_util.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(paymentProductId) > -1) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.reject({\r\n\t\t\t\t\t\t\"errorId\": \"48b78d2d-1b35-4f8b-92cb-57cc2638e901\",\r\n\t\t\t\t\t\t\"errors\": [{\r\n\t\t\t\t\t\t\t\"code\": \"1007\",\r\n\t\t\t\t\t\t\t\"propertyName\": \"productId\",\r\n\t\t\t\t\t\t\t\"message\": \"UNKNOWN_PRODUCT_ID\",\r\n\t\t\t\t\t\t\t\"httpStatusCode\": 404\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductId) {\r\n\t\t\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar json = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar urlParameterlocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\t\tvar getPaymentProductUrl = formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t\t+ \"/products/\" + paymentProductId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t\t+ \"&currencyCode=\" + context.currency + urlParameterlocale;\r\n\r\n\t\t\t\t\tif ((paymentProductId === _util.bancontactPaymentProductId) &&\r\n\t\t\t\t\tpaymentProductSpecificInputs &&\r\n\t\t\t\t\tpaymentProductSpecificInputs.bancontact &&\r\n\t\t\t\t\tpaymentProductSpecificInputs.bancontact.forceBasicFlow) {\r\n\t\t\t\t\t\t// Add query parameter to products call to force basic flow for bancontact\r\n\t\t\t\t\t\tgetPaymentProductUrl += \"&forceBasicFlow=\" + paymentProductSpecificInputs.bancontact.forceBasicFlow\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgetPaymentProductUrl += \"&cacheBust=\" + cacheBust;\r\n\r\n\t\t\t\t\tNet.get(getPaymentProductUrl)\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t\t\t\tif (paymentProductId === _util.googlePayPaymentProductId) {\r\n\t\t\t\t\t\t\t\t\tif (_GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n                                        var networks = cleanedJSON.paymentProduct320SpecificData.networks;\r\n\t\t\t\t\t\t\t\t\t\t_GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, networks).then(function (isGooglePayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (isGooglePayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t\t//_isGooglePayAvailable returned false so google pay is not available, so reject getPaymentProduct\r\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t//_isGooglePayAvailable rejected so not available\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t// merchantId is not provided so reject\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tpromise.reject('failed to retrieve Payment Product', res);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, context) {\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroup-\" + paymentProductGroupId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency;\r\n\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductGroupId) {\r\n\t\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar json = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterlocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups/\" + paymentProductGroupId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t+ \"&currencyCode=\" + context.currency + urlParameterlocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductIdByCreditCardNumber = function (partialCreditCardNumber, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, iinDetailsResponse = new IinDetailsResponse()\r\n\t\t\t\t, cacheKey = \"getPaymentProductIdByCreditCardNumber-\" + partialCreditCardNumber;\r\n\r\n\t\t\tvar that = this;\r\n\t\t\tthis.context = context;\r\n\t\t\tif (_cache[cacheKey]) {// cache is based on digit 1-6\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar isEnoughDigits = function (partialCreditCardNumber) {\r\n\t\t\t\t\tif (partialCreditCardNumber.length < 6) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t};\r\n\t\t\t\tif (isEnoughDigits(partialCreditCardNumber)) {\r\n\t\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/services/getIINdetails\")\r\n\t\t\t\t\t\t.data(JSON.stringify(this.convertContextToIinDetailsContext(partialCreditCardNumber, this.context)))\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.json = res.responseJSON;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.countryCode = res.responseJSON.countryCode;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.paymentProductId = res.responseJSON.paymentProductId;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.isAllowedInContext = res.responseJSON.isAllowedInContext;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.coBrands = res.responseJSON.coBrands;\r\n\t\t\t\t\t\t\t\t// check if this card is supported\r\n\t\t\t\t\t\t\t\t// if isAllowedInContext is available in the response set status and resolve\r\n\t\t\t\t\t\t\t\tif (res.responseJSON.hasOwnProperty('isAllowedInContext')) {\r\n\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\tif (iinDetailsResponse.isAllowedInContext === false) {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"EXISTING_BUT_NOT_ALLOWED\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//if isAllowedInContext is not available get the payment product again to determine status and resolve\r\n\t\t\t\t\t\t\t\t\tthat.getPaymentProduct(iinDetailsResponse.paymentProductId, that.context).then(function (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\tif (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNSUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tiinDetailsResponse.status = \"NOT_ENOUGH_DIGITS\";\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertContextToIinDetailsContext = function (partialCreditCardNumber, context) {\r\n\t\t\treturn {\r\n\t\t\t\t\"bin\": partialCreditCardNumber,\r\n\t\t\t\t\"paymentContext\": {\r\n\t\t\t\t\t\"countryCode\": context.countryCode,\r\n\t\t\t\t\t\"isRecurring\": context.isRecurring,\r\n\t\t\t\t\t\"amountOfMoney\": {\r\n\t\t\t\t\t\t\"amount\": context.totalAmount,\r\n\t\t\t\t\t\t\"currencyCode\": context.currency\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"publicKey\";\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/crypto/publickey\")\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar publicKeyResponse = new PublicKeyResponse(res.responseJSON);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = publicKeyResponse;\r\n\t\t\t\t\t\t\tpromise.resolve(publicKeyResponse);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to get public key\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"paymentProductNetworks-\" + paymentProductId + \"_\" + context.countryCode + \"_\" + context.currency + \"_\"\r\n\t\t\t\t\t+ context.totalAmount + \"_\" + context.isRecurring;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products/\" + paymentProductId + \"/networks\" + \"?countryCode=\" + context.countryCode + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&isRecurring=\" + context.isRecurring)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"getPaymentProductDirectory-\" + paymentProductId + \"_\" + currencyCode + \"_\" + countryCode;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/directory?countryCode=\" + countryCode + \"&currencyCode=\" + currencyCode)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to retrieve payment product directory\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"convertAmount-\" + amount + \"_\" + source + \"_\" + target;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/services/convert/amount?source=\" + source + \"&target=\" + target + \"&amount=\" + amount)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to convert amount\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\r\n\t\t\tvar promise = new Promise();\r\n\r\n\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/payments/\" + paymentId + \"/thirdpartystatus\")\r\n\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t.end(function (res) {\r\n\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpromise.reject(\"unable to retrieve third party status\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getCustomerDetails = function(paymentProductId, context) {\r\n\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar cacheKey = \"getCustomerDetails_\" + context.countryCode;\r\n\t\t\tcacheKey = constructCacheKeyFromKeyValues(cacheKey, context.values);\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/customerDetails\")\r\n\t\t\t\t\t.data(JSON.stringify(context))\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(res.responseJSON);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tvar constructCacheKeyFromKeyValues = function(prefix, values) {\r\n\t\t\tvar cacheKey = prefix;\r\n\t\t\tfor (var key in values){\r\n\t\t\t\tif (values.hasOwnProperty(key)) {\r\n\t\t\t\t\tcacheKey += \"_\" + values[key].key + \"_\" + values[key].value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn cacheKey;\r\n\t\t}\r\n\t};\r\n\r\n\tconnectsdk.C2SCommunicator = C2SCommunicator;\r\n\treturn C2SCommunicator;\r\n});\r\n","define(\"connectsdk.LabelTemplateElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar LabelTemplateElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.attributeKey = json.attributeKey;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.LabelTemplateElement = LabelTemplateElement;\r\n\treturn LabelTemplateElement;\r\n});","define(\"connectsdk.Attribute\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Attribute = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.key = json.key;\r\n\t\tthis.value = json.value;\r\n\t\tthis.status = json.status;\r\n\t\tthis.mustWriteReason = json.mustWriteReason;\r\n\t};\r\n\r\n\tconnectsdk.Attribute = Attribute;\r\n\treturn Attribute;\r\n});","define(\"connectsdk.AccountOnFileDisplayHints\", [\"connectsdk.core\", \"connectsdk.LabelTemplateElement\"], function(connectsdk, LabelTemplateElement) {\r\n\r\n\tvar _parseJSON = function (_json, _labelTemplate, _labelTemplateElementByAttributeKey) {\r\n\t\tif (_json.labelTemplate) {\r\n\t\t\tfor (var i = 0, l = _json.labelTemplate.length; i < l; i++) {\r\n\t\t\t\tvar labelTemplateElement = new LabelTemplateElement(_json.labelTemplate[i]);\r\n\t\t\t\t_labelTemplate.push(labelTemplateElement);\r\n\t\t\t\t_labelTemplateElementByAttributeKey[labelTemplateElement.attributeKey] = labelTemplateElement;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFileDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.labelTemplate = [];\r\n\t\tthis.labelTemplateElementByAttributeKey = {};\r\n\r\n\t\t_parseJSON(json, this.labelTemplate, this.labelTemplateElementByAttributeKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFileDisplayHints = AccountOnFileDisplayHints;\r\n\treturn AccountOnFileDisplayHints;\r\n});","define(\"connectsdk.AccountOnFile\", [\"connectsdk.core\" ,\"connectsdk.AccountOnFileDisplayHints\", \"connectsdk.Attribute\"], function(connectsdk, AccountOnFileDisplayHints, Attribute) {\r\n\r\n\tvar _parseJSON = function (_json, _attributes, _attributeByKey) {\r\n\t\tif (_json.attributes) {\r\n\t\t\tfor (var i = 0, l = _json.attributes.length; i < l; i++) {\r\n\t\t\t\tvar attribute = new Attribute(_json.attributes[i]);\r\n\t\t\t\t_attributes.push(attribute);\r\n\t\t\t\t_attributeByKey[attribute.key] = attribute;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFile = function (json) {\r\n\t\tvar that = this;\r\n\t\tthis.json = json;\r\n\t\tthis.attributes = [];\r\n\t\tthis.attributeByKey = {};\r\n\t\tthis.displayHints = new AccountOnFileDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.paymentProductId = json.paymentProductId;\r\n\r\n\t\tthis.getMaskedValueByAttributeKey = function(attributeKey) {\r\n\t\t\tvar value = this.attributeByKey[attributeKey].value;\r\n\t\t\tvar wildcardMask;\r\n\t\t\ttry {\r\n\t\t\t\twildcardMask = this.displayHints.labelTemplateElementByAttributeKey[attributeKey].wildcardMask;\r\n\t\t\t} catch (e) {}\r\n\t\t\tif (value !== undefined && wildcardMask !== undefined) {\r\n\t\t\t\tvar maskingUtil = new connectsdk.MaskingUtil();\r\n\t\t\t\treturn maskingUtil.applyMask(wildcardMask, value);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t};\r\n\r\n\t\t_parseJSON(json, this.attributes, this.attributeByKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFile = AccountOnFile;\r\n\treturn AccountOnFile;\r\n});","define(\"connectsdk.PaymentProduct302SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct302SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.networks = json.networks;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct302SpecificData = PaymentProduct302SpecificData;\r\n\treturn PaymentProduct302SpecificData;\r\n});","define(\"connectsdk.PaymentProduct320SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct320SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.gateway = json.gateway;\r\n\t\tthis.networks = json.networks;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct320SpecificData = PaymentProduct320SpecificData;\r\n\treturn PaymentProduct320SpecificData;\r\n});","define(\"connectsdk.PaymentProduct863SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct863SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.integrationTypes = json.integrationTypes;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct863SpecificData = PaymentProduct863SpecificData;\r\n\treturn PaymentProduct863SpecificData;\r\n});","define(\"connectsdk.PaymentProductDisplayHints\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProductDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayOrder = json.displayOrder;\r\n\t\tthis.label = json.label;\r\n\t\tthis.logo = json.logo;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductDisplayHints = PaymentProductDisplayHints;\r\n\treturn PaymentProductDisplayHints;\r\n});","define(\"connectsdk.BasicPaymentProduct\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\", \"connectsdk.PaymentProduct302SpecificData\", \"connectsdk.PaymentProduct320SpecificData\", \"connectsdk.PaymentProduct863SpecificData\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints, PaymentProduct302SpecificData, PaymentProduct320SpecificData, PaymentProduct863SpecificData) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProduct, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (_json.paymentProduct302SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct302SpecificData = new PaymentProduct302SpecificData(_json.paymentProduct302SpecificData);\r\n\t\t}\r\n\t\tif (_json.paymentProduct320SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct320SpecificData = new PaymentProduct320SpecificData(_json.paymentProduct320SpecificData);\r\n\t\t}\r\n\t\tif (_json.paymentProduct863SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct863SpecificData = new PaymentProduct863SpecificData(_json.paymentProduct863SpecificData);\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProduct = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"product\";\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.allowsRecurring = json.allowsRecurring;\r\n\t\tthis.allowsTokenization = json.allowsTokenization;\r\n\t\tthis.autoTokenized  = json.autoTokenized ;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.maxAmount = json.maxAmount;\r\n\t\tthis.minAmount = json.minAmount;\r\n\t\tthis.paymentMethod = json.paymentMethod;\r\n\t\tthis.mobileIntegrationLevel = json.mobileIntegrationLevel;\r\n\t\tthis.usesRedirectionTo3rdParty = json.usesRedirectionTo3rdParty;\r\n\t\tthis.paymentProductGroup = json.paymentProductGroup;\r\n\r\n\t\t_parseJSON(json, this, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProduct = BasicPaymentProduct;\r\n\treturn BasicPaymentProduct;\r\n});","define(\"connectsdk.BasicPaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\r\n\r\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroup = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"group\";\r\n\t\tthis.id = json.id;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroup = BasicPaymentProductGroup;\r\n\treturn BasicPaymentProductGroup;\r\n});","define(\"connectsdk.MaskedString\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar MaskedString = function(formattedValue, cursorIndex) {\r\n\r\n\t\tthis.formattedValue = formattedValue;\r\n\t\tthis.cursorIndex = cursorIndex;\r\n\t};\r\n\r\n\tconnectsdk.MaskedString = MaskedString;\r\n\treturn MaskedString;\r\n});","define(\"connectsdk.MaskingUtil\", [\"connectsdk.core\", \"connectsdk.MaskedString\"], function(connectsdk, MaskedString) {\r\n\r\n\tvar _fillBuffer = function(index, offset, buffer, tempMask, valuec) {\r\n\t\tif (index+offset < valuec.length && index < tempMask.length) {\r\n\t\t\tif ((tempMask[index] === \"9\" && Number(valuec[index+offset]) > -1 && valuec[index+offset] !== \" \") || tempMask[index] === \"*\") {\r\n\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t} else {\r\n\t\t\t\tif (valuec[index+offset] === tempMask[index]) {\r\n\t\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t\t} else if (tempMask[index] !== \"9\" && tempMask[index] !== \"*\") {\r\n\t\t\t\t\tbuffer.push(tempMask[index]);\r\n\t\t\t\t\toffset--;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// offset++;\r\n\t\t\t\t\tvaluec.splice(index+offset, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_fillBuffer(index+1, offset, buffer, tempMask, valuec);\r\n\t\t}\r\n\t};\r\n\r\n\tvar MaskingUtil = function () {\r\n\t\tthis.applyMask = function (mask, newValue, oldValue) {\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = newValue.split(\"\");\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\ttempMask = [];\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttempMask.push(c);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// tempmask now contains the replaceable chars and the non-replaceable masks at the correct index\r\n\t\t\t\t_fillBuffer(0, 0, buffer, tempMask, valuec);\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnewValue = buffer.join(\"\");\r\n\t\t\tvar cursor = 1;\r\n\t\t\t// calculate the cursor index\r\n\t\t\tif (oldValue) {\r\n\t\t\t\tvar tester = oldValue.split(\"\");\r\n\t\t\t\tfor (var i = 0, il = buffer.length; i < il; i++) {\r\n\t\t\t\t\tif (buffer[i] !== tester[i]) {\r\n\t\t\t\t\t\tcursor = i+1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (newValue.substring(0, newValue.length -1) === oldValue) {\r\n\t\t\t\tcursor = newValue.length + 1;\r\n\t\t\t}\r\n\t\t\treturn new MaskedString(newValue, cursor);\r\n\t\t};\r\n\t\t\r\n\t\tthis.getMaxLengthBasedOnMask = function (mask) {\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tnewLength = -1;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tnewLength++;\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tnewLength--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newLength;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.removeMask = function (mask, value) {\r\n\t\t\t// remove the mask from the masked input\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = (value) ? value.split(\"\") : [];\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tvalueIndex = -1,\r\n\t\t\t\t\t\tinMask = false;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tvalueIndex++;\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tvalueIndex--;\r\n\t\t\t\t\t\tif (c === \"{\") {\r\n\t\t\t\t\t\t\tinMask = true;\r\n\t\t\t\t\t\t} else if (c === \"}\") {\r\n\t\t\t\t\t\t\tinMask = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (inMask && valuec[valueIndex]) {\r\n\t\t\t\t\t\t\tbuffer.push(valuec[valueIndex]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn buffer.join(\"\").trim();\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.MaskingUtil = MaskingUtil;\r\n\treturn MaskingUtil;\r\n});","define(\"connectsdk.ValidationRuleLuhn\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLuhn = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.validate = function (value) {\r\n\t\t\tvar luhnArr = [[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]]\r\n\t\t\t\t,sum = 0;\r\n\t\t\t\t\r\n\t   \t\tvalue.replace(/\\D+/g,\"\").replace(/[\\d]/g, function(c, p, o) {\r\n\t\t        sum += luhnArr[ (o.length-p)&1 ][ parseInt(c,10) ];\r\n\t\t    });\r\n\t\t    return (sum%10 === 0) && (sum > 0);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLuhn = ValidationRuleLuhn;\r\n\treturn ValidationRuleLuhn;\r\n});","define(\"connectsdk.ValidationRuleExpirationDate\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\tvar _validateDateFormat = function (value) {\r\n\t\tvar pattern = /\\d{4}|\\d{6}$/g;\r\n\t\treturn pattern.test(value);\r\n\t};\r\n\r\n\tvar ValidationRuleExpirationDate = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\t\tthis.errorMessageId = json.type;\r\n\r\n\t\t// value is mmYY or mmYYYY\r\n\t\tthis.validate = function (value) {\r\n\t\t\tvalue = value.replace(/[^\\d]/g, '');\r\n\t\t\tif (value.length === 4) {\r\n\t\t\t\tsplit = [value.substring(0, 2), \"20\" + value.substring(2, 4)];\r\n\t\t\t} else if (value.length === 6) {\r\n\t\t\t\tsplit = [value.substring(0, 2), value.substring(2, 6)];\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (_validateDateFormat(value)) {\r\n\t\t\t\tvar now = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\r\n\t\t\t\tvar expirationDate = new Date(split[1], split[0] - 1, 1);\r\n\t\t\t\tif (expirationDate.getMonth() !== Number(split[0] - 1) || expirationDate.getFullYear() !== Number(split[1])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn expirationDate >= now; // the expiration month could be THIS month but that is still valid!\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleExpirationDate = ValidationRuleExpirationDate;\r\n\treturn ValidationRuleExpirationDate;\r\n});","define(\"connectsdk.ValidationRuleFixedList\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleFixedList = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.allowedValues = json.attributes.allowedValues;\r\n\t\t\r\n\t\tthis.validate = function (value) {\r\n\t\t\tfor (var i = 0, il = this.allowedValues.length; i < il; i++) {\r\n\t\t\t\tif (this.allowedValues[i] === value) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleFixedList = ValidationRuleFixedList;\r\n\treturn ValidationRuleFixedList;\r\n});","define(\"connectsdk.ValidationRuleLength\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLength = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxLength = json.attributes.maxLength;\r\n\t\tthis.minLength = json.attributes.minLength;\r\n\t\t\r\n\t\tthis.validate = function (value) {\r\n\t\t\treturn this.minLength <= value.length && value.length <= this.maxLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLength = ValidationRuleLength;\r\n\treturn ValidationRuleLength;\r\n});","define(\"connectsdk.ValidationRuleRange\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRange = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxValue = json.attributes.maxValue;\r\n\t\tthis.minValue = json.attributes.minValue;\r\n\t\t\r\n\t\tthis.validate = function(value) {\r\n\t\t\tif (isNaN(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = Number(value);\r\n\t\t\treturn this.minValue <= value && value <= this.maxValue;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRange = ValidationRuleRange;\r\n\treturn ValidationRuleRange;\r\n});","define(\"connectsdk.ValidationRuleRegularExpression\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRegularExpression = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.regularExpression = json.attributes.regularExpression;\r\n\t\t\r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(this.regularExpression);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRegularExpression = ValidationRuleRegularExpression;\r\n\treturn ValidationRuleRegularExpression;\r\n});","define(\"connectsdk.ValidationRuleEmailAddress\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleEmailAddress = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\tthis.errorMessageId = json.type;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(/^[^@\\.]+(\\.[^@\\.]+)*@([^@\\.]+\\.)*[^@\\.]+\\.[^@\\.][^@\\.]+$/i);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleEmailAddress = ValidationRuleEmailAddress;\r\n\treturn ValidationRuleEmailAddress;\r\n});","define(\"connectsdk.ValidationRuleTermsAndConditions\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleTermsAndConditions = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\tthis.errorMessageId = json.type;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\treturn true === value || \"true\" === value;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleTermsAndConditions = ValidationRuleTermsAndConditions;\r\n\treturn ValidationRuleTermsAndConditions;\r\n});","define(\"connectsdk.ValidationRuleBoletoBancarioRequiredness\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleBoletoBancarioRequiredness = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.fiscalNumberLength = json.attributes.fiscalNumberLength;\r\n\t\t\r\n\t\tthis.validate = function (value, fiscalNumberValue) {\r\n\t\t\treturn (fiscalNumberValue.length === this.fiscalNumberLength && value.length > 0) || fiscalNumberValue.length !== this.fiscalNumberLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleBoletoBancarioRequiredness = ValidationRuleBoletoBancarioRequiredness;\r\n\treturn ValidationRuleBoletoBancarioRequiredness;\r\n});","define('connectsdk.ValidationRuleIban', ['connectsdk.core'], function (connectsdk) {\r\n\r\n  /**\r\n   * Sanitize value by remove all unwanted chars of a Iban format\r\n   *\r\n   * @param {String} value\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  var _sanitizeValue = function (value) {\r\n    return value.replace(/[^\\d\\w]+/g, '').toUpperCase();\r\n  };\r\n\r\n  /**\r\n   * Get state if given value is a valid Iban format\r\n   *\r\n   * @param {String} value\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  var _isValidFormat = function (value) {\r\n    return typeof value === 'string' && /^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{7}([A-Z0-9]?){0,16}$/.test(_sanitizeValue(value));\r\n  };\r\n\r\n  /**\r\n   * Convert a value to a string needed for validation calculations\r\n   *\r\n   * @param {String} value\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  var _toComputedString = function (value) {\r\n    return _sanitizeValue(value)\r\n\r\n    // place the first 4 chars to the end\r\n      .replace(/(^.{4})(.*)/, '$2$1')\r\n\r\n      // replace letters by corresponding numbers A=10 / Z=35\r\n      .replace(/[A-Z]/g, function (d) {\r\n        return d.charCodeAt(0) - 55;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Validate Iban by given json\r\n   *\r\n   * @param {Object} json\r\n   * @constructor\r\n   */\r\n  var ValidationRuleIban = function (json) {\r\n    this.json           = json;\r\n    this.type           = json.type;\r\n    this.errorMessageId = json.type;\r\n\r\n    /**\r\n     * Validate Iban nrule\r\n     *\r\n     * @see https://github.com/arhs/iban.js/blob/master/iban.js\r\n     *\r\n     * @param   {string} value\r\n     * @returns {boolean}\r\n     */\r\n    this.validate = function (value) {\r\n\r\n      // bail if format is invalid\r\n      if (!_isValidFormat(value)) {\r\n        return false;\r\n      }\r\n\r\n      // Check if reminder module 97 equals 1\r\n      // only then it should pass the validation\r\n      var remainder = _toComputedString(value),\r\n          block;\r\n\r\n      while (remainder.length > 2) {\r\n        block     = remainder.slice(0, 9);\r\n        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\r\n      }\r\n\r\n      return (parseInt(remainder, 10) % 97) === 1;\r\n    };\r\n  };\r\n\r\n  connectsdk.ValidationRuleIban = ValidationRuleIban;\r\n  return ValidationRuleIban;\r\n});","define(\"connectsdk.ValidationRuleFactory\", [\"connectsdk.core\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleTermsAndConditions\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleBoletoBancarioRequiredness\", \"connectsdk.ValidationRuleIban\"], function (connectsdk, ValidationRuleEmailAddress, ValidationRuleTermsAndConditions, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleBoletoBancarioRequiredness, ValidationRuleIban) {\r\n\r\n    var ValidationRuleFactory = function () {\r\n\r\n        this.makeValidator = function (json) {\r\n            // create new class based on the rule\r\n            try {\r\n                var classType = json.type.charAt(0).toUpperCase() + json.type.slice(1), // camel casing\r\n                    className = eval(\"ValidationRule\" + classType);\r\n                return new className(json);\r\n            } catch (e) {\r\n                console.warn('no validator for ', classType);\r\n            }\r\n            return null;\r\n        };\r\n    };\r\n\r\n    connectsdk.ValidationRuleFactory = ValidationRuleFactory;\r\n    return ValidationRuleFactory;\r\n});","define(\"connectsdk.DataRestrictions\", [\"connectsdk.core\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleTermsAndConditions\", \"connectsdk.ValidationRuleIban\", \"connectsdk.ValidationRuleFactory\"], function(connectsdk, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleEmailAddress, ValidationRuleTermsAndConditions, ValidationRuleIban, ValidationRuleFactory) {\r\n\r\n\tvar DataRestrictions = function (json, mask) {\r\n\r\n\t\tvar _parseJSON = function (_json, _validationRules, _validationRuleByType) {\r\n\t\t    var validationRuleFactory = new ValidationRuleFactory();\r\n\t\t\tif (_json.validators) {\r\n\t\t\t\tfor (var key in _json.validators) {\r\n\t\t\t\t\tvar validationRule = validationRuleFactory.makeValidator({type: key, attributes: _json.validators[key]});\r\n\t\t\t\t\tif (validationRule) {\r\n\t\t\t\t\t\t_validationRules.push(validationRule);\r\n\t\t\t\t\t\t_validationRuleByType[validationRule.type] = validationRule;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.isRequired = json.isRequired;\r\n\t\tthis.validationRules = [];\r\n\t\tthis.validationRuleByType = {};\r\n\r\n\t\t_parseJSON(json, this.validationRules, this.validationRuleByType);\r\n\t};\r\n\r\n\tconnectsdk.DataRestrictions = DataRestrictions;\r\n\treturn DataRestrictions;\r\n});","define(\"connectsdk.ValueMappingElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValueMappingElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayName = json.displayName;\r\n\t\tthis.value = json.value;\r\n\t};\r\n\r\n\tconnectsdk.ValueMappingElement = ValueMappingElement;\r\n\treturn ValueMappingElement;\r\n});","define(\"connectsdk.FormElement\", [\"connectsdk.core\", \"connectsdk.ValueMappingElement\"], function(connectsdk, ValueMappingElement) {\r\n\r\n\tvar FormElement = function (json) {\r\n\r\n\t\tvar _parseJSON = function (_json, _valueMapping) {\r\n\t\t\tif (_json.valueMapping) {\r\n\t\t\t\tfor (var i = 0, l = _json.valueMapping.length; i < l; i++) {\r\n\t\t\t\t\t_valueMapping.push(new ValueMappingElement(_json.valueMapping[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type;\r\n\t\tthis.valueMapping = [];\r\n\t\t\r\n\t\t_parseJSON(json, this.valueMapping);\r\n\t};\r\n\r\n\tconnectsdk.FormElement = FormElement;\r\n\treturn FormElement;\r\n});","define(\"connectsdk.Tooltip\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Tooltip = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.image = json.image;\r\n\t\tthis.label = json.label;\r\n\t};\r\n\r\n\tconnectsdk.Tooltip = Tooltip;\r\n\treturn Tooltip;\r\n});","define(\"connectsdk.PaymentProductFieldDisplayHints\", [\"connectsdk.core\", \"connectsdk.Tooltip\", \"connectsdk.FormElement\"], function(connectsdk, Tooltip, FormElement) {\r\n\r\n\tvar PaymentProductFieldDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n \t\tthis.displayOrder = json.displayOrder;\r\n\t\tif (json.formElement) {\r\n\t\t\tthis.formElement = new FormElement(json.formElement);\r\n\t\t}\r\n\t\tthis.label = json.label;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.obfuscate = json.obfuscate;\r\n\t\tthis.placeholderLabel = json.placeholderLabel;\r\n\t\tthis.preferredInputType = json.preferredInputType;\r\n\t\tthis.tooltip = json.tooltip? new Tooltip(json.tooltip): undefined;\r\n\t\tthis.alwaysShow = json.alwaysShow;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductFieldDisplayHints = PaymentProductFieldDisplayHints;\r\n\treturn PaymentProductFieldDisplayHints;\r\n});","define(\"connectsdk.PaymentProductField\", [\"connectsdk.core\", \"connectsdk.PaymentProductFieldDisplayHints\", \"connectsdk.DataRestrictions\", \"connectsdk.MaskingUtil\"], function(connectsdk, PaymentProductFieldDisplayHints, DataRestrictions, MaskingUtil) {\r\n\tvar PaymentProductField = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayHints = json.displayHints ? new PaymentProductFieldDisplayHints(json.displayHints) : '';\r\n\t\tthis.dataRestrictions = new DataRestrictions(json.dataRestrictions, this.displayHints ? this.displayHints.mask : '');\r\n\t\tthis.id = json.id;\r\n\t\tthis.type = json.type;\r\n\t\tvar _errorCodes = [];\r\n\r\n\t\tthis.getErrorCodes = function (value) {\r\n\t\t\tif (value) {\r\n\t\t\t\t_errorCodes = [];\r\n\t\t\t\tthis.isValid(value);\r\n\t\t\t}\r\n\t\t\treturn _errorCodes;\r\n\t\t};\r\n\t\tthis.isValid = function (value) {\r\n\t\t\t// isValid checks all datarestrictions\r\n\t\t\tvar validators = this.dataRestrictions.validationRules;\r\n\t\t\tvar hasError = false;\r\n\t\t\tvalue = this.removeMask(value);\r\n\t\t\tfor (var i = 0, il = validators.length; i < il; i++) {\r\n\t\t\t\tvar validator = validators[i];\r\n\t\t\t\tif (!validator.validate(value)) {\r\n\t\t\t\t\thasError = true;\r\n\t\t\t\t\t_errorCodes.push(validator.errorMessageId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn !hasError;\r\n\t\t};\r\n\t\tthis.applyMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.mask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.applyWildcardMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.wildcardMask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.removeMask = function (value) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.removeMask(this.displayHints.mask, value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductField = PaymentProductField;\r\n\treturn PaymentProductField;\r\n});","define(\"connectsdk.PaymentProduct\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProduct = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.json = json;\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct = PaymentProduct;\r\n\treturn PaymentProduct;\r\n});","define(\"connectsdk.PaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProductGroup = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.json = json;\r\n\t\tbasicPaymentProduct.json.type = \"group\";\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductGroup = PaymentProductGroup;\r\n\treturn PaymentProductGroup;\r\n});","define(\"connectsdk.BasicPaymentProducts\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\"], function(connectsdk, BasicPaymentProduct) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProducts, _accountsOnFile, _paymentProductById, _accountOnFileById, _paymentProductByAccountOnFileId) {\r\n\t\tif (_json.paymentProducts) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProducts.length; i < il; i++) {\r\n\t\t\t\tvar paymentProduct = new BasicPaymentProduct(_json.paymentProducts[i]);\r\n\t\t\t\t_paymentProducts.push(paymentProduct);\r\n\t\t\t\t_paymentProductById[paymentProduct.id] = paymentProduct;\r\n\r\n\t\t\t\tif (paymentProduct.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProduct.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t\t_paymentProductByAccountOnFileId[aof.id] = paymentProduct;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProducts = function (json) {\r\n\t\tthis.basicPaymentProducts = [];\r\n\t\tthis.basicPaymentProductById = {};\r\n\t\tthis.basicPaymentProductByAccountOnFileId = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProducts, this.accountsOnFile, this.basicPaymentProductById, this.accountOnFileById, this.basicPaymentProductByAccountOnFileId);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProducts = BasicPaymentProducts;\r\n\treturn BasicPaymentProducts;\r\n});","define(\"connectsdk.BasicPaymentProductGroups\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProductGroup\"], function(connectsdk, BasicPaymentProductGroup) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProductGroups, _accountsOnFile, _paymentProductGroupById, _accountOnFileById) {\r\n\t\tif (_json.paymentProductGroups) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductGroup = new BasicPaymentProductGroup(_json.paymentProductGroups[i]);\r\n\t\t\t\t_paymentProductGroups.push(paymentProductGroup);\r\n\t\t\t\t_paymentProductGroupById[paymentProductGroup.id] = paymentProductGroup;\r\n\r\n\t\t\t\tif (paymentProductGroup.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProductGroup.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroups = function (json) {\r\n\t\tthis.basicPaymentProductGroups = [];\r\n\t\tthis.basicPaymentProductGroupById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProductGroups, this.accountsOnFile, this.basicPaymentProductGroupById, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroups = BasicPaymentProductGroups;\r\n\treturn BasicPaymentProductGroups;\r\n});","define(\"connectsdk.BasicPaymentItems\", [\"connectsdk.core\"], function(connectsdk) {\r\n\t\"use strict\";\r\n\r\n\t\tvar _parseJson = function (_products, _groups, _basicPaymentItems) {\r\n\t\tvar doRemove = [];\r\n\t\tif (_groups) {\r\n\t\t\tfor (var i = 0, il = _groups.basicPaymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar groupId = _groups.basicPaymentProductGroups[i].id,\r\n\t\t\t\t\t\tgroupReplaced = false;\r\n\t\t\t\tfor (var j = 0, jl = _products.basicPaymentProducts.length; j < jl; j++) {\r\n\t\t\t\t\tvar productMethod = _products.basicPaymentProducts[j].paymentProductGroup;\r\n\t\t\t\t\tif (productMethod === groupId && groupReplaced === false) {\r\n\t\t\t\t\t\t// replace instance by group\r\n\t\t\t\t\t\t_products.basicPaymentProducts.splice(j, 1, _groups.basicPaymentProductGroups[i]);\r\n\t\t\t\t\t\tgroupReplaced = true;\r\n\t\t\t\t\t} else if (productMethod === groupId && groupReplaced === true) {\r\n\t\t\t\t\t\t// mark for removal\r\n\t\t\t\t\t\tdoRemove.push(j);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = doRemove.length -1, il = 0; i >= il; i--) {\r\n\t\t\t\t_products.basicPaymentProducts.splice(doRemove[i], 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t_basicPaymentItems.basicPaymentItems = JSON.parse(JSON.stringify(_products.basicPaymentProducts));\r\n\t\tfor (var i = 0, il = _basicPaymentItems.basicPaymentItems.length; i < il; i++) {\r\n\t\t\tvar basicPaymentItem = _basicPaymentItems.basicPaymentItems[i];\r\n\t\t\t_basicPaymentItems.basicPaymentItemById[basicPaymentItem.id] = basicPaymentItem;\r\n\t\t\tif (basicPaymentItem.accountsOnFile) {\r\n\t\t\t\tvar aofs = basicPaymentItem.accountsOnFile;\r\n\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t_basicPaymentItems.accountsOnFile.push(aof);\r\n\t\t\t\t\t_basicPaymentItems.accountOnFileById[aof.id] = aof;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tvar BasicPaymentItems = function (products, groups) {\r\n\t\tthis.basicPaymentItems = [];\r\n\t\tthis.basicPaymentItemById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJson(products, groups, this);\r\n\t};\r\n\tconnectsdk.BasicPaymentItems = BasicPaymentItems;\r\n\treturn BasicPaymentItems;\r\n});","define(\"connectsdk.PaymentRequest\", [\"connectsdk.core\"], function(connectsdk) {\r\n  var PaymentRequest = function(clientSessionID) {\r\n    var _clientSessionID = clientSessionID;\r\n    var _fieldValues = {};\r\n    var _paymentProduct = null;\r\n    var _accountOnFile = null;\r\n    var _tokenize = false;\r\n\r\n    this.isValid = function() {\r\n      var errors = this.getErrorMessageIds();\r\n      // besides checking the fields for errors check if all mandatory fields are present as well\r\n      var paymentProduct = this.getPaymentProduct();\r\n      if (!paymentProduct) {\r\n        return false;\r\n      }\r\n      var allRequiredFieldsPresent = true;\r\n      for (var i = 0; i < paymentProduct.paymentProductFields.length; i++) {\r\n        var field = paymentProduct.paymentProductFields[i];\r\n        if (field.dataRestrictions.isRequired) {\r\n          // is this field present in the request?\r\n          var storedValue = this.getValue(field.id);\r\n          if (!storedValue && !this.getAccountOnFile()) {\r\n              // if we have an acoount on file the account on file could have the field, so we can ignore it\r\n            allRequiredFieldsPresent = false;\r\n          }\r\n        }\r\n      }\r\n      return errors.length === 0 && allRequiredFieldsPresent;\r\n    };\r\n    this.setValue = function(paymentProductFieldId, value) {\r\n      _fieldValues[paymentProductFieldId] = value;\r\n    };\r\n    this.setTokenize = function(tokenize) {\r\n      _tokenize = tokenize;\r\n    };\r\n    this.getTokenize = function() {\r\n      return _tokenize;\r\n    };\r\n    this.getErrorMessageIds = function() {\r\n      var errors = [];\r\n      for (key in _fieldValues) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[key];\r\n        if (paymentProductField) {\r\n          errors = errors.concat(paymentProductField.getErrorCodes(_fieldValues[key]));\r\n        }\r\n      }\r\n      return errors;\r\n    };\r\n    this.getValue = function(paymentProductFieldId) {\r\n      return _fieldValues[paymentProductFieldId];\r\n    };\r\n    this.getValues = function() {\r\n      return _fieldValues;\r\n    };\r\n    this.getMaskedValue = function(paymentProductFieldId) {\r\n      var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n      var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n      return maskedString.formattedValue();\r\n    };\r\n    this.getMaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n        result[paymentProductFieldId] = maskedString.formattedValue;\r\n      }\r\n      return result;\r\n    };\r\n    this.getUnmaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        if (paymentProductField) {\r\n          var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n          var formattedValue = maskedString.formattedValue;\r\n          result[paymentProductFieldId] = paymentProductField.removeMask(formattedValue);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n    this.setPaymentProduct = function(paymentProduct) {\r\n      if (paymentProduct.type === \"group\") {\r\n        return;\r\n      }\r\n      _paymentProduct = paymentProduct;\r\n    };\r\n    this.getPaymentProduct = function() {\r\n      return _paymentProduct;\r\n    };\r\n    this.setAccountOnFile = function(accountOnFile) {\r\n      for (var i = 0, il = accountOnFile.attributes.length; i < il; i++) {\r\n        var attribute = accountOnFile.attributes[i];\r\n        delete _fieldValues[attribute.key];\r\n      }\r\n      _accountOnFile = accountOnFile;\r\n    };\r\n    this.getAccountOnFile = function() {\r\n      return _accountOnFile;\r\n    };\r\n    this.getClientSessionID = function() {\r\n\t\t    return clientSessionID;\r\n    };\r\n  };\r\n  connectsdk.PaymentRequest = PaymentRequest;\r\n  return PaymentRequest;\r\n});","define(\"connectsdk.C2SPaymentProductContext\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n    var C2SPaymentProductContext = function (payload) {\r\n        this.totalAmount = (payload.totalAmount === undefined) ? '' : payload.totalAmount;\r\n        this.countryCode = payload.countryCode;\r\n        this.isRecurring = (payload.isRecurring === undefined) ? '' : payload.isRecurring;\r\n        this.currency = payload.currency;\r\n        if (payload.locale !== undefined){\r\n            this.locale = payload.locale\r\n        }\r\n    };\r\n\r\n  connectsdk.C2SPaymentProductContext = C2SPaymentProductContext;\r\n  return C2SPaymentProductContext;\r\n});","define(\"connectsdk.JOSEEncryptor\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar pki = forge.pki;\r\n\tvar asn1 = forge.asn1;\r\n\tvar CEKKEYLENGTH = 512;\r\n\tvar IVLENGTH = 128;\r\n\r\n\tvar base64UrlEncode = function(str) {\r\n\t\tstr = forge.util.encode64(str);\r\n\t\tstr = str.split('=')[0];\r\n\t\tstr = str.replace(/\\+/g, '-');\r\n\t\tstr = str.replace(/\\//g, '_');\r\n\t\treturn str;\r\n\t};\r\n\r\n\tvar createProtectedHeader = function(kid) {\r\n\t\tvar JOSEHeader = {\r\n\t\t\t\"alg\" : \"RSA-OAEP\",\r\n\t\t\t\"enc\" : \"A256CBC-HS512\",\r\n\t\t\t\"kid\" : kid\r\n\t\t};\r\n\t\treturn JSON.stringify(JOSEHeader);\r\n\t};\r\n\r\n\tvar decodePemPublicKey = function(publickeyB64Encoded) {\r\n\t\t// step 1: base64decode\r\n\t\tvar publickeyB64Decoded = forge.util.decode64(publickeyB64Encoded);\r\n\t\t// create a bytebuffer with these bytes\r\n\t\tvar buffer2 = forge.util.createBuffer(publickeyB64Decoded, 'raw');\r\n\t\t// convert DER to ASN1 object\r\n\t\tvar publickeyObject2 = forge.asn1.fromDer(buffer2);\r\n\t\t// convert to publicKey object\r\n\t\tvar publicKey2 = pki.publicKeyFromAsn1(publickeyObject2);\r\n\t\treturn publicKey2;\r\n\t};\r\n\r\n\tvar encryptContentEncryptionKey = function(CEK, publicKey) {\r\n\t\t// encrypt CEK with OAEP+SHA-1+MGF1Padding\r\n\t\tvar encryptedCEK = publicKey.encrypt(CEK, 'RSA-OAEP');\r\n\t\treturn encryptedCEK;\r\n\t};\r\n\r\n\tvar encryptPayload = function(payload, encKey, initializationVector) {\r\n\t\tvar cipher = forge.cipher.createCipher('AES-CBC', encKey);\r\n\t\tcipher.start({\r\n\t\t\tiv : initializationVector\r\n\t\t});\r\n\t\tcipher.update(forge.util.createBuffer(payload));\r\n\t\tcipher.finish();\r\n\t\treturn cipher.output.bytes();\r\n\t};\r\n\r\n\tvar calculateAdditionalAuthenticatedDataLength = function(encodededProtectedHeader) {\r\n\t\tvar buffer = forge.util.createBuffer(encodededProtectedHeader);\r\n\t\tvar lengthInBits = buffer.length() * 8;\r\n\r\n\t\tvar buffer2 = forge.util.createBuffer();\r\n\t\t// convert int to 64bit big endian\r\n\t\tbuffer2.putInt32(0);\r\n\t\tbuffer2.putInt32(lengthInBits);\r\n\t\treturn buffer2.bytes();\r\n\t};\r\n\r\n\tvar calculateHMAC = function(macKey, encodededProtectedHeader, initializationVector, cipherText, al) {\r\n\t\tvar buffer = forge.util.createBuffer();\r\n\t\tbuffer.putBytes(encodededProtectedHeader);\r\n\t\tbuffer.putBytes(initializationVector);\r\n\t\tbuffer.putBytes(cipherText);\r\n\t\tbuffer.putBytes(al);\r\n\r\n\t\tvar hmacInput = buffer.bytes();\r\n\r\n\t\tvar hmac = forge.hmac.create();\r\n\t\thmac.start(forge.sha512.create(), macKey);\r\n\t\thmac.update(hmacInput);\r\n\t\treturn hmac.digest().bytes();\r\n\t};\r\n\r\n\tvar JOSEEncryptor = function() {\r\n\r\n\t\tthis.encrypt = function(plainTextValues, publicKeyResponse) {\r\n\t\t\t// Create protected header and encode it with Base64 encoding\r\n\t\t\tvar payload = JSON.stringify(plainTextValues);\r\n\t\t\tvar protectedHeader = createProtectedHeader(publicKeyResponse.keyId);\r\n\t\t\tvar encodededProtectedHeader = base64UrlEncode(protectedHeader);\r\n\r\n\t\t\t// Create ContentEncryptionKey, is a random byte[]\r\n\t\t\tvar CEK = forge.random.getBytesSync(CEKKEYLENGTH / 8);\r\n\t\t\tvar publicKey = decodePemPublicKey(publicKeyResponse.publicKey);\r\n\r\n\t\t\t// Encrypt the contentEncryptionKey with the GC gateway publickey and encode it with Base64 encoding\r\n\t\t\tvar encryptedContentEncryptionKey = encryptContentEncryptionKey(CEK, publicKey);\r\n\t\t\tvar encodedEncryptedContentEncryptionKey = base64UrlEncode(encryptedContentEncryptionKey);\r\n\r\n\t\t\t// Split the contentEncryptionKey in ENC_KEY and MAC_KEY for using hmac\r\n\t\t\tvar macKey = CEK.substring(0, CEKKEYLENGTH / 2 / 8);\r\n\t\t\tvar encKey = CEK.substring(CEKKEYLENGTH / 2 / 8);\r\n\r\n\t\t\t// Create Initialization Vector\r\n\t\t\tvar initializationVector = forge.random.getBytesSync(IVLENGTH / 8);\r\n\t\t\tvar encodededinitializationVector = base64UrlEncode(initializationVector);\r\n\r\n\t\t\t// Encrypt content with ContentEncryptionKey and Initialization Vector\r\n\t\t\tvar cipherText = encryptPayload(payload, encKey, initializationVector);\r\n\t\t\tvar encodedCipherText = base64UrlEncode(cipherText);\r\n\r\n\t\t\t// Create Additional Authenticated Data  and Additional Authenticated Data Length\r\n\t\t\tvar al = calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader);\r\n\r\n\t\t\t// Calculates HMAC\r\n\t\t\tvar calculatedHmac = calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al);\r\n\r\n\t\t\t// Truncate HMAC Value to Create Authentication Tag\r\n\t\t\tvar authenticationTag = calculatedHmac.substring(0, calculatedHmac.length / 2);\r\n\t\t\tvar encodedAuthenticationTag = base64UrlEncode(authenticationTag);\r\n\r\n\t\t\treturn encodededProtectedHeader + \".\" + encodedEncryptedContentEncryptionKey + \".\" + encodededinitializationVector + \".\" + encodedCipherText + \".\" + encodedAuthenticationTag;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.JOSEEncryptor = JOSEEncryptor;\r\n\treturn JOSEEncryptor;\r\n});","define(\"connectsdk.Encryptor\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.JOSEEncryptor\"], function(connectsdk, Promise, JOSEEncryptor) {\r\n\r\n\tvar Encryptor = function(publicKeyResponsePromise) {\r\n\t\tthis.encrypt = function(paymentRequest) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar encryptedString = '';\r\n\t\t\tpublicKeyResponsePromise.then(function (publicKeyResponse) {\r\n\t\t\t\tif (paymentRequest.isValid()) {\r\n\t\t\t\t    \r\n\t\t\t\t\tvar blob = {\r\n\t\t\t\t\t   clientSessionId: paymentRequest.getClientSessionID()\r\n\t\t\t\t\t   ,nonce: forge.util.bytesToHex(forge.random.getBytesSync(16))\r\n\t\t\t\t\t   ,paymentProductId: paymentRequest.getPaymentProduct().id\r\n                       ,tokenize: paymentRequest.getTokenize()\r\n                    };\r\n                    \r\n\t\t\t\t\tif (paymentRequest.getAccountOnFile()) {\r\n                        blob[\"accountOnFileId\"] = paymentRequest.getAccountOnFile().id;\r\n                    }\r\n                    \r\n                    var paymentValues = [], values = paymentRequest.getUnmaskedValues();\r\n                    var ownValues = Object.getOwnPropertyNames(values);\r\n\t\t\t\t\tfor (var i = 0; i < ownValues.length; i++) {\r\n\t\t\t\t\t\tvar propertyName = ownValues[i];\r\n\t\t\t\t\t\tif (propertyName !== \"length\") {\r\n\t\t\t\t\t\t\tpaymentValues.push({\r\n\t\t\t\t\t\t\t\tkey: propertyName,\r\n\t\t\t\t\t\t\t\tvalue: values[propertyName]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    blob[\"paymentValues\"] = paymentValues;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// use blob to encrypt\r\n\t\t\t\t\tvar joseEncryptor = new JOSEEncryptor();\r\n\t\t\t\t\tencryptedString = joseEncryptor.encrypt(blob, publicKeyResponse);\r\n\t\t\t\t\tpromise.resolve(encryptedString);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpromise.reject(paymentRequest.getErrorMessageIds());\r\n\t\t\t\t}\r\n\t\t\t}, function (error) {\r\n\t\t\t\tpromise.reject(error);\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.Encryptor = Encryptor;\r\n\treturn Encryptor;\r\n});","define(\"connectsdk.Session\", [\"connectsdk.core\", \"connectsdk.C2SCommunicator\", \"connectsdk.C2SCommunicatorConfiguration\", \"connectsdk.IinDetailsResponse\", \"connectsdk.promise\", \"connectsdk.C2SPaymentProductContext\", \"connectsdk.BasicPaymentProducts\", \"connectsdk.BasicPaymentProductGroups\", \"connectsdk.PaymentProduct\", \"connectsdk.PaymentProductGroup\", \"connectsdk.BasicPaymentItems\", \"connectsdk.PaymentRequest\", \"connectsdk.Encryptor\"], function (connectsdk, C2SCommunicator, C2SCommunicatorConfiguration, IinDetailsResponse, Promise, C2SPaymentProductContext, BasicPaymentProducts, BasicPaymentProductGroups, PaymentProduct, PaymentProductGroup, BasicPaymentItems, PaymentRequest, Encryptor) {\r\n\tvar APIVERSION = \"client/v1\";\r\n\tvar session = function (sessionDetails, paymentProduct) {\r\n\r\n\t\tvar _c2SCommunicatorConfiguration = new C2SCommunicatorConfiguration(sessionDetails, APIVERSION),\r\n\t\t\t_c2sCommunicator = new C2SCommunicator(_c2SCommunicatorConfiguration, paymentProduct),\r\n\t\t\t_session = this,\r\n\t\t\t_paymentProductId, _paymentProduct, _paymentRequestPayload, _paymentRequest, _paymentProductGroupId, _paymentProductGroup;\r\n\t\tthis.clientApiUrl = _c2SCommunicatorConfiguration.clientApiUrl;\r\n\t\tthis.assetUrl = _c2SCommunicatorConfiguration.assetUrl;\r\n\r\n\t\tthis.getBasicPaymentProducts = function (paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProducts(c2SPaymentProductContext, paymentProductSpecificInputs).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProducts = new BasicPaymentProducts(json);\r\n\t\t\t\tpromise.resolve(paymentProducts);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function (paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProductGroups(c2SPaymentProductContext).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProductGroups = new BasicPaymentProductGroups(json);\r\n\t\t\t\tpromise.resolve(paymentProductGroups);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentItems = function (paymentRequestPayload, useGroups, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t// get products & groups\r\n\t\t\tif (useGroups) {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\t_session.getBasicPaymentProductGroups(paymentRequestPayload).then(function (groups) {\r\n\t\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, groups);\r\n\t\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, null);\r\n\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function (paymentProductId, paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductId = paymentProductId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProduct(paymentProductId, c2SPaymentProductContext, paymentProductSpecificInputs).then(function (response) {\r\n\t\t\t\t_paymentProduct = new PaymentProduct(response);\r\n\t\t\t\tpromise.resolve(_paymentProduct);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProduct = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductGroupId = paymentProductGroupId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductGroup(paymentProductGroupId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentProductGroup = new PaymentProductGroup(response);\r\n\t\t\t\tpromise.resolve(_paymentProductGroup);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProductGroup = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getIinDetails = function (partialCreditCardNumber, paymentRequestPayload) {\r\n\t\t\tpartialCreditCardNumber = partialCreditCardNumber.replace(/ /g, '').substring(0, 6);\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\treturn _c2sCommunicator.getPaymentProductIdByCreditCardNumber(partialCreditCardNumber, c2SPaymentProductContext);\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\treturn _c2sCommunicator.getPublicKey();\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductNetworks(paymentProductId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tpromise.resolve(response);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\treturn _c2sCommunicator.getPaymentProductDirectory(paymentProductId, currencyCode, countryCode);\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\treturn _c2sCommunicator.convertAmount(amount, source, target);\r\n\t\t};\r\n\r\n\t\tthis.getPaymentRequest = function () {\r\n\t\t\tif (!_paymentRequest) {\r\n\t\t\t\t_paymentRequest = new PaymentRequest(_c2SCommunicatorConfiguration.clientSessionId);\r\n\t\t\t}\r\n\t\t\treturn _paymentRequest;\r\n\t\t};\r\n\r\n\t\tthis.getEncryptor = function () {\r\n\t\t\tvar publicKeyResponsePromise = _c2sCommunicator.getPublicKey();\r\n\t\t\treturn new Encryptor(publicKeyResponsePromise);\r\n\t\t};\r\n\r\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_c2sCommunicator.getThirdPartyPaymentStatus(paymentId).then(function (response) {\r\n\t\t\t\tpromise.resolve(response);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getCustomerDetails = function (paymentProductId, paymentRequestPayload) {\r\n\t\t\treturn _c2sCommunicator.getCustomerDetails(paymentProductId, paymentRequestPayload);\r\n\t\t};\r\n\t};\r\n\tconnectsdk.Session = session;\r\n\treturn session;\r\n});\r\n"]}