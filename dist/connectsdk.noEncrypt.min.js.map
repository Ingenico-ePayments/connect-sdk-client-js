{"version":3,"sources":["core.js","promise.js","net.js","util.js","GooglePay.js","PublicKeyResponse.js","C2SCommunicatorConfiguration.js","IinDetailsResponse.js","C2SCommunicator.js","LabelTemplateElement.js","Attribute.js","AccountOnFileDisplayHints.js","AccountOnFile.js","PaymentProduct302SpecificData.js","PaymentProduct320SpecificData.js","PaymentProduct863SpecificData.js","PaymentProductDisplayHints.js","BasicPaymentProduct.js","BasicPaymentProductGroup.js","MaskedString.js","MaskingUtil.js","ValidationRuleLuhn.js","ValidationRuleExpirationDate.js","ValidationRuleFixedList.js","ValidationRuleLength.js","ValidationRuleRange.js","ValidationRuleRegularExpression.js","ValidationRuleEmailAddress.js","ValidationRuleTermsAndConditions.js","ValidationRuleBoletoBancarioRequiredness.js","ValidationRuleIban.js","ValidationRuleFactory.js","DataRestrictions.js","ValueMappingElement.js","FormElement.js","Tooltip.js","PaymentProductFieldDisplayHints.js","PaymentProductField.js","PaymentProduct.js","PaymentProductGroup.js","BasicPaymentProducts.js","BasicPaymentProductGroups.js","BasicPaymentItems.js","PaymentRequest.js","C2SPaymentProductContext.js","JOSEEncryptor.js","Encryptor.js","session.js"],"names":["global","connectsdk","modules","define","module","dependencies","fn","length","i","apply","this","exports","window","turing","Promise","singleton","self","pending","resolve","result","complete","reject","isSingleton","prototype","then","success","failure","push","type","shift","xhr","XMLHttpRequest","location","protocol","ActiveXObject","e","successfulRequest","request","status","responseText","ajax","url","options","respondToReadyState","readyState","contentType","mimeType","getResponseHeader","response","test","responseJSON","net","parseJSON","responseXML","parseXML","callback","promise","error","setHeaders","defaults","Accept","Content-Type","name","headers","hasOwnProperty","setRequestHeader","send","postBody","chain","method","toLowerCase","asynchronous","onreadystatechange","open","serialize","set","key","value","data","end","arguments","JSONPCallback","runCallback","json","teardown","methodName","parseInt","Date","getTime","trim","s","replace","object","results","encodeURIComponent","join","string","JSON","parse","DOMParser","text","parseFromString","xml","async","loadXML","run","scriptTag","document","createElement","id","src","that","onerror","body","appendChild","removeChild","get","post","jsonp","Util","createInstance","applePayPaymentProductId","googlePayPaymentProductId","bancontactPaymentProductId","getMetadata","screenSize","innerWidth","innerHeight","platformIdentifier","navigator","userAgent","sdkIdentifier","GC","rppEnabledPage","sdkCreator","collectDeviceInformation","timezoneOffsetUtcMinutes","getTimezoneOffset","locale","language","browserData","javaScriptEnabled","javaEnabled","colorDepth","screen","screenHeight","height","screenWidth","width","base64Encode","stringify","o1","o2","o3","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","slice","filterOutProductsThatAreNotSupportedInThisBrowser","paymentProducts","product","paymentProductsThatAreNotSupportedInThisBrowser","indexOf","splice","instance","getInstance","_getGooglePaymentsClient","paymentsClient","googlePayEnvironment","_context","environment","google","payments","api","PaymentsClient","console","prefetchGooglePaymentData","paymentDataRequest","_getGooglePaymentDataRequestForPrefetch","_paymentProductSpecificInputs","googlePay","gatewayMerchantId","merchantName","prefetchPaymentData","warn","_util","_C2SCommunicator","_gateway","_networks","_getBaseCardPaymentMethod","parameters","allowedAuthMethods","allowedCardNetworks","_getTokenizationSpecification","gateway","_getCardPaymentMethod","Object","assign","tokenizationSpecification","_getTransactionInfo","totalPriceStatus","currencyCode","currency","_getMerchantInfo","_getGooglePaymentDataRequest","apiVersion","apiVersionMinor","allowedPaymentMethods","transactionInfo","merchantInfo","GooglePay","C2SCommunicator","isGooglePayAvailable","context","paymentProductSpecificInputs","googlePayData","networks","setTimeout","isReadyToPay","catch","isMerchantIdProvided","merchantId","PublicKeyResponse","keyId","publicKey","C2SCommunicatorConfiguration","sessionDetails","endpoints","PROD","EU","API","ASSETS","US","AMS","PAR","PREPROD","SANDBOX","INTEGRATION","DEV_NAMI","DEV_ISC","clientSessionId","clientSessionID","Error","assetUrl","assetsBaseUrl","clientApiUrl","apiBaseUrl","customerId","region","tester","split","path","IinDetailsResponse","countryCode","paymentProductId","isAllowedInContext","coBrands","Net","c2SCommunicatorConfiguration","paymentProduct","_c2SCommunicatorConfiguration","_cache","_providedPaymentProduct","_GooglePay","_mapType","expirydate","numericstring","integer","expirationDate","formatUrl","endsWith","formatImageUrl","imageUrl","startsWith","prefix","suffix","_cleanJSON","il","fields","field","displayHints","obfuscate","validatorKey","dataRestrictions","validators","formElement","list","tooltip","image","sort","a","b","displayOrder","logo","_extendLogoUrl","postfix","_isPaymentProductInList","_getGooglePayData","paymentProduct320SpecificData","metadata","getBasicPaymentProducts","cacheKeyLocale","cacheBust","cacheKey","totalAmount","isRecurring","urlParameterLocale","res","getBasicPaymentProductGroups","getPaymentProduct","errorId","errors","code","propertyName","message","httpStatusCode","urlParameterlocale","getPaymentProductUrl","bancontact","forceBasicFlow","cleanedJSON","getPaymentProductGroup","paymentProductGroupId","getPaymentProductIdByCreditCardNumber","partialCreditCardNumber","iinDetailsResponse","convertContextToIinDetailsContext","payload","bin","paymentContext","amountOfMoney","amount","accountOnFileId","getPublicKey","publicKeyResponse","getPaymentProductNetworks","getPaymentProductDirectory","convertAmount","source","target","getThirdPartyPaymentStatus","paymentId","getCustomerDetails","constructCacheKeyFromKeyValues","values","transformPaymentProductJSON","LabelTemplateElement","attributeKey","mask","wildcardMask","Attribute","mustWriteReason","_parseJSON","_json","_labelTemplate","_labelTemplateElementByAttributeKey","labelTemplate","l","labelTemplateElement","AccountOnFileDisplayHints","labelTemplateElementByAttributeKey","_attributes","_attributeByKey","attributes","attribute","AccountOnFile","attributeByKey","getMaskedValueByAttributeKey","undefined","MaskingUtil","applyMask","PaymentProduct302SpecificData","PaymentProduct320SpecificData","PaymentProduct863SpecificData","integrationTypes","PaymentProductDisplayHints","label","_paymentProduct","_accountsOnFile","_accountOnFileById","accountsOnFile","accountOnFile","paymentProduct302SpecificData","paymentProduct863SpecificData","BasicPaymentProduct","accountOnFileById","allowsRecurring","allowsTokenization","autoTokenized","maxAmount","minAmount","paymentMethod","mobileIntegrationLevel","usesRedirectionTo3rdParty","paymentProductGroup","BasicPaymentProductGroup","MaskedString","formattedValue","cursorIndex","_fillBuffer","index","offset","buffer","tempMask","valuec","Number","newValue","oldValue","maskc","c","cursor","substring","getMaxLengthBasedOnMask","newLength","removeMask","valueIndex","inMask","ValidationRuleLuhn","errorMessageId","validate","luhnArr","sum","p","o","_validateDateFormat","ValidationRuleExpirationDate","expirationMonth","expirationYear","getMonth","getFullYear","nowWithDay","now","maxExpirationDate","ValidationRuleFixedList","allowedValues","ValidationRuleLength","maxLength","minLength","ValidationRuleRange","maxValue","minValue","isNaN","ValidationRuleRegularExpression","regularExpression","RegExp","ValidationRuleEmailAddress","ValidationRuleTermsAndConditions","ValidationRuleBoletoBancarioRequiredness","fiscalNumberLength","fiscalNumberValue","_sanitizeValue","toUpperCase","_isValidFormat","_toComputedString","d","ValidationRuleIban","block","remainder","ValidationRuleFactory","makeValidator","classType","className","eval","DataRestrictions","isRequired","validationRules","validationRuleByType","_validationRules","_validationRuleByType","validationRuleFactory","validationRule","ValueMappingElement","displayName","FormElement","valueMapping","_valueMapping","Tooltip","PaymentProductFieldDisplayHints","placeholderLabel","preferredInputType","alwaysShow","PaymentProductField","_errorCodes","getErrorCodes","isValid","hasError","validator","applyWildcardMask","_paymentProductFields","_paymentProductFieldById","paymentProductField","PaymentProduct","basicPaymentProduct","paymentProductFields","paymentProductFieldById","PaymentProductGroup","_parseJson","_paymentProducts","_paymentProductById","_paymentProductByAccountOnFileId","aofs","j","jl","aof","BasicPaymentProducts","basicPaymentProducts","basicPaymentProductById","basicPaymentProductByAccountOnFileId","_paymentProductGroups","_paymentProductGroupById","paymentProductGroups","BasicPaymentProductGroups","basicPaymentProductGroups","basicPaymentProductGroupById","_products","_groups","_basicPaymentItems","doRemove","groupId","groupReplaced","productMethod","basicPaymentItems","basicPaymentItem","basicPaymentItemById","BasicPaymentItems","products","groups","PaymentRequest","_fieldValues","_accountOnFile","_tokenize","getErrorMessageIds","allRequiredFieldsPresent","getValue","getAccountOnFile","setValue","paymentProductFieldId","setTokenize","tokenize","getTokenize","concat","getValues","getMaskedValue","getMaskedValues","maskedString","getUnmaskedValues","setPaymentProduct","setAccountOnFile","getClientSessionID","C2SPaymentProductContext","pki","forge","base64UrlEncode","asn1","str","util","encode64","createProtectedHeader","kid","JOSEHeader","alg","decodePemPublicKey","publickeyB64Encoded","publickeyB64Decoded","decode64","buffer2","createBuffer","publickeyObject2","fromDer","publicKeyFromAsn1","encryptContentEncryptionKey","CEK","encrypt","encryptPayload","encKey","initializationVector","cipher","createCipher","start","iv","update","finish","output","bytes","calculateAdditionalAuthenticatedDataLength","encodededProtectedHeader","lengthInBits","putInt32","calculateHMAC","macKey","cipherText","al","putBytes","hmacInput","hmac","create","sha512","digest","JOSEEncryptor","plainTextValues","protectedHeader","random","getBytesSync","CEKKEYLENGTH","encryptedContentEncryptionKey","encodedEncryptedContentEncryptionKey","IVLENGTH","encodededinitializationVector","encodedCipherText","calculatedHmac","authenticationTag","Encryptor","publicKeyResponsePromise","paymentRequest","encryptedString","blob","nonce","bytesToHex","paymentValues","ownValues","getOwnPropertyNames","joseEncryptor","session","_paymentProductId","_paymentRequestPayload","_paymentRequest","_paymentProductGroupId","_paymentProductGroup","_c2sCommunicator","_session","paymentRequestPayload","c2SPaymentProductContext","getBasicPaymentItems","useGroups","getIinDetails","getPaymentRequest","getEncryptor","transformPaymentProductGroupJSON","Session"],"mappings":"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","file":"connectsdk.noEncrypt.min.js","sourcesContent":["(function (global) {\r\n    var connectsdk = {}, modules = {};\r\n\r\n    /* SDK internal function */\r\n    connectsdk.define = function (module, dependencies, fn) {\r\n        if (dependencies && dependencies.length) {\r\n            for (var i = 0; i < dependencies.length; i++) {\r\n                dependencies[i] = modules[dependencies[i]];\r\n            }\r\n        }\r\n        modules[module] = fn.apply(this, dependencies || []);\r\n    };\r\n\r\n    // Export `connectsdk` based on environment.\r\n    global.connectsdk = connectsdk;\r\n\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n\r\n    connectsdk.define('connectsdk.core', [], function () {\r\n        return connectsdk;\r\n    });\r\n\r\n    // use require.js if available otherwise we use our own\r\n    if (typeof define === 'undefined') {\r\n        global.define = connectsdk.define;\r\n    }\r\n} (typeof window === 'undefined' ? this : window));\r\n\r\n// (re)define core\r\ndefine(\"connectsdk.core\", [], function () {\r\n    var global = typeof window === 'undefined' ? this : window;\r\n    var connectsdk = {};\r\n    global.connectsdk = connectsdk;\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n    return connectsdk;\r\n});\r\n","define('connectsdk.promise', ['connectsdk.core'], function(turing) {\r\n\tfunction PromiseModule(global) {\r\n\t\t/**\r\n\t\t * The Promise class.\r\n\t\t */\r\n\t\tfunction Promise(singleton) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.pending = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Resolves a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.resolve = function(result) {\r\n\t\t\t\tself.complete('resolve', result);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Rejects a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.reject = function(result) {\r\n\t\t\t\tself.complete('reject', result);\r\n\t\t\t};\r\n\r\n\t\t\tif (singleton) {\r\n\t\t\t\tthis.isSingleton = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tPromise.prototype = {\r\n\t\t\t/**\r\n\t\t\t * Adds a success and failure handler for completion of this Promise object.\r\n\t\t\t *\r\n\t\t\t * @param {Function} success The success handler\r\n\t\t\t * @param {Function} success The failure handler\r\n\t\t\t * @returns {Promise} `this`\r\n\t\t\t */\r\n\t\t\tthen : function(success, failure) {\r\n\t\t\t\tthis.pending.push({\r\n\t\t\t\t\tresolve : success,\r\n\t\t\t\t\treject : failure\r\n\t\t\t\t});\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Runs through each pending 'thenable' based on type (resolve, reject).\r\n\t\t\t *\r\n\t\t\t * @param {String} type The thenable type\r\n\t\t\t * @param {Object} result A value\r\n\t\t\t */\r\n\t\t\tcomplete : function(type, result) {\r\n\t\t\t\twhile (this.pending[0]) {\r\n\t\t\t\t\tthis.pending.shift()[type](result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tglobal.Promise = Promise;\r\n\t}\r\n\tPromiseModule(connectsdk);\r\n\r\n\treturn connectsdk.Promise;\r\n});","define('connectsdk.net', ['connectsdk.core'], function(connectsdk) {\r\n  var net = {};\r\n\r\n  /**\r\n    * Ajax request options:\r\n    *\r\n    *   - `method`: {String} HTTP method - GET, POST, etc.\r\n    *   - `success`: {Function} A callback to run when a request is successful\r\n    *   - `error`: {Function} A callback to run when the request fails\r\n    *   - `asynchronous`: {Boolean} Defaults to asynchronous\r\n    *   - `postBody`: {String} The HTTP POST body\r\n    *   - `contentType`: {String} The content type of the request, default is `application/x-www-form-urlencoded`\r\n    *\r\n    */\r\n\r\n  /**\r\n    * Removes leading and trailing whitespace.\r\n    * @param {String}\r\n    * @return {String}\r\n    */\r\n  var trim = ''.trim\r\n    ? function(s) { return s.trim(); }\r\n    : function(s) { return s.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); };\r\n\r\n  function xhr() {\r\n    if (typeof XMLHttpRequest !== 'undefined' && (window.location.protocol !== 'file:' || !window.ActiveXObject)) {\r\n      return new XMLHttpRequest();\r\n    } else {\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.6.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.3.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function successfulRequest(request) {\r\n    return (request.status >= 200 && request.status < 300) ||\r\n        request.status == 304 ||\r\n        (request.status == 0 && request.responseText);\r\n  }\r\n\r\n  /**\r\n    * Serialize JavaScript for HTTP requests.\r\n    *\r\n    * @param {Object} object An Array or Object\r\n    * @returns {String} A string suitable for a GET or POST request\r\n    */\r\n  net.serialize = function(object) {\r\n    if (!object) return;\r\n\r\n    if (typeof object === 'string') {\r\n      return object;\r\n    }\r\n\r\n    var results = [];\r\n    for (var key in object) {\r\n      results.push(encodeURIComponent(key) + '=' + encodeURIComponent(object[key]));\r\n    }\r\n    return results.join('&');\r\n  };\r\n\r\n  /**\r\n    * JSON.parse support can be inferred using `connectsdk.detect('JSON.parse')`.\r\n    */\r\n  //connectsdk.addDetectionTest('JSON.parse', function() {\r\n  //  return window.JSON && window.JSON.parse;\r\n  //});\r\n\r\n  /**\r\n    * Parses JSON represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  net.parseJSON = function(string) {\r\n    if (typeof string !== 'string' || !string) return null;\r\n    string = trim(string);\r\n    /*\r\n    return connectsdk.detect('JSON.parse') ?\r\n      window.JSON.parse(string) :\r\n      (new Function('return ' + string))();\r\n    */\r\n    return window.JSON.parse(string);\r\n  };\r\n\r\n  /**\r\n    * Parses XML represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  if (window.DOMParser) {\r\n    net.parseXML = function(text) {\r\n      return new DOMParser().parseFromString(text, 'text/xml');\r\n    };\r\n  } else {\r\n    net.parseXML = function(text) {\r\n      var xml = new ActiveXObject('Microsoft.XMLDOM');\r\n      xml.async = 'false';\r\n      xml.loadXML(text);\r\n      return xml;\r\n    };\r\n  }\r\n\r\n  /**\r\n    * Creates an Ajax request.  Returns an object that can be used\r\n    * to chain calls.  For example:\r\n    *\r\n    *      $t.post('/post-test')\r\n    *        .data({ key: 'value' })\r\n    *        .end(function(res) {\r\n    *          assert.equal('value', res.responseText);\r\n    *        });\r\n    *\r\n    *      $t.get('/get-test')\r\n    *        .set('Accept', 'text/html')\r\n    *        .end(function(res) {\r\n    *          assert.equal('Sample text', res.responseText);\r\n    *        });\r\n    *\r\n    * The available chained methods are:\r\n    *\r\n    * `set` -- set a HTTP header\r\n    * `data` -- the postBody\r\n    * `end` -- send the request over the network, and calls your callback with a `res` object\r\n    * `send` -- sends the request and calls `data`: `.send({ data: value }, function(res) { });`\r\n    *\r\n    * @param {String} The URL to call\r\n    * @param {Object} Optional settings\r\n    * @returns {Object} A chainable object for further configuration\r\n    */\r\n  function ajax(url, options) {\r\n    var request = xhr(),\r\n        promise,\r\n        then,\r\n        response = {},\r\n        chain;\r\n    if (connectsdk.Promise) {\r\n      promise = new connectsdk.Promise();\r\n    }\r\n\r\n\r\n    function respondToReadyState(readyState) {\r\n      if (request.readyState == 4) {\r\n        var contentType = request.mimeType || request.getResponseHeader('content-type') || '';\r\n\r\n        response.status = request.status;\r\n        response.responseText = request.responseText;\r\n        if (/json/.test(contentType)) {\r\n          response.responseJSON = net.parseJSON(request.responseText);\r\n        } else if (/xml/.test(contentType)) {\r\n          response.responseXML = net.parseXML(request.responseText);\r\n      \t}\r\n\r\n        response.success = successfulRequest(request);\r\n\r\n        if (options.callback) {\r\n          return options.callback(response, request);\r\n        }\r\n\r\n        if (response.success) {\r\n          if (options.success) options.success(response, request);\r\n          if (promise) promise.resolve(response, request);\r\n        } else {\r\n          if (options.error) options.error(response, request);\r\n          if (promise) promise.reject(response, request);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Set the HTTP headers\r\n    function setHeaders() {\r\n      var defaults = {\r\n        'Accept': 'text/javascript, application/json, text/html, application/xml, text/xml, */*',\r\n        'Content-Type': 'application/json'\r\n      };\r\n\r\n      /**\r\n       * Merge headers with defaults.\r\n       */\r\n      for (var name in defaults) {\r\n        if (!options.headers.hasOwnProperty(name))\r\n          options.headers[name] = defaults[name];\r\n      }\r\n      for (var name in options.headers) {\r\n        request.setRequestHeader(name, options.headers[name]);\r\n      }\r\n\r\n    }\r\n\r\n    if (typeof options === 'undefined') options = {};\r\n\r\n    options.method = options.method ? options.method.toLowerCase() : 'get';\r\n    options.asynchronous = options.asynchronous || true;\r\n    options.postBody = options.postBody || '';\r\n    request.onreadystatechange = respondToReadyState;\r\n    request.open(options.method, url, options.asynchronous);\r\n\r\n    options.headers = options.headers || {};\r\n    if (options.contentType) {\r\n      options.headers['Content-Type'] = options.contentType;\r\n    }\r\n\r\n    if (typeof options.postBody !== 'string') {\r\n      // Serialize JavaScript\r\n      options.postBody = net.serialize(options.postBody);\r\n    }\r\n\r\n    // setHeaders();\r\n\r\n    function send() {\r\n      try {\r\n      \tsetHeaders();\r\n        request.send(options.postBody);\r\n      } catch (e) {\r\n        if (options.error) {\r\n          options.error();\r\n        }\r\n      }\r\n    }\r\n\r\n    chain = {\r\n      set: function(key, value) {\r\n        options.headers[key] = value;\r\n        return chain;\r\n      },\r\n\r\n      send: function(data, callback) {\r\n        options.postBody = net.serialize(data);\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      end: function(callback) {\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      data: function(data) {\r\n        options.postBody = net.serialize(data);\r\n        return chain;\r\n      },\r\n\r\n      then: function() {\r\n        chain.end();\r\n        if (promise) promise.then.apply(promise, arguments);\r\n        return chain;\r\n      }\r\n    };\r\n\r\n    return chain;\r\n  }\r\n\r\n  function JSONPCallback(url, success, failure) {\r\n    var self = this;\r\n    this.url = url;\r\n    this.methodName = '__connectsdk_jsonp_' + parseInt(new Date().getTime());\r\n    this.success = success;\r\n    this.failure = failure;\r\n\r\n    function runCallback(json) {\r\n      self.success(json);\r\n      self.teardown();\r\n    }\r\n\r\n    window[this.methodName] = runCallback;\r\n  }\r\n\r\n  JSONPCallback.prototype.run = function() {\r\n    this.scriptTag = document.createElement('script');\r\n    this.scriptTag.id = this.methodName;\r\n    this.scriptTag.src = this.url.replace('{callback}', this.methodName);\r\n    var that = this;\r\n    this.scriptTag.onerror = function() {\r\n    \tthat.failure();\r\n    };\r\n    document.body.appendChild(this.scriptTag);\r\n  };\r\n\r\n  JSONPCallback.prototype.teardown = function() {\r\n    window[this.methodName] = null;\r\n    try {\r\n    \tdelete window[this.methodName];\r\n    } catch (e) {}\r\n    if (this.scriptTag) {\r\n      document.body.removeChild(this.scriptTag);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * An Ajax GET request.\r\n   *\r\n   *      $t.get('/get-test')\r\n   *        .set('Accept', 'text/html')\r\n   *        .end(function(res) {\r\n   *          assert.equal('Sample text', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options\r\n   * @returns {Object} A chainable object for further configuration\r\n   */\r\n  net.get = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'get';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * An Ajax POST request.\r\n   *\r\n   *      $t.post('/post-test')\r\n   *        .data({ key: 'value' })\r\n   *        .end(function(res) {\r\n   *          assert.equal('value', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options (`postBody` may come in handy here)\r\n   * @returns {Object} An object for further chaining with promises\r\n   */\r\n  net.post = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'post';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * A jsonp request.  Example:\r\n   *\r\n   *     var url = 'http://feeds.delicious.com/v1/json/';\r\n   *     url += 'alex_young/javascript?callback={callback}';\r\n   *\r\n   *     connectsdk.net.jsonp(url, {\r\n   *       success: function(json) {\r\n   *         console.log(json);\r\n   *       }\r\n   *     });\r\n   *\r\n   * @param {String} url The URL to request\r\n   */\r\n  net.jsonp = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    var callback = new JSONPCallback(url, options.success, options.failure);\r\n    callback.run();\r\n  };\r\n\r\n  /**\r\n    * The Ajax methods are mapped to the `connectsdk` object:\r\n    *\r\n    *      connectsdk.get();\r\n    *      connectsdk.post();\r\n    *      connectsdk.json();\r\n    *\r\n    */\r\n  connectsdk.get = net.get;\r\n  connectsdk.post = net.post;\r\n  connectsdk.jsonp = net.jsonp;\r\n\r\n  net.ajax = ajax;\r\n  connectsdk.net = net;\r\n  return net;\r\n});","define(\"connectsdk.Util\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\t// Create a singleton from Util so the same util function can be used in different modules\r\n\tvar Util = (function () {\r\n\t\tvar instance;\r\n\r\n\t\tfunction createInstance() {\r\n\t\t\t// private variables to use in the public methods\r\n\t\t\tvar applePayPaymentProductId = 302;\r\n\t\t\tvar googlePayPaymentProductId = 320;\r\n\t\t\tvar bancontactPaymentProductId = 3012;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tapplePayPaymentProductId: applePayPaymentProductId,\r\n\t\t\t\tgooglePayPaymentProductId: googlePayPaymentProductId,\r\n\t\t\t\tbancontactPaymentProductId: bancontactPaymentProductId,\r\n\t\t\t\tgetMetadata: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tscreenSize: window.innerWidth + \"x\" + window.innerHeight,\r\n\t\t\t\t\t\tplatformIdentifier: window.navigator.userAgent,\r\n\t\t\t\t\t\tsdkIdentifier: ((document.GC && document.GC.rppEnabledPage) ? 'rpp-' : '') + 'JavaScriptClientSDK/v${version}',\r\n\t\t\t\t\t\tsdkCreator: 'Ingenico'\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tcollectDeviceInformation: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\"timezoneOffsetUtcMinutes\": new Date().getTimezoneOffset(),\r\n\t\t\t\t\t\t\"locale\": navigator.language,\r\n\t\t\t\t\t\t\"browserData\": {\r\n\t\t\t\t\t\t\t\"javaScriptEnabled\": true,\r\n\t\t\t\t\t\t\t\"javaEnabled\": navigator.javaEnabled(),\r\n\t\t\t\t\t\t\t\"colorDepth\": screen.colorDepth,\r\n\t\t\t\t\t\t\t\"screenHeight\": screen.height,\r\n\t\t\t\t\t\t\t\"screenWidth\": screen.width,\r\n\t\t\t\t\t\t\t\"innerHeight\": window.innerHeight,\r\n\t\t\t\t\t\t\t\"innerWidth\": window.innerWidth\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tbase64Encode: function (data) {\r\n\t\t\t\t\tif (typeof data === \"object\") {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdata = JSON.stringify(data);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tthrow \"data must be either a String or a JSON object\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\t\t\t\t\tvar o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', tmp_arr = [];\r\n\r\n\t\t\t\t\tif (!data) {\r\n\t\t\t\t\t\treturn data;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdo {// pack three octets into four hexets\r\n\t\t\t\t\t\to1 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to2 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to3 = data.charCodeAt(i++);\r\n\r\n\t\t\t\t\t\tbits = o1 << 16 | o2 << 8 | o3;\r\n\r\n\t\t\t\t\t\th1 = bits >> 18 & 0x3f;\r\n\t\t\t\t\t\th2 = bits >> 12 & 0x3f;\r\n\t\t\t\t\t\th3 = bits >> 6 & 0x3f;\r\n\t\t\t\t\t\th4 = bits & 0x3f;\r\n\r\n\t\t\t\t\t\t// use hexets to index into b64, and append result to encoded string\r\n\t\t\t\t\t\ttmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\r\n\t\t\t\t\t} while (i < data.length);\r\n\r\n\t\t\t\t\tenc = tmp_arr.join('');\r\n\r\n\t\t\t\t\tvar r = data.length % 3;\r\n\r\n\t\t\t\t\treturn (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\r\n\t\t\t\t},\r\n\t\t\t\tfilterOutProductsThatAreNotSupportedInThisBrowser: function (json) {\r\n\t\t\t\t\tfor (var i = json.paymentProducts.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\t\t\tvar product = json.paymentProducts[i];\r\n\t\t\t\t\t\tif (product && this.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(product.id) > -1) {\r\n\t\t\t\t\t\t\tjson.paymentProducts.splice(i, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tpaymentProductsThatAreNotSupportedInThisBrowser: [applePayPaymentProductId]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tgetInstance: function () {\r\n\t\t\t\tif (!instance) {\r\n\t\t\t\t\tinstance = createInstance();\r\n\t\t\t\t}\r\n\t\t\t\treturn instance;\r\n\t\t\t}\r\n\t\t};\r\n\t})();\r\n\r\n\tconnectsdk.Util = Util;\r\n\treturn Util;\r\n});\r\n","define(\"connectsdk.GooglePay\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.Util\"], function (connectsdk, Promise, Util) {\r\n\r\n    var _util = Util.getInstance();\r\n    var _C2SCommunicator = null;\r\n    var _paymentProductSpecificInputs = null;\r\n    var _context = null;\r\n    var _gateway = null;\r\n    var _networks = null;\r\n    var paymentsClient = null;\r\n\r\n    // Only base is needed to trigger isReadyToPay\r\n    var _getBaseCardPaymentMethod = function () {\r\n        return {\r\n            type: 'CARD',\r\n            parameters: {\r\n                allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\r\n                allowedCardNetworks: _networks\r\n            }\r\n        }\r\n    };\r\n\r\n    var _getTokenizationSpecification = function () {\r\n        return {\r\n            type: 'PAYMENT_GATEWAY',\r\n            parameters: {\r\n                'gateway': _gateway,\r\n                'gatewayMerchantId': _paymentProductSpecificInputs.googlePay.gatewayMerchantId\r\n            }\r\n        }\r\n    };\r\n\r\n    // To prefetch payment data we need base + tokenizationSpecification\r\n    var _getCardPaymentMethod = function () {\r\n        return Object.assign(\r\n            {},\r\n            _getBaseCardPaymentMethod(),\r\n            {\r\n                tokenizationSpecification: _getTokenizationSpecification()\r\n            }\r\n        );\r\n    };\r\n\r\n    var _getTransactionInfo = function () {\r\n        return {\r\n            \"totalPriceStatus\": \"NOT_CURRENTLY_KNOWN\",\r\n            \"currencyCode\": _context.currency\r\n        };\r\n    };\r\n\r\n    var _getMerchantInfo = function () {\r\n        return {\r\n            \"merchantName\": _paymentProductSpecificInputs.googlePay.merchantName\r\n        };\r\n    };\r\n\r\n    var _getGooglePaymentDataRequest = function () {\r\n        return {\r\n            apiVersion: 2,\r\n            apiVersionMinor: 0,\r\n            allowedPaymentMethods: [_getBaseCardPaymentMethod()]\r\n        };\r\n    };\r\n\r\n    var _getGooglePaymentDataRequestForPrefetch = function () {\r\n        // transactionInfo must be set but does not affect cache\r\n        return {\r\n            apiVersion: 2,\r\n            apiVersionMinor: 0,\r\n            allowedPaymentMethods: [_getCardPaymentMethod()],\r\n            transactionInfo: _getTransactionInfo(),\r\n            merchantInfo: _getMerchantInfo()\r\n        };\r\n    };\r\n\r\n    function _getGooglePaymentsClient() {\r\n        if (paymentsClient === null) {\r\n            var googlePayEnvironment = 'TEST';\r\n            if (_context.environment === 'PROD') {\r\n                googlePayEnvironment = 'PROD';\r\n            }\r\n            if (window.google) {\r\n                paymentsClient = new google.payments.api.PaymentsClient({environment: googlePayEnvironment});\r\n            } else {\r\n                console.error(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\r\n            }\r\n        }\r\n        return paymentsClient;\r\n    }\r\n\r\n    /**\r\n     * Prefetch payment data to improve performance\r\n     *\r\n     * @see {@link https://developers.google.com/pay/api/web/reference/client#prefetchPaymentData|prefetchPaymentData()}\r\n     */\r\n    function prefetchGooglePaymentData() {\r\n        var paymentDataRequest = _getGooglePaymentDataRequestForPrefetch();\r\n\r\n        var paymentsClient = _getGooglePaymentsClient();\r\n\r\n        // Prefetching is only effective when all information is provided\r\n        if (_paymentProductSpecificInputs.googlePay.gatewayMerchantId &&\r\n            _paymentProductSpecificInputs.googlePay.merchantName) {\r\n            paymentsClient.prefetchPaymentData(paymentDataRequest);\r\n        } else {\r\n            console.warn(\"Prefetching payment data was not triggered because of missing information. \" +\r\n                \"gatewayMerchantId: \" + _paymentProductSpecificInputs.googlePay.gatewayMerchantId +\r\n                \", merchantName: \" + _paymentProductSpecificInputs.googlePay.merchantName)\r\n        }\r\n    }\r\n\r\n    var GooglePay = function (C2SCommunicator) {\r\n        _C2SCommunicator = C2SCommunicator;\r\n        this.isGooglePayAvailable = function (context, paymentProductSpecificInputs, googlePayData) {\r\n            _context = context;\r\n            _paymentProductSpecificInputs = paymentProductSpecificInputs;\r\n            if (googlePayData && googlePayData.networks) {\r\n                _gateway = googlePayData.gateway;\r\n                _networks = googlePayData.networks;\r\n            } else {\r\n                _gateway = \"ingenicoglobalcollect\";\r\n                _networks = googlePayData;\r\n            }\r\n            var promise = new Promise();\r\n            // This setTimeout is essential to make the following (not fully asynchronous) code work in a promise way in all scenarios. (not needed in happy flow)\r\n            // The SDK has it's only PolyFill for the promise which is not feature complete.\r\n            setTimeout(function () {\r\n                if (_networks && _networks.length > 0) {\r\n                    var paymentsClient = _getGooglePaymentsClient();\r\n                    if (!paymentsClient) {\r\n                        _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                        promise.reject(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\r\n                    } else {\r\n                        paymentsClient.isReadyToPay(_getGooglePaymentDataRequest())\r\n                            .then(function (response) {\r\n                                promise.resolve(response);\r\n\r\n                                prefetchGooglePaymentData();\r\n                            })\r\n                            .catch(function () {\r\n                                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                                promise.reject('failed to run isReadyToPay() with Google Pay API');\r\n                            });\r\n                    }\r\n                } else {\r\n                    _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                    promise.reject('There are no product networks available');\r\n                }\r\n            }, 0);\r\n            return promise;\r\n        };\r\n\r\n        this.isMerchantIdProvided = function (paymentProductSpecificInputs) {\r\n            if (paymentProductSpecificInputs.googlePay.merchantId) {\r\n                return paymentProductSpecificInputs.googlePay.merchantId;\r\n            } else {\r\n                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    connectsdk.GooglePay = GooglePay;\r\n    return GooglePay;\r\n});\r\n","define(\"connectsdk.PublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PublicKeyResponse = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.keyId = json.keyId;\r\n\t\tthis.publicKey = json.publicKey;\r\n\t};\r\n\r\n\tconnectsdk.PublicKeyResponse = PublicKeyResponse;\r\n\treturn PublicKeyResponse;\r\n});","define(\"connectsdk.C2SCommunicatorConfiguration\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n    var C2SCommunicatorConfiguration = function (sessionDetails, apiVersion) {\r\n        this.endpoints = {\r\n            PROD: {\r\n                EU: {\r\n                    API: \"https://ams1.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.secured-by-ingenico.com\"\r\n                }\r\n            },\r\n            PREPROD: {\r\n                EU: {\r\n                    API: \"https://ams1.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.preprod.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.preprod.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.preprod.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par-preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.preprod.secured-by-ingenico.com\"\r\n                }\r\n            },\r\n            SANDBOX: {\r\n                EU: {\r\n                    API: \"https://ams1.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.sandbox.secured-by-ingenico.com\"\r\n                }\r\n            }\r\n\r\n            // Non public settings. Only needed in GC development environment. Do not use\r\n            // these, they will not work outside GC.\r\n            ,\r\n            INTEGRATION: {\r\n                EU: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                US: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                }\r\n            },\r\n            DEV_NAMI: {\r\n                EU: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                US: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                }\r\n            },\r\n            DEV_ISC: {\r\n                EU: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                },\r\n                US: {\r\n                    API: \"//api.gc-ci-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-ci-dev.isaac.local\"\r\n                },\r\n                AMS: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                },\r\n                PAR: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                }\r\n            }\r\n        };\r\n\r\n        // clientSessionID, assetBaseUrl and apiBaseUrl are deprecated but still may be used. Here we check for presense of new variables, if they dont exist... Use the old variables.\r\n        if (!sessionDetails.clientSessionId) {\r\n            sessionDetails.clientSessionId = sessionDetails.clientSessionID;\r\n        } else if (sessionDetails.clientSessionID) {\r\n            throw new Error(\"You cannot use both the clientSessionId and the clientSessionID at the same time, please use the clientSessionId only.\");\r\n        }\r\n        if (!sessionDetails.assetUrl) {\r\n            sessionDetails.assetUrl = sessionDetails.assetsBaseUrl\r\n        } else if (sessionDetails.assetsBaseUrl) {\r\n            throw new Error(\"You cannot use both the assetUrl and the assetsBaseUrl at the same time, please use the assetUrl only.\");\r\n        }\r\n        if (!sessionDetails.clientApiUrl) {\r\n            sessionDetails.clientApiUrl = sessionDetails.apiBaseUrl\r\n        } else if (sessionDetails.apiBaseUrl) {\r\n            throw new Error(\"You cannot use both the clientApiUrl and the apiBaseUrl at the same time, please use the clientApiUrl only.\");\r\n        }\r\n\r\n        this.clientSessionId = sessionDetails.clientSessionId;\r\n        this.customerId = sessionDetails.customerId;\r\n\r\n        // can be removed in a newer version of the SDK from this line\r\n        if (sessionDetails.region && !sessionDetails.clientApiUrl) {\r\n            // use regions; old stuff\r\n            console.warn(\"Using regions is deprecated, switch to clientApiUrl\");\r\n            this.clientApiUrl = this.endpoints[sessionDetails.environment][sessionDetails.region].API;\r\n            this.assetUrl = this.endpoints[sessionDetails.environment][sessionDetails.region].ASSETS;\r\n        } else {\r\n            // till this line; normal behaviour is below\r\n            // ignore the region here\r\n            this.clientApiUrl = sessionDetails.clientApiUrl;\r\n            this.assetUrl = sessionDetails.assetUrl;\r\n            if (!this.clientApiUrl) {\r\n                throw new Error(\"This version of the connectSDK requires an clientApiUrl, which you did not provide.\");\r\n            }\r\n            if (!this.assetUrl) {\r\n                throw new Error(\"This version of the connectSDK requires an assetUrl, which you did not provide.\");\r\n            }\r\n\r\n            // now that the clientApiUrl is set check when if the api version is set in the URL, its the correct version break if not.\r\n            if (this.clientApiUrl.indexOf(\"//\") === -1) {\r\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\r\n            }\r\n            var tester = this.clientApiUrl.split(\"/\"); // [0] = (http(s): || \"\") , [1] = \"\", [2] = \"host:port\", [3+] = path\r\n            if (tester[0] !== \"\" && tester[0].indexOf(\"http\") !== 0) {\r\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\r\n            }\r\n            // if you cannot provide an URL that starts with (http(s)::)// and want an error: please provide a PR :)\r\n\r\n            var path = tester.splice(3).join(\"/\"); // the path (if no path; path = \"\").\r\n            if (!path) { //If path == \"\"\r\n                this.clientApiUrl += \"/\" + apiVersion;\r\n            } else if (path === 'client') { //If path == client\r\n                this.clientApiUrl += \"/\" + apiVersion.split('/')[1];\r\n            } else if (path.indexOf(apiVersion) !== 0 || path.length !== apiVersion.length) {\r\n                throw new Error(\"This version of the connectSDK is only compatible with \" + apiVersion + \", you supplied: '\" + path + \"'\");\r\n            }\r\n        }\r\n    };\r\n    connectsdk.C2SCommunicatorConfiguration = C2SCommunicatorConfiguration;\r\n    return C2SCommunicatorConfiguration;\r\n});","define(\"connectsdk.IinDetailsResponse\", [\"connectsdk.core\", \"connectsdk.promise\"], function(connectsdk, Promise) {\r\n\r\n\tvar IinDetailsResponse = function () {\r\n\t\tthis.status = '';\r\n\t\tthis.countryCode = '';\r\n\t\tthis.paymentProductId = '';\r\n\t\tthis.isAllowedInContext = '';\r\n\t\tthis.coBrands = [];\r\n\t};\r\n\tconnectsdk.IinDetailsResponse = IinDetailsResponse;\r\n\treturn IinDetailsResponse;\r\n});","define(\"connectsdk.C2SCommunicator\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.net\", \"connectsdk.Util\", \"connectsdk.PublicKeyResponse\", \"connectsdk.IinDetailsResponse\", \"connectsdk.GooglePay\"], function (connectsdk, Promise, Net, Util, PublicKeyResponse, IinDetailsResponse, GooglePay) {\r\n\tvar C2SCommunicator = function (c2SCommunicatorConfiguration, paymentProduct) {\r\n\t\tvar _c2SCommunicatorConfiguration = c2SCommunicatorConfiguration;\r\n\t\tvar _util = Util.getInstance();\r\n\t\tvar _cache = {};\r\n\t\tvar _providedPaymentProduct = paymentProduct;\r\n\t\tvar that = this;\r\n\t\tvar _GooglePay = new GooglePay(that);\r\n\r\n\t\tvar _mapType = {\r\n\t\t\t\"expirydate\": \"tel\",\r\n\t\t\t\"string\": \"text\",\r\n\t\t\t\"numericstring\": \"tel\",\r\n\t\t\t\"integer\": \"number\",\r\n\t\t\t\"expirationDate\": \"tel\"\r\n\t\t};\r\n\r\n\t\tvar formatUrl = function (url) {\r\n\t\t\treturn (url && endsWith(url, '/')) ? url : url + '/';\r\n\t\t};\r\n\r\n\t\tvar formatImageUrl = function(url, imageUrl) {\r\n\t\t\turl = formatUrl(url);\r\n\t\t\t// _cleanJSON can be called multiple times with the same data (which is cached between calls).\r\n\t\t\t// Don't prepend the url after the first time.\r\n\t\t\tif (startsWith(imageUrl, url)) {\r\n\t\t\t\treturn imageUrl;\r\n\t\t\t}\r\n\t\t\treturn url + imageUrl;\r\n\t\t};\r\n\r\n\t\tvar startsWith = function(string, prefix) {\r\n\t\t\treturn string.indexOf(prefix) === 0;\r\n\t\t};\r\n\r\n\t\tvar endsWith = function(string, suffix) {\r\n\t\t\treturn string.indexOf(suffix, string.length - suffix.length) !== -1;\r\n\t\t};\r\n\r\n\t\tvar _cleanJSON = function (json, url) {\r\n\t\t\tfor (var i = 0, il = json.fields.length; i < il; i++) {\r\n\t\t\t\tvar field = json.fields[i];\r\n\t\t\t\tfield.type = (field.displayHints && field.displayHints.obfuscate) ? \"password\" : _mapType[field.type];\r\n\r\n\t\t\t\t// helper code for templating tools like Handlebars\r\n\t\t\t\tfor (validatorKey in field.dataRestrictions.validators) {\r\n\t\t\t\t\tfield.validators = field.validators || [];\r\n\t\t\t\t\tfield.validators.push(validatorKey);\r\n\t\t\t\t}\r\n\t\t\t\tif (field.displayHints && field.displayHints.formElement && field.displayHints.formElement.type === 'list') {\r\n\t\t\t\t\tfield.displayHints.formElement.list = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// full image paths\r\n\t\t\t\tif (field.displayHints && field.displayHints.tooltip && field.displayHints.tooltip.image) {\r\n\t\t\t\t\tfield.displayHints.tooltip.image = formatImageUrl(url, field.displayHints.tooltip.image);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// The server orders in a different way, so we apply the sortorder\r\n\t\t\tjson.fields.sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\t// set full image path\r\n\t\t\tjson.displayHints.logo = formatImageUrl(url, json.displayHints.logo);\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _extendLogoUrl = function (json, url, postfix) {\r\n\t\t\tfor (var i = 0, il = json[\"paymentProduct\" + postfix].length; i < il; i++) {\r\n\t\t\t\tvar product = json[\"paymentProduct\" + postfix][i];\r\n\t\t\t\tproduct.displayHints.logo = formatImageUrl(url, product.displayHints.logo);\r\n\t\t\t}\r\n\t\t\tjson[\"paymentProduct\" + postfix].sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _isPaymentProductInList = function (list, paymentProductId) {\r\n\t\t\tfor (var i = list.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\tvar product = list[i];\r\n\t\t\t\tif (product && (product.id === paymentProductId)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n        var _getGooglePayData = function (list, paymentProductId) {\r\n            for (var i = list.length - 1, il = 0; i >= il; i--) {\r\n                var product = list[i];\r\n                if (product && (product.id === paymentProductId)) {\r\n                    return product.paymentProduct320SpecificData;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n\r\n\t\tvar metadata = _util.getMetadata();\r\n\r\n\t\tthis.getBasicPaymentProducts = function (context, paymentProductSpecificInputs) {\r\n\t\t\tvar cacheKeyLocale= context.locale ? context.locale + \"_\" : '';\r\n\t\t\tpaymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProducts-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ cacheKeyLocale + context.isRecurring + \"_\" + context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterLocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields\" + urlParameterLocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"s\");\r\n\t\t\t\t\t\t\tif (_isPaymentProductInList(json.paymentProducts, _util.googlePayPaymentProductId)) {\r\n\t\t\t\t\t\t\t\tif (_GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n\t\t\t\t\t\t\t\t\tvar googlePayData = _getGooglePayData(json.paymentProducts, _util.googlePayPaymentProductId);\r\n\t\t\t\t\t\t\t\t\t_GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, googlePayData).then(function (isGooglePayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//GooglePay does not have merchantId\r\n\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\tconsole.warn('You have not provided a merchantId for Google Pay, you can set this in the paymentProductSpecificInputs object');\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject('failed to retrieve Basic Payment Products', res);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function (context) {\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroups-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ cacheKeyLocale + context.isRecurring + \"_\" + context.currency;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterLocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields\" + urlParameterLocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"Groups\");\r\n\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function (paymentProductId, context, paymentProductSpecificInputs) {\r\n\t\t\tpaymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProduct-\" + paymentProductId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\r\n\t\t\tif (_util.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(paymentProductId) > -1) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.reject({\r\n\t\t\t\t\t\t\"errorId\": \"48b78d2d-1b35-4f8b-92cb-57cc2638e901\",\r\n\t\t\t\t\t\t\"errors\": [{\r\n\t\t\t\t\t\t\t\"code\": \"1007\",\r\n\t\t\t\t\t\t\t\"propertyName\": \"productId\",\r\n\t\t\t\t\t\t\t\"message\": \"UNKNOWN_PRODUCT_ID\",\r\n\t\t\t\t\t\t\t\"httpStatusCode\": 404\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductId) {\r\n\t\t\t\t\tif (!_cache[cacheKey]) {\r\n\t\t\t\t\t\t_cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar urlParameterlocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\t\tvar getPaymentProductUrl = formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t\t+ \"/products/\" + paymentProductId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t\t+ \"&currencyCode=\" + context.currency + urlParameterlocale;\r\n\r\n\t\t\t\t\tif ((paymentProductId === _util.bancontactPaymentProductId) &&\r\n\t\t\t\t\tpaymentProductSpecificInputs &&\r\n\t\t\t\t\tpaymentProductSpecificInputs.bancontact &&\r\n\t\t\t\t\tpaymentProductSpecificInputs.bancontact.forceBasicFlow) {\r\n\t\t\t\t\t\t// Add query parameter to products call to force basic flow for bancontact\r\n\t\t\t\t\t\tgetPaymentProductUrl += \"&forceBasicFlow=\" + paymentProductSpecificInputs.bancontact.forceBasicFlow\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgetPaymentProductUrl += \"&cacheBust=\" + cacheBust;\r\n\r\n\t\t\t\t\tNet.get(getPaymentProductUrl)\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t\t\t\tif (paymentProductId === _util.googlePayPaymentProductId) {\r\n\t\t\t\t\t\t\t\t\tif (_GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n                                        var networks = cleanedJSON.paymentProduct320SpecificData.networks;\r\n\t\t\t\t\t\t\t\t\t\t_GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, networks).then(function (isGooglePayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (isGooglePayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t\t//_isGooglePayAvailable returned false so google pay is not available, so reject getPaymentProduct\r\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t//_isGooglePayAvailable rejected so not available\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t// merchantId is not provided so reject\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tpromise.reject('failed to retrieve Payment Product', res);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, context) {\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroup-\" + paymentProductGroupId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency;\r\n\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductGroupId) {\r\n\t\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterlocale = context.locale ? \"&locale=\" + context.locale: '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups/\" + paymentProductGroupId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t+ \"&currencyCode=\" + context.currency + urlParameterlocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductIdByCreditCardNumber = function (partialCreditCardNumber, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, iinDetailsResponse = new IinDetailsResponse()\r\n\t\t\t\t, cacheKey = \"getPaymentProductIdByCreditCardNumber-\" + partialCreditCardNumber;\r\n\r\n\t\t\tvar that = this;\r\n\t\t\tthis.context = context;\r\n\t\t\tif (_cache[cacheKey]) {// cache is based on digit 1-6\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar isEnoughDigits = function (partialCreditCardNumber) {\r\n\t\t\t\t\treturn partialCreditCardNumber.length >= 6;\r\n\t\t\t\t};\r\n\t\t\t\tif (isEnoughDigits(partialCreditCardNumber)) {\r\n\t\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/services/getIINdetails\")\r\n\t\t\t\t\t\t.data(JSON.stringify(this.convertContextToIinDetailsContext(partialCreditCardNumber, this.context)))\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.json = res.responseJSON;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.countryCode = res.responseJSON.countryCode;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.paymentProductId = res.responseJSON.paymentProductId;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.isAllowedInContext = res.responseJSON.isAllowedInContext;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.coBrands = res.responseJSON.coBrands;\r\n\t\t\t\t\t\t\t\t// check if this card is supported\r\n\t\t\t\t\t\t\t\t// if isAllowedInContext is available in the response set status and resolve\r\n\t\t\t\t\t\t\t\tif (res.responseJSON.hasOwnProperty('isAllowedInContext')) {\r\n\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\tif (iinDetailsResponse.isAllowedInContext === false) {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"EXISTING_BUT_NOT_ALLOWED\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//if isAllowedInContext is not available get the payment product again to determine status and resolve\r\n\t\t\t\t\t\t\t\t\tthat.getPaymentProduct(iinDetailsResponse.paymentProductId, that.context).then(function (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\tif (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNSUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tiinDetailsResponse.status = \"NOT_ENOUGH_DIGITS\";\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertContextToIinDetailsContext = function (partialCreditCardNumber, context) {\r\n\t\t\tvar payload = {\r\n\t\t\t\t\"bin\": partialCreditCardNumber,\r\n\t\t\t\t\"paymentContext\": {\r\n\t\t\t\t\t\"countryCode\": context.countryCode,\r\n\t\t\t\t\t\"isRecurring\": context.isRecurring,\r\n\t\t\t\t\t\"amountOfMoney\": {\r\n\t\t\t\t\t\t\"amount\": context.totalAmount,\r\n\t\t\t\t\t\t\"currencyCode\": context.currency\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Account on file id is needed only in case when the merchant\r\n\t\t\t// uses multiple payment platforms at the same time.\r\n\t\t\tif (typeof context.accountOnFileId !== 'undefined') {\r\n\t\t\t\tpayload.accountOnFileId = context.accountOnFileId;\r\n\t\t\t}\r\n\r\n\t\t\treturn payload;\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"publicKey\";\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/crypto/publickey\")\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar publicKeyResponse = new PublicKeyResponse(res.responseJSON);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = publicKeyResponse;\r\n\t\t\t\t\t\t\tpromise.resolve(publicKeyResponse);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to get public key\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"paymentProductNetworks-\" + paymentProductId + \"_\" + context.countryCode + \"_\" + context.currency + \"_\"\r\n\t\t\t\t\t+ context.totalAmount + \"_\" + context.isRecurring;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products/\" + paymentProductId + \"/networks\" + \"?countryCode=\" + context.countryCode + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&isRecurring=\" + context.isRecurring)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"getPaymentProductDirectory-\" + paymentProductId + \"_\" + currencyCode + \"_\" + countryCode;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/directory?countryCode=\" + countryCode + \"&currencyCode=\" + currencyCode)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to retrieve payment product directory\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"convertAmount-\" + amount + \"_\" + source + \"_\" + target;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/services/convert/amount?source=\" + source + \"&target=\" + target + \"&amount=\" + amount)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to convert amount\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\r\n\t\t\tvar promise = new Promise();\r\n\r\n\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/payments/\" + paymentId + \"/thirdpartystatus\")\r\n\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t.end(function (res) {\r\n\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpromise.reject(\"unable to retrieve third party status\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getCustomerDetails = function(paymentProductId, context) {\r\n\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar cacheKey = \"getCustomerDetails_\" + context.countryCode;\r\n\t\t\tcacheKey = constructCacheKeyFromKeyValues(cacheKey, context.values);\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/customerDetails\")\r\n\t\t\t\t\t.data(JSON.stringify(context))\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(res.responseJSON);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tvar constructCacheKeyFromKeyValues = function(prefix, values) {\r\n\t\t\tvar cacheKey = prefix;\r\n\t\t\tfor (var key in values){\r\n\t\t\t\tif (values.hasOwnProperty(key)) {\r\n\t\t\t\t\tcacheKey += \"_\" + values[key].key + \"_\" + values[key].value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn cacheKey;\r\n\t\t};\r\n\r\n        /* Transforms the JSON representation of a payment product (group) so it matches the result of getPaymentProduct and getPaymentProductGroup. */\r\n        this.transformPaymentProductJSON = function (json) {\r\n            return _cleanJSON(json, _c2SCommunicatorConfiguration.assetUrl)\r\n        };\r\n\t};\r\n\r\n\tconnectsdk.C2SCommunicator = C2SCommunicator;\r\n\treturn C2SCommunicator;\r\n});\r\n","define(\"connectsdk.LabelTemplateElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar LabelTemplateElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.attributeKey = json.attributeKey;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.LabelTemplateElement = LabelTemplateElement;\r\n\treturn LabelTemplateElement;\r\n});","define(\"connectsdk.Attribute\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Attribute = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.key = json.key;\r\n\t\tthis.value = json.value;\r\n\t\tthis.status = json.status;\r\n\t\tthis.mustWriteReason = json.mustWriteReason;\r\n\t};\r\n\r\n\tconnectsdk.Attribute = Attribute;\r\n\treturn Attribute;\r\n});","define(\"connectsdk.AccountOnFileDisplayHints\", [\"connectsdk.core\", \"connectsdk.LabelTemplateElement\"], function(connectsdk, LabelTemplateElement) {\r\n\r\n\tvar _parseJSON = function (_json, _labelTemplate, _labelTemplateElementByAttributeKey) {\r\n\t\tif (_json.labelTemplate) {\r\n\t\t\tfor (var i = 0, l = _json.labelTemplate.length; i < l; i++) {\r\n\t\t\t\tvar labelTemplateElement = new LabelTemplateElement(_json.labelTemplate[i]);\r\n\t\t\t\t_labelTemplate.push(labelTemplateElement);\r\n\t\t\t\t_labelTemplateElementByAttributeKey[labelTemplateElement.attributeKey] = labelTemplateElement;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFileDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.labelTemplate = [];\r\n\t\tthis.labelTemplateElementByAttributeKey = {};\r\n\r\n\t\t_parseJSON(json, this.labelTemplate, this.labelTemplateElementByAttributeKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFileDisplayHints = AccountOnFileDisplayHints;\r\n\treturn AccountOnFileDisplayHints;\r\n});","define(\"connectsdk.AccountOnFile\", [\"connectsdk.core\" ,\"connectsdk.AccountOnFileDisplayHints\", \"connectsdk.Attribute\"], function(connectsdk, AccountOnFileDisplayHints, Attribute) {\r\n\r\n\tvar _parseJSON = function (_json, _attributes, _attributeByKey) {\r\n\t\tif (_json.attributes) {\r\n\t\t\tfor (var i = 0, l = _json.attributes.length; i < l; i++) {\r\n\t\t\t\tvar attribute = new Attribute(_json.attributes[i]);\r\n\t\t\t\t_attributes.push(attribute);\r\n\t\t\t\t_attributeByKey[attribute.key] = attribute;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFile = function (json) {\r\n\t\tvar that = this;\r\n\t\tthis.json = json;\r\n\t\tthis.attributes = [];\r\n\t\tthis.attributeByKey = {};\r\n\t\tthis.displayHints = new AccountOnFileDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.paymentProductId = json.paymentProductId;\r\n\r\n\t\tthis.getMaskedValueByAttributeKey = function(attributeKey) {\r\n\t\t\tvar value = this.attributeByKey[attributeKey].value;\r\n\t\t\tvar wildcardMask;\r\n\t\t\ttry {\r\n\t\t\t\twildcardMask = this.displayHints.labelTemplateElementByAttributeKey[attributeKey].wildcardMask;\r\n\t\t\t} catch (e) {}\r\n\t\t\tif (value !== undefined && wildcardMask !== undefined) {\r\n\t\t\t\tvar maskingUtil = new connectsdk.MaskingUtil();\r\n\t\t\t\treturn maskingUtil.applyMask(wildcardMask, value);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t};\r\n\r\n\t\t_parseJSON(json, this.attributes, this.attributeByKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFile = AccountOnFile;\r\n\treturn AccountOnFile;\r\n});","define(\"connectsdk.PaymentProduct302SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct302SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.networks = json.networks;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct302SpecificData = PaymentProduct302SpecificData;\r\n\treturn PaymentProduct302SpecificData;\r\n});","define(\"connectsdk.PaymentProduct320SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct320SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.gateway = json.gateway;\r\n\t\tthis.networks = json.networks;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct320SpecificData = PaymentProduct320SpecificData;\r\n\treturn PaymentProduct320SpecificData;\r\n});","define(\"connectsdk.PaymentProduct863SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct863SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.integrationTypes = json.integrationTypes;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct863SpecificData = PaymentProduct863SpecificData;\r\n\treturn PaymentProduct863SpecificData;\r\n});","define(\"connectsdk.PaymentProductDisplayHints\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProductDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayOrder = json.displayOrder;\r\n\t\tthis.label = json.label;\r\n\t\tthis.logo = json.logo;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductDisplayHints = PaymentProductDisplayHints;\r\n\treturn PaymentProductDisplayHints;\r\n});","define(\"connectsdk.BasicPaymentProduct\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\", \"connectsdk.PaymentProduct302SpecificData\", \"connectsdk.PaymentProduct320SpecificData\", \"connectsdk.PaymentProduct863SpecificData\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints, PaymentProduct302SpecificData, PaymentProduct320SpecificData, PaymentProduct863SpecificData) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProduct, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (_json.paymentProduct302SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct302SpecificData = new PaymentProduct302SpecificData(_json.paymentProduct302SpecificData);\r\n\t\t}\r\n\t\tif (_json.paymentProduct320SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct320SpecificData = new PaymentProduct320SpecificData(_json.paymentProduct320SpecificData);\r\n\t\t}\r\n\t\tif (_json.paymentProduct863SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct863SpecificData = new PaymentProduct863SpecificData(_json.paymentProduct863SpecificData);\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProduct = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"product\";\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.allowsRecurring = json.allowsRecurring;\r\n\t\tthis.allowsTokenization = json.allowsTokenization;\r\n\t\tthis.autoTokenized  = json.autoTokenized ;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.maxAmount = json.maxAmount;\r\n\t\tthis.minAmount = json.minAmount;\r\n\t\tthis.paymentMethod = json.paymentMethod;\r\n\t\tthis.mobileIntegrationLevel = json.mobileIntegrationLevel;\r\n\t\tthis.usesRedirectionTo3rdParty = json.usesRedirectionTo3rdParty;\r\n\t\tthis.paymentProductGroup = json.paymentProductGroup;\r\n\r\n\t\t_parseJSON(json, this, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProduct = BasicPaymentProduct;\r\n\treturn BasicPaymentProduct;\r\n});","define(\"connectsdk.BasicPaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\r\n\r\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroup = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"group\";\r\n\t\tthis.id = json.id;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroup = BasicPaymentProductGroup;\r\n\treturn BasicPaymentProductGroup;\r\n});","define(\"connectsdk.MaskedString\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar MaskedString = function(formattedValue, cursorIndex) {\r\n\r\n\t\tthis.formattedValue = formattedValue;\r\n\t\tthis.cursorIndex = cursorIndex;\r\n\t};\r\n\r\n\tconnectsdk.MaskedString = MaskedString;\r\n\treturn MaskedString;\r\n});","define(\"connectsdk.MaskingUtil\", [\"connectsdk.core\", \"connectsdk.MaskedString\"], function(connectsdk, MaskedString) {\r\n\r\n\tvar _fillBuffer = function(index, offset, buffer, tempMask, valuec) {\r\n\t\tif (index+offset < valuec.length && index < tempMask.length) {\r\n\t\t\tif ((tempMask[index] === \"9\" && Number(valuec[index+offset]) > -1 && valuec[index+offset] !== \" \") || tempMask[index] === \"*\") {\r\n\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t} else {\r\n\t\t\t\tif (valuec[index+offset] === tempMask[index]) {\r\n\t\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t\t} else if (tempMask[index] !== \"9\" && tempMask[index] !== \"*\") {\r\n\t\t\t\t\tbuffer.push(tempMask[index]);\r\n\t\t\t\t\toffset--;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// offset++;\r\n\t\t\t\t\tvaluec.splice(index+offset, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_fillBuffer(index+1, offset, buffer, tempMask, valuec);\r\n\t\t}\r\n\t};\r\n\r\n\tvar MaskingUtil = function () {\r\n\t\tthis.applyMask = function (mask, newValue, oldValue) {\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = newValue.split(\"\");\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\ttempMask = [];\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttempMask.push(c);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// tempmask now contains the replaceable chars and the non-replaceable masks at the correct index\r\n\t\t\t\t_fillBuffer(0, 0, buffer, tempMask, valuec);\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnewValue = buffer.join(\"\");\r\n\t\t\tvar cursor = 1;\r\n\t\t\t// calculate the cursor index\r\n\t\t\tif (oldValue) {\r\n\t\t\t\tvar tester = oldValue.split(\"\");\r\n\t\t\t\tfor (var i = 0, il = buffer.length; i < il; i++) {\r\n\t\t\t\t\tif (buffer[i] !== tester[i]) {\r\n\t\t\t\t\t\tcursor = i+1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (newValue.substring(0, newValue.length -1) === oldValue) {\r\n\t\t\t\tcursor = newValue.length + 1;\r\n\t\t\t}\r\n\t\t\treturn new MaskedString(newValue, cursor);\r\n\t\t};\r\n\t\t\r\n\t\tthis.getMaxLengthBasedOnMask = function (mask) {\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tnewLength = -1;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tnewLength++;\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tnewLength--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newLength;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.removeMask = function (mask, value) {\r\n\t\t\t// remove the mask from the masked input\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = (value) ? value.split(\"\") : [];\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tvalueIndex = -1,\r\n\t\t\t\t\t\tinMask = false;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tvalueIndex++;\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tvalueIndex--;\r\n\t\t\t\t\t\tif (c === \"{\") {\r\n\t\t\t\t\t\t\tinMask = true;\r\n\t\t\t\t\t\t} else if (c === \"}\") {\r\n\t\t\t\t\t\t\tinMask = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (inMask && valuec[valueIndex]) {\r\n\t\t\t\t\t\t\tbuffer.push(valuec[valueIndex]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn buffer.join(\"\").trim();\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.MaskingUtil = MaskingUtil;\r\n\treturn MaskingUtil;\r\n});","define(\"connectsdk.ValidationRuleLuhn\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLuhn = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.validate = function (value) {\r\n\t\t\tvar luhnArr = [[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]]\r\n\t\t\t\t,sum = 0;\r\n\t\t\t\t\r\n\t   \t\tvalue.replace(/\\D+/g,\"\").replace(/[\\d]/g, function(c, p, o) {\r\n\t\t        sum += luhnArr[ (o.length-p)&1 ][ parseInt(c,10) ];\r\n\t\t    });\r\n\t\t    return (sum%10 === 0) && (sum > 0);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLuhn = ValidationRuleLuhn;\r\n\treturn ValidationRuleLuhn;\r\n});","define(\"connectsdk.ValidationRuleExpirationDate\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\tvar _validateDateFormat = function (value) {\r\n\t\t// value is mmYY or mmYYYY\r\n\t\tvar pattern = /\\d{4}|\\d{6}$/g;\r\n\t\treturn pattern.test(value);\r\n\t};\r\n\r\n\tvar ValidationRuleExpirationDate = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type;\r\n\t\tthis.errorMessageId = json.type;\r\n\r\n\t\tthis.validate = function (value) {\r\n\r\n\t\t\tvalue = value.replace(/[^\\d]/g, '');\r\n\t\t\tif (!_validateDateFormat(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar split;\r\n\t\t\tif (value.length === 4) {\r\n\t\t\t\tsplit = [value.substring(0, 2), \"20\" + value.substring(2, 4)];\r\n\t\t\t} else if (value.length === 6) {\r\n\t\t\t\tsplit = [value.substring(0, 2), value.substring(2, 6)];\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// The month is zero-based, so subtract one.\r\n\t\t\tvar expirationMonth = split[0] - 1;\r\n\t\t\tvar expirationYear = split[1];\r\n\t\t\tvar expirationDate = new Date(expirationYear, expirationMonth, 1);\r\n\r\n\t\t\t// Compare the input with the parsed date, to check if the date rolled over.\r\n\t\t\tif (expirationDate.getMonth() !== Number(expirationMonth) || expirationDate.getFullYear() !== Number(expirationYear)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// For comparison, set the current year & month and the maximum allowed expiration date.\r\n\t\t\tvar nowWithDay = new Date();\r\n\t\t\tvar now = new Date(nowWithDay.getFullYear(), nowWithDay.getMonth(), 1);\r\n\t\t\tvar maxExpirationDate = new Date(nowWithDay.getFullYear() + 25, 11, 1);\r\n\r\n\t\t\t// The card is still valid if it expires this month.\r\n\t\t\treturn expirationDate >= now && expirationDate <= maxExpirationDate;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleExpirationDate = ValidationRuleExpirationDate;\r\n\treturn ValidationRuleExpirationDate;\r\n});\r\n","define(\"connectsdk.ValidationRuleFixedList\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleFixedList = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.allowedValues = json.attributes.allowedValues;\r\n\t\t\r\n\t\tthis.validate = function (value) {\r\n\t\t\tfor (var i = 0, il = this.allowedValues.length; i < il; i++) {\r\n\t\t\t\tif (this.allowedValues[i] === value) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleFixedList = ValidationRuleFixedList;\r\n\treturn ValidationRuleFixedList;\r\n});","define(\"connectsdk.ValidationRuleLength\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLength = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxLength = json.attributes.maxLength;\r\n\t\tthis.minLength = json.attributes.minLength;\r\n\t\t\r\n\t\tthis.validate = function (value) {\r\n\t\t\treturn this.minLength <= value.length && value.length <= this.maxLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLength = ValidationRuleLength;\r\n\treturn ValidationRuleLength;\r\n});","define(\"connectsdk.ValidationRuleRange\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRange = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxValue = json.attributes.maxValue;\r\n\t\tthis.minValue = json.attributes.minValue;\r\n\t\t\r\n\t\tthis.validate = function(value) {\r\n\t\t\tif (isNaN(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = Number(value);\r\n\t\t\treturn this.minValue <= value && value <= this.maxValue;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRange = ValidationRuleRange;\r\n\treturn ValidationRuleRange;\r\n});","define(\"connectsdk.ValidationRuleRegularExpression\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRegularExpression = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.regularExpression = json.attributes.regularExpression;\r\n\t\t\r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(this.regularExpression);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRegularExpression = ValidationRuleRegularExpression;\r\n\treturn ValidationRuleRegularExpression;\r\n});","define(\"connectsdk.ValidationRuleEmailAddress\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleEmailAddress = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\tthis.errorMessageId = json.type;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(/^[^@\\.]+(\\.[^@\\.]+)*@([^@\\.]+\\.)*[^@\\.]+\\.[^@\\.][^@\\.]+$/i);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleEmailAddress = ValidationRuleEmailAddress;\r\n\treturn ValidationRuleEmailAddress;\r\n});","define(\"connectsdk.ValidationRuleTermsAndConditions\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleTermsAndConditions = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\tthis.errorMessageId = json.type;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\treturn true === value || \"true\" === value;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleTermsAndConditions = ValidationRuleTermsAndConditions;\r\n\treturn ValidationRuleTermsAndConditions;\r\n});","define(\"connectsdk.ValidationRuleBoletoBancarioRequiredness\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleBoletoBancarioRequiredness = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.fiscalNumberLength = json.attributes.fiscalNumberLength;\r\n\t\t\r\n\t\tthis.validate = function (value, fiscalNumberValue) {\r\n\t\t\treturn (fiscalNumberValue.length === this.fiscalNumberLength && value.length > 0) || fiscalNumberValue.length !== this.fiscalNumberLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleBoletoBancarioRequiredness = ValidationRuleBoletoBancarioRequiredness;\r\n\treturn ValidationRuleBoletoBancarioRequiredness;\r\n});","define('connectsdk.ValidationRuleIban', ['connectsdk.core'], function (connectsdk) {\r\n\r\n  /**\r\n   * Sanitize value by remove all unwanted chars of a Iban format\r\n   *\r\n   * @param {String} value\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  var _sanitizeValue = function (value) {\r\n    return value.replace(/[^\\d\\w]+/g, '').toUpperCase();\r\n  };\r\n\r\n  /**\r\n   * Get state if given value is a valid Iban format\r\n   *\r\n   * @param {String} value\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  var _isValidFormat = function (value) {\r\n    return typeof value === 'string' && /^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{7}([A-Z0-9]?){0,16}$/.test(_sanitizeValue(value));\r\n  };\r\n\r\n  /**\r\n   * Convert a value to a string needed for validation calculations\r\n   *\r\n   * @param {String} value\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  var _toComputedString = function (value) {\r\n    return _sanitizeValue(value)\r\n\r\n    // place the first 4 chars to the end\r\n      .replace(/(^.{4})(.*)/, '$2$1')\r\n\r\n      // replace letters by corresponding numbers A=10 / Z=35\r\n      .replace(/[A-Z]/g, function (d) {\r\n        return d.charCodeAt(0) - 55;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Validate Iban by given json\r\n   *\r\n   * @param {Object} json\r\n   * @constructor\r\n   */\r\n  var ValidationRuleIban = function (json) {\r\n    this.json           = json;\r\n    this.type           = json.type;\r\n    this.errorMessageId = json.type;\r\n\r\n    /**\r\n     * Validate Iban nrule\r\n     *\r\n     * @see https://github.com/arhs/iban.js/blob/master/iban.js\r\n     *\r\n     * @param   {string} value\r\n     * @returns {boolean}\r\n     */\r\n    this.validate = function (value) {\r\n\r\n      // bail if format is invalid\r\n      if (!_isValidFormat(value)) {\r\n        return false;\r\n      }\r\n\r\n      // Check if reminder module 97 equals 1\r\n      // only then it should pass the validation\r\n      var remainder = _toComputedString(value),\r\n          block;\r\n\r\n      while (remainder.length > 2) {\r\n        block     = remainder.slice(0, 9);\r\n        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\r\n      }\r\n\r\n      return (parseInt(remainder, 10) % 97) === 1;\r\n    };\r\n  };\r\n\r\n  connectsdk.ValidationRuleIban = ValidationRuleIban;\r\n  return ValidationRuleIban;\r\n});","define(\"connectsdk.ValidationRuleFactory\", [\"connectsdk.core\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleTermsAndConditions\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleBoletoBancarioRequiredness\", \"connectsdk.ValidationRuleIban\"], function (connectsdk, ValidationRuleEmailAddress, ValidationRuleTermsAndConditions, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleBoletoBancarioRequiredness, ValidationRuleIban) {\r\n\r\n    var ValidationRuleFactory = function () {\r\n\r\n        this.makeValidator = function (json) {\r\n            // create new class based on the rule\r\n            try {\r\n                var classType = json.type.charAt(0).toUpperCase() + json.type.slice(1), // camel casing\r\n                    className = eval(\"ValidationRule\" + classType);\r\n                return new className(json);\r\n            } catch (e) {\r\n                console.warn('no validator for ', classType);\r\n            }\r\n            return null;\r\n        };\r\n    };\r\n\r\n    connectsdk.ValidationRuleFactory = ValidationRuleFactory;\r\n    return ValidationRuleFactory;\r\n});","define(\"connectsdk.DataRestrictions\", [\"connectsdk.core\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleTermsAndConditions\", \"connectsdk.ValidationRuleIban\", \"connectsdk.ValidationRuleFactory\"], function(connectsdk, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleEmailAddress, ValidationRuleTermsAndConditions, ValidationRuleIban, ValidationRuleFactory) {\r\n\r\n\tvar DataRestrictions = function (json, mask) {\r\n\r\n\t\tvar _parseJSON = function (_json, _validationRules, _validationRuleByType) {\r\n\t\t    var validationRuleFactory = new ValidationRuleFactory();\r\n\t\t\tif (_json.validators) {\r\n\t\t\t\tfor (var key in _json.validators) {\r\n\t\t\t\t\tvar validationRule = validationRuleFactory.makeValidator({type: key, attributes: _json.validators[key]});\r\n\t\t\t\t\tif (validationRule) {\r\n\t\t\t\t\t\t_validationRules.push(validationRule);\r\n\t\t\t\t\t\t_validationRuleByType[validationRule.type] = validationRule;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.isRequired = json.isRequired;\r\n\t\tthis.validationRules = [];\r\n\t\tthis.validationRuleByType = {};\r\n\r\n\t\t_parseJSON(json, this.validationRules, this.validationRuleByType);\r\n\t};\r\n\r\n\tconnectsdk.DataRestrictions = DataRestrictions;\r\n\treturn DataRestrictions;\r\n});","define(\"connectsdk.ValueMappingElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValueMappingElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayName = json.displayName;\r\n\t\tthis.value = json.value;\r\n\t};\r\n\r\n\tconnectsdk.ValueMappingElement = ValueMappingElement;\r\n\treturn ValueMappingElement;\r\n});","define(\"connectsdk.FormElement\", [\"connectsdk.core\", \"connectsdk.ValueMappingElement\"], function(connectsdk, ValueMappingElement) {\r\n\r\n\tvar FormElement = function (json) {\r\n\r\n\t\tvar _parseJSON = function (_json, _valueMapping) {\r\n\t\t\tif (_json.valueMapping) {\r\n\t\t\t\tfor (var i = 0, l = _json.valueMapping.length; i < l; i++) {\r\n\t\t\t\t\t_valueMapping.push(new ValueMappingElement(_json.valueMapping[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type;\r\n\t\tthis.valueMapping = [];\r\n\t\t\r\n\t\t_parseJSON(json, this.valueMapping);\r\n\t};\r\n\r\n\tconnectsdk.FormElement = FormElement;\r\n\treturn FormElement;\r\n});","define(\"connectsdk.Tooltip\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Tooltip = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.image = json.image;\r\n\t\tthis.label = json.label;\r\n\t};\r\n\r\n\tconnectsdk.Tooltip = Tooltip;\r\n\treturn Tooltip;\r\n});","define(\"connectsdk.PaymentProductFieldDisplayHints\", [\"connectsdk.core\", \"connectsdk.Tooltip\", \"connectsdk.FormElement\"], function(connectsdk, Tooltip, FormElement) {\r\n\r\n\tvar PaymentProductFieldDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n \t\tthis.displayOrder = json.displayOrder;\r\n\t\tif (json.formElement) {\r\n\t\t\tthis.formElement = new FormElement(json.formElement);\r\n\t\t}\r\n\t\tthis.label = json.label;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.obfuscate = json.obfuscate;\r\n\t\tthis.placeholderLabel = json.placeholderLabel;\r\n\t\tthis.preferredInputType = json.preferredInputType;\r\n\t\tthis.tooltip = json.tooltip? new Tooltip(json.tooltip): undefined;\r\n\t\tthis.alwaysShow = json.alwaysShow;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductFieldDisplayHints = PaymentProductFieldDisplayHints;\r\n\treturn PaymentProductFieldDisplayHints;\r\n});","define(\"connectsdk.PaymentProductField\", [\"connectsdk.core\", \"connectsdk.PaymentProductFieldDisplayHints\", \"connectsdk.DataRestrictions\", \"connectsdk.MaskingUtil\"], function(connectsdk, PaymentProductFieldDisplayHints, DataRestrictions, MaskingUtil) {\r\n\tvar PaymentProductField = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayHints = json.displayHints ? new PaymentProductFieldDisplayHints(json.displayHints) : '';\r\n\t\tthis.dataRestrictions = new DataRestrictions(json.dataRestrictions, this.displayHints ? this.displayHints.mask : '');\r\n\t\tthis.id = json.id;\r\n\t\tthis.type = json.type;\r\n\t\tvar _errorCodes = [];\r\n\r\n\t\tthis.getErrorCodes = function (value) {\r\n\t\t\tif (value) {\r\n\t\t\t\t_errorCodes = [];\r\n\t\t\t\tthis.isValid(value);\r\n\t\t\t}\r\n\t\t\treturn _errorCodes;\r\n\t\t};\r\n\t\tthis.isValid = function (value) {\r\n\t\t\t// isValid checks all datarestrictions\r\n\t\t\tvar validators = this.dataRestrictions.validationRules;\r\n\t\t\tvar hasError = false;\r\n\t\t\tvalue = this.removeMask(value);\r\n\t\t\tfor (var i = 0, il = validators.length; i < il; i++) {\r\n\t\t\t\tvar validator = validators[i];\r\n\t\t\t\tif (!validator.validate(value)) {\r\n\t\t\t\t\thasError = true;\r\n\t\t\t\t\t_errorCodes.push(validator.errorMessageId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn !hasError;\r\n\t\t};\r\n\t\tthis.applyMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.mask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.applyWildcardMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.wildcardMask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.removeMask = function (value) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.removeMask(this.displayHints.mask, value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductField = PaymentProductField;\r\n\treturn PaymentProductField;\r\n});","define(\"connectsdk.PaymentProduct\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProduct = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct = PaymentProduct;\r\n\treturn PaymentProduct;\r\n});\r\n","define(\"connectsdk.PaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProductGroup = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.json = json;\r\n\t\tbasicPaymentProduct.json.type = \"group\";\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductGroup = PaymentProductGroup;\r\n\treturn PaymentProductGroup;\r\n});","define(\"connectsdk.BasicPaymentProducts\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\"], function(connectsdk, BasicPaymentProduct) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProducts, _accountsOnFile, _paymentProductById, _accountOnFileById, _paymentProductByAccountOnFileId) {\r\n\t\tif (_json.paymentProducts) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProducts.length; i < il; i++) {\r\n\t\t\t\tvar paymentProduct = new BasicPaymentProduct(_json.paymentProducts[i]);\r\n\t\t\t\t_paymentProducts.push(paymentProduct);\r\n\t\t\t\t_paymentProductById[paymentProduct.id] = paymentProduct;\r\n\r\n\t\t\t\tif (paymentProduct.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProduct.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t\t_paymentProductByAccountOnFileId[aof.id] = paymentProduct;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProducts = function (json) {\r\n\t\tthis.basicPaymentProducts = [];\r\n\t\tthis.basicPaymentProductById = {};\r\n\t\tthis.basicPaymentProductByAccountOnFileId = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProducts, this.accountsOnFile, this.basicPaymentProductById, this.accountOnFileById, this.basicPaymentProductByAccountOnFileId);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProducts = BasicPaymentProducts;\r\n\treturn BasicPaymentProducts;\r\n});","define(\"connectsdk.BasicPaymentProductGroups\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProductGroup\"], function(connectsdk, BasicPaymentProductGroup) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProductGroups, _accountsOnFile, _paymentProductGroupById, _accountOnFileById) {\r\n\t\tif (_json.paymentProductGroups) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductGroup = new BasicPaymentProductGroup(_json.paymentProductGroups[i]);\r\n\t\t\t\t_paymentProductGroups.push(paymentProductGroup);\r\n\t\t\t\t_paymentProductGroupById[paymentProductGroup.id] = paymentProductGroup;\r\n\r\n\t\t\t\tif (paymentProductGroup.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProductGroup.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroups = function (json) {\r\n\t\tthis.basicPaymentProductGroups = [];\r\n\t\tthis.basicPaymentProductGroupById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProductGroups, this.accountsOnFile, this.basicPaymentProductGroupById, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroups = BasicPaymentProductGroups;\r\n\treturn BasicPaymentProductGroups;\r\n});","define(\"connectsdk.BasicPaymentItems\", [\"connectsdk.core\"], function(connectsdk) {\r\n\t\"use strict\";\r\n\r\n\t\tvar _parseJson = function (_products, _groups, _basicPaymentItems) {\r\n\t\tvar doRemove = [];\r\n\t\tif (_groups) {\r\n\t\t\tfor (var i = 0, il = _groups.basicPaymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar groupId = _groups.basicPaymentProductGroups[i].id,\r\n\t\t\t\t\t\tgroupReplaced = false;\r\n\t\t\t\tfor (var j = 0, jl = _products.basicPaymentProducts.length; j < jl; j++) {\r\n\t\t\t\t\tvar productMethod = _products.basicPaymentProducts[j].paymentProductGroup;\r\n\t\t\t\t\tif (productMethod === groupId && groupReplaced === false) {\r\n\t\t\t\t\t\t// replace instance by group\r\n\t\t\t\t\t\t_products.basicPaymentProducts.splice(j, 1, _groups.basicPaymentProductGroups[i]);\r\n\t\t\t\t\t\tgroupReplaced = true;\r\n\t\t\t\t\t} else if (productMethod === groupId && groupReplaced === true) {\r\n\t\t\t\t\t\t// mark for removal\r\n\t\t\t\t\t\tdoRemove.push(j);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = doRemove.length -1, il = 0; i >= il; i--) {\r\n\t\t\t\t_products.basicPaymentProducts.splice(doRemove[i], 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t_basicPaymentItems.basicPaymentItems = JSON.parse(JSON.stringify(_products.basicPaymentProducts));\r\n\t\tfor (var i = 0, il = _basicPaymentItems.basicPaymentItems.length; i < il; i++) {\r\n\t\t\tvar basicPaymentItem = _basicPaymentItems.basicPaymentItems[i];\r\n\t\t\t_basicPaymentItems.basicPaymentItemById[basicPaymentItem.id] = basicPaymentItem;\r\n\t\t\tif (basicPaymentItem.accountsOnFile) {\r\n\t\t\t\tvar aofs = basicPaymentItem.accountsOnFile;\r\n\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t_basicPaymentItems.accountsOnFile.push(aof);\r\n\t\t\t\t\t_basicPaymentItems.accountOnFileById[aof.id] = aof;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tvar BasicPaymentItems = function (products, groups) {\r\n\t\tthis.basicPaymentItems = [];\r\n\t\tthis.basicPaymentItemById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJson(products, groups, this);\r\n\t};\r\n\tconnectsdk.BasicPaymentItems = BasicPaymentItems;\r\n\treturn BasicPaymentItems;\r\n});","define(\"connectsdk.PaymentRequest\", [\"connectsdk.core\"], function(connectsdk) {\r\n  var PaymentRequest = function(clientSessionID) {\r\n    var _clientSessionID = clientSessionID;\r\n    var _fieldValues = {};\r\n    var _paymentProduct = null;\r\n    var _accountOnFile = null;\r\n    var _tokenize = false;\r\n\r\n    this.isValid = function() {\r\n      var errors = this.getErrorMessageIds();\r\n      // besides checking the fields for errors check if all mandatory fields are present as well\r\n      var paymentProduct = this.getPaymentProduct();\r\n      if (!paymentProduct) {\r\n        return false;\r\n      }\r\n      var allRequiredFieldsPresent = true;\r\n      for (var i = 0; i < paymentProduct.paymentProductFields.length; i++) {\r\n        var field = paymentProduct.paymentProductFields[i];\r\n        if (field.dataRestrictions.isRequired) {\r\n          // is this field present in the request?\r\n          var storedValue = this.getValue(field.id);\r\n          if (!storedValue && !this.getAccountOnFile()) {\r\n              // if we have an acoount on file the account on file could have the field, so we can ignore it\r\n            allRequiredFieldsPresent = false;\r\n          }\r\n        }\r\n      }\r\n      return errors.length === 0 && allRequiredFieldsPresent;\r\n    };\r\n    this.setValue = function(paymentProductFieldId, value) {\r\n      _fieldValues[paymentProductFieldId] = value;\r\n    };\r\n    this.setTokenize = function(tokenize) {\r\n      _tokenize = tokenize;\r\n    };\r\n    this.getTokenize = function() {\r\n      return _tokenize;\r\n    };\r\n    this.getErrorMessageIds = function() {\r\n      var errors = [];\r\n      for (key in _fieldValues) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[key];\r\n        if (paymentProductField) {\r\n          errors = errors.concat(paymentProductField.getErrorCodes(_fieldValues[key]));\r\n        }\r\n      }\r\n      return errors;\r\n    };\r\n    this.getValue = function(paymentProductFieldId) {\r\n      return _fieldValues[paymentProductFieldId];\r\n    };\r\n    this.getValues = function() {\r\n      return _fieldValues;\r\n    };\r\n    this.getMaskedValue = function(paymentProductFieldId) {\r\n      var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n      var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n      return maskedString.formattedValue();\r\n    };\r\n    this.getMaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n        result[paymentProductFieldId] = maskedString.formattedValue;\r\n      }\r\n      return result;\r\n    };\r\n    this.getUnmaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        if (paymentProductField) {\r\n          var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n          var formattedValue = maskedString.formattedValue;\r\n          result[paymentProductFieldId] = paymentProductField.removeMask(formattedValue);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n    this.setPaymentProduct = function(paymentProduct) {\r\n      if (paymentProduct.type === \"group\") {\r\n        return;\r\n      }\r\n      _paymentProduct = paymentProduct;\r\n    };\r\n    this.getPaymentProduct = function() {\r\n      return _paymentProduct;\r\n    };\r\n    this.setAccountOnFile = function(accountOnFile) {\r\n      for (var i = 0, il = accountOnFile.attributes.length; i < il; i++) {\r\n        var attribute = accountOnFile.attributes[i];\r\n        delete _fieldValues[attribute.key];\r\n      }\r\n      _accountOnFile = accountOnFile;\r\n    };\r\n    this.getAccountOnFile = function() {\r\n      return _accountOnFile;\r\n    };\r\n    this.getClientSessionID = function() {\r\n\t\t    return clientSessionID;\r\n    };\r\n  };\r\n  connectsdk.PaymentRequest = PaymentRequest;\r\n  return PaymentRequest;\r\n});","define(\"connectsdk.C2SPaymentProductContext\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n    var C2SPaymentProductContext = function (payload) {\r\n        this.totalAmount = typeof payload.totalAmount !== 'undefined' ? payload.totalAmount : '';\r\n        this.countryCode = payload.countryCode;\r\n        this.isRecurring = typeof payload.isRecurring !== 'undefined' ? payload.isRecurring : '';\r\n        this.currency = payload.currency;\r\n\r\n        if (typeof payload.locale !== 'undefined') {\r\n            this.locale = payload.locale;\r\n        }\r\n\r\n        if (typeof payload.accountOnFileId !== 'undefined') {\r\n            this.accountOnFileId = parseInt(payload.accountOnFileId);\r\n        }\r\n    };\r\n\r\n  connectsdk.C2SPaymentProductContext = C2SPaymentProductContext;\r\n  return C2SPaymentProductContext;\r\n});\r\n","define(\"connectsdk.JOSEEncryptor\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar pki = forge.pki;\r\n\tvar asn1 = forge.asn1;\r\n\tvar CEKKEYLENGTH = 512;\r\n\tvar IVLENGTH = 128;\r\n\r\n\tvar base64UrlEncode = function(str) {\r\n\t\tstr = forge.util.encode64(str);\r\n\t\tstr = str.split('=')[0];\r\n\t\tstr = str.replace(/\\+/g, '-');\r\n\t\tstr = str.replace(/\\//g, '_');\r\n\t\treturn str;\r\n\t};\r\n\r\n\tvar createProtectedHeader = function(kid) {\r\n\t\tvar JOSEHeader = {\r\n\t\t\t\"alg\" : \"RSA-OAEP\",\r\n\t\t\t\"enc\" : \"A256CBC-HS512\",\r\n\t\t\t\"kid\" : kid\r\n\t\t};\r\n\t\treturn JSON.stringify(JOSEHeader);\r\n\t};\r\n\r\n\tvar decodePemPublicKey = function(publickeyB64Encoded) {\r\n\t\t// step 1: base64decode\r\n\t\tvar publickeyB64Decoded = forge.util.decode64(publickeyB64Encoded);\r\n\t\t// create a bytebuffer with these bytes\r\n\t\tvar buffer2 = forge.util.createBuffer(publickeyB64Decoded, 'raw');\r\n\t\t// convert DER to ASN1 object\r\n\t\tvar publickeyObject2 = forge.asn1.fromDer(buffer2);\r\n\t\t// convert to publicKey object\r\n\t\tvar publicKey2 = pki.publicKeyFromAsn1(publickeyObject2);\r\n\t\treturn publicKey2;\r\n\t};\r\n\r\n\tvar encryptContentEncryptionKey = function(CEK, publicKey) {\r\n\t\t// encrypt CEK with OAEP+SHA-1+MGF1Padding\r\n\t\tvar encryptedCEK = publicKey.encrypt(CEK, 'RSA-OAEP');\r\n\t\treturn encryptedCEK;\r\n\t};\r\n\r\n\tvar encryptPayload = function(payload, encKey, initializationVector) {\r\n\t\tvar cipher = forge.cipher.createCipher('AES-CBC', encKey);\r\n\t\tcipher.start({\r\n\t\t\tiv : initializationVector\r\n\t\t});\r\n\t\tcipher.update(forge.util.createBuffer(payload));\r\n\t\tcipher.finish();\r\n\t\treturn cipher.output.bytes();\r\n\t};\r\n\r\n\tvar calculateAdditionalAuthenticatedDataLength = function(encodededProtectedHeader) {\r\n\t\tvar buffer = forge.util.createBuffer(encodededProtectedHeader);\r\n\t\tvar lengthInBits = buffer.length() * 8;\r\n\r\n\t\tvar buffer2 = forge.util.createBuffer();\r\n\t\t// convert int to 64bit big endian\r\n\t\tbuffer2.putInt32(0);\r\n\t\tbuffer2.putInt32(lengthInBits);\r\n\t\treturn buffer2.bytes();\r\n\t};\r\n\r\n\tvar calculateHMAC = function(macKey, encodededProtectedHeader, initializationVector, cipherText, al) {\r\n\t\tvar buffer = forge.util.createBuffer();\r\n\t\tbuffer.putBytes(encodededProtectedHeader);\r\n\t\tbuffer.putBytes(initializationVector);\r\n\t\tbuffer.putBytes(cipherText);\r\n\t\tbuffer.putBytes(al);\r\n\r\n\t\tvar hmacInput = buffer.bytes();\r\n\r\n\t\tvar hmac = forge.hmac.create();\r\n\t\thmac.start(forge.sha512.create(), macKey);\r\n\t\thmac.update(hmacInput);\r\n\t\treturn hmac.digest().bytes();\r\n\t};\r\n\r\n\tvar JOSEEncryptor = function() {\r\n\r\n\t\tthis.encrypt = function(plainTextValues, publicKeyResponse) {\r\n\t\t\t// Create protected header and encode it with Base64 encoding\r\n\t\t\tvar payload = JSON.stringify(plainTextValues);\r\n\t\t\tvar protectedHeader = createProtectedHeader(publicKeyResponse.keyId);\r\n\t\t\tvar encodededProtectedHeader = base64UrlEncode(protectedHeader);\r\n\r\n\t\t\t// Create ContentEncryptionKey, is a random byte[]\r\n\t\t\tvar CEK = forge.random.getBytesSync(CEKKEYLENGTH / 8);\r\n\t\t\tvar publicKey = decodePemPublicKey(publicKeyResponse.publicKey);\r\n\r\n\t\t\t// Encrypt the contentEncryptionKey with the GC gateway publickey and encode it with Base64 encoding\r\n\t\t\tvar encryptedContentEncryptionKey = encryptContentEncryptionKey(CEK, publicKey);\r\n\t\t\tvar encodedEncryptedContentEncryptionKey = base64UrlEncode(encryptedContentEncryptionKey);\r\n\r\n\t\t\t// Split the contentEncryptionKey in ENC_KEY and MAC_KEY for using hmac\r\n\t\t\tvar macKey = CEK.substring(0, CEKKEYLENGTH / 2 / 8);\r\n\t\t\tvar encKey = CEK.substring(CEKKEYLENGTH / 2 / 8);\r\n\r\n\t\t\t// Create Initialization Vector\r\n\t\t\tvar initializationVector = forge.random.getBytesSync(IVLENGTH / 8);\r\n\t\t\tvar encodededinitializationVector = base64UrlEncode(initializationVector);\r\n\r\n\t\t\t// Encrypt content with ContentEncryptionKey and Initialization Vector\r\n\t\t\tvar cipherText = encryptPayload(payload, encKey, initializationVector);\r\n\t\t\tvar encodedCipherText = base64UrlEncode(cipherText);\r\n\r\n\t\t\t// Create Additional Authenticated Data  and Additional Authenticated Data Length\r\n\t\t\tvar al = calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader);\r\n\r\n\t\t\t// Calculates HMAC\r\n\t\t\tvar calculatedHmac = calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al);\r\n\r\n\t\t\t// Truncate HMAC Value to Create Authentication Tag\r\n\t\t\tvar authenticationTag = calculatedHmac.substring(0, calculatedHmac.length / 2);\r\n\t\t\tvar encodedAuthenticationTag = base64UrlEncode(authenticationTag);\r\n\r\n\t\t\treturn encodededProtectedHeader + \".\" + encodedEncryptedContentEncryptionKey + \".\" + encodededinitializationVector + \".\" + encodedCipherText + \".\" + encodedAuthenticationTag;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.JOSEEncryptor = JOSEEncryptor;\r\n\treturn JOSEEncryptor;\r\n});","define(\"connectsdk.Encryptor\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.JOSEEncryptor\", \"connectsdk.Util\"], function(connectsdk, Promise, JOSEEncryptor, Util) {\r\n\r\n\tvar _util = Util.getInstance();\r\n\r\n\tvar Encryptor = function(publicKeyResponsePromise) {\r\n\t\tthis.encrypt = function(paymentRequest) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar encryptedString = '';\r\n\t\t\tpublicKeyResponsePromise.then(function (publicKeyResponse) {\r\n\t\t\t\tif (paymentRequest.isValid()) {\r\n\r\n\t\t\t\t\tvar blob = {\r\n\t\t\t\t\t   clientSessionId: paymentRequest.getClientSessionID()\r\n\t\t\t\t\t   ,nonce: forge.util.bytesToHex(forge.random.getBytesSync(16))\r\n\t\t\t\t\t   ,paymentProductId: paymentRequest.getPaymentProduct().id\r\n                       ,tokenize: paymentRequest.getTokenize()\r\n                    };\r\n\r\n\t\t\t\t\tif (paymentRequest.getAccountOnFile()) {\r\n                        blob[\"accountOnFileId\"] = paymentRequest.getAccountOnFile().id;\r\n                    }\r\n\r\n                    var paymentValues = [], values = paymentRequest.getUnmaskedValues();\r\n                    var ownValues = Object.getOwnPropertyNames(values);\r\n\t\t\t\t\tfor (var i = 0; i < ownValues.length; i++) {\r\n\t\t\t\t\t\tvar propertyName = ownValues[i];\r\n\t\t\t\t\t\tif (propertyName !== \"length\") {\r\n\t\t\t\t\t\t\tpaymentValues.push({\r\n\t\t\t\t\t\t\t\tkey: propertyName,\r\n\t\t\t\t\t\t\t\tvalue: values[propertyName]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    blob[\"paymentValues\"] = paymentValues;\r\n\r\n\t\t\t\t\tblob[\"collectedDeviceInformation\"] = _util.collectDeviceInformation();\r\n\r\n\t\t\t\t\t// use blob to encrypt\r\n\t\t\t\t\tvar joseEncryptor = new JOSEEncryptor();\r\n\t\t\t\t\tencryptedString = joseEncryptor.encrypt(blob, publicKeyResponse);\r\n\t\t\t\t\tpromise.resolve(encryptedString);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpromise.reject(paymentRequest.getErrorMessageIds());\r\n\t\t\t\t}\r\n\t\t\t}, function (error) {\r\n\t\t\t\tpromise.reject(error);\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.Encryptor = Encryptor;\r\n\treturn Encryptor;\r\n});\r\n","define(\"connectsdk.Session\", [\"connectsdk.core\", \"connectsdk.C2SCommunicator\", \"connectsdk.C2SCommunicatorConfiguration\", \"connectsdk.IinDetailsResponse\", \"connectsdk.promise\", \"connectsdk.C2SPaymentProductContext\", \"connectsdk.BasicPaymentProducts\", \"connectsdk.BasicPaymentProductGroups\", \"connectsdk.PaymentProduct\", \"connectsdk.PaymentProductGroup\", \"connectsdk.BasicPaymentItems\", \"connectsdk.PaymentRequest\", \"connectsdk.Encryptor\"], function (connectsdk, C2SCommunicator, C2SCommunicatorConfiguration, IinDetailsResponse, Promise, C2SPaymentProductContext, BasicPaymentProducts, BasicPaymentProductGroups, PaymentProduct, PaymentProductGroup, BasicPaymentItems, PaymentRequest, Encryptor) {\r\n\tvar APIVERSION = \"client/v1\";\r\n\tvar session = function (sessionDetails, paymentProduct) {\r\n\r\n\t\tvar _c2SCommunicatorConfiguration = new C2SCommunicatorConfiguration(sessionDetails, APIVERSION),\r\n\t\t\t_c2sCommunicator = new C2SCommunicator(_c2SCommunicatorConfiguration, paymentProduct),\r\n\t\t\t_session = this,\r\n\t\t\t_paymentProductId, _paymentProduct, _paymentRequestPayload, _paymentRequest, _paymentProductGroupId, _paymentProductGroup;\r\n\t\tthis.clientApiUrl = _c2SCommunicatorConfiguration.clientApiUrl;\r\n\t\tthis.assetUrl = _c2SCommunicatorConfiguration.assetUrl;\r\n\r\n\t\tthis.getBasicPaymentProducts = function (paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProducts(c2SPaymentProductContext, paymentProductSpecificInputs).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProducts = new BasicPaymentProducts(json);\r\n\t\t\t\tpromise.resolve(paymentProducts);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function (paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProductGroups(c2SPaymentProductContext).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProductGroups = new BasicPaymentProductGroups(json);\r\n\t\t\t\tpromise.resolve(paymentProductGroups);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentItems = function (paymentRequestPayload, useGroups, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t// get products & groups\r\n\t\t\tif (useGroups) {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\t_session.getBasicPaymentProductGroups(paymentRequestPayload).then(function (groups) {\r\n\t\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, groups);\r\n\t\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, null);\r\n\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function (paymentProductId, paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductId = paymentProductId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProduct(paymentProductId, c2SPaymentProductContext, paymentProductSpecificInputs).then(function (response) {\r\n\t\t\t\t_paymentProduct = new PaymentProduct(response);\r\n\t\t\t\tpromise.resolve(_paymentProduct);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProduct = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductGroupId = paymentProductGroupId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductGroup(paymentProductGroupId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentProductGroup = new PaymentProductGroup(response);\r\n\t\t\t\tpromise.resolve(_paymentProductGroup);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProductGroup = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getIinDetails = function (partialCreditCardNumber, paymentRequestPayload) {\r\n\t\t\tpartialCreditCardNumber = partialCreditCardNumber.replace(/ /g, '').substring(0, 6);\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\treturn _c2sCommunicator.getPaymentProductIdByCreditCardNumber(partialCreditCardNumber, c2SPaymentProductContext);\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\treturn _c2sCommunicator.getPublicKey();\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductNetworks(paymentProductId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tpromise.resolve(response);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\treturn _c2sCommunicator.getPaymentProductDirectory(paymentProductId, currencyCode, countryCode);\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\treturn _c2sCommunicator.convertAmount(amount, source, target);\r\n\t\t};\r\n\r\n\t\tthis.getPaymentRequest = function () {\r\n\t\t\tif (!_paymentRequest) {\r\n\t\t\t\t_paymentRequest = new PaymentRequest(_c2SCommunicatorConfiguration.clientSessionId);\r\n\t\t\t}\r\n\t\t\treturn _paymentRequest;\r\n\t\t};\r\n\r\n\t\tthis.getEncryptor = function () {\r\n\t\t\tvar publicKeyResponsePromise = _c2sCommunicator.getPublicKey();\r\n\t\t\treturn new Encryptor(publicKeyResponsePromise);\r\n\t\t};\r\n\r\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_c2sCommunicator.getThirdPartyPaymentStatus(paymentId).then(function (response) {\r\n\t\t\t\tpromise.resolve(response);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getCustomerDetails = function (paymentProductId, paymentRequestPayload) {\r\n\t\t\treturn _c2sCommunicator.getCustomerDetails(paymentProductId, paymentRequestPayload);\r\n\t\t};\r\n\r\n\t\t/* In case a full JSON representation of a payment product is already available in context,\r\n\t\t   this method can be used instead of getPaymentProduct for the same (but synchronous) result. */\r\n\t\tthis.transformPaymentProductJSON = function(json) {\r\n\t\t\treturn new PaymentProduct(_c2sCommunicator.transformPaymentProductJSON(json))\r\n\t\t};\r\n\r\n\t\t/* In case a full JSON representation of a payment product group is already available in context,\r\n\t\t   this method can be used instead of getPaymentProductGroup for the same (but synchronous) result. */\r\n\t\tthis.transformPaymentProductGroupJSON = function(json) {\r\n\t\t\treturn new PaymentProductGroup(_c2sCommunicator.transformPaymentProductJSON(json))\r\n\t\t};\r\n\t};\r\n\tconnectsdk.Session = session;\r\n\treturn session;\r\n});\r\n"]}