{"version":3,"sources":["core.js","promise.js","net.js","Util.js","GooglePay.js","ApplePay.js","PublicKeyResponse.js","C2SCommunicatorConfiguration.js","IinDetailsResponse.js","C2SCommunicator.js","LabelTemplateElement.js","Attribute.js","AccountOnFileDisplayHints.js","AccountOnFile.js","PaymentProduct302SpecificData.js","PaymentProduct320SpecificData.js","PaymentProduct863SpecificData.js","PaymentProductDisplayHints.js","BasicPaymentProduct.js","BasicPaymentProductGroup.js","MaskedString.js","MaskingUtil.js","ValidationRuleLuhn.js","ValidationRuleExpirationDate.js","ValidationRuleFixedList.js","ValidationRuleLength.js","ValidationRuleRange.js","ValidationRuleRegularExpression.js","ValidationRuleResidentIdNumber.js","ValidationRuleEmailAddress.js","ValidationRuleTermsAndConditions.js","ValidationRuleBoletoBancarioRequiredness.js","ValidationRuleIban.js","ValidationRuleFactory.js","DataRestrictions.js","ValueMappingElement.js","FormElement.js","Tooltip.js","PaymentProductFieldDisplayHints.js","PaymentProductField.js","PaymentProduct.js","PaymentProductGroup.js","BasicPaymentProducts.js","BasicPaymentProductGroups.js","BasicPaymentItems.js","PaymentRequest.js","C2SPaymentProductContext.js","JOSEEncryptor.js","Encryptor.js","session.js"],"names":["global","connectsdk","modules","define","module","dependencies","fn","length","i","apply","this","exports","window","turing","Promise","singleton","self","pending","resolve","result","complete","reject","isSingleton","prototype","then","success","failure","push","type","shift","PromiseModule","net","trim","s","replace","ajax","url","options","promise","chain","request","XMLHttpRequest","location","protocol","ActiveXObject","e","xhr","response","send","defaults","Accept","Content-Type","name","headers","hasOwnProperty","setRequestHeader","setHeaders","postBody","error","method","toLowerCase","asynchronous","onreadystatechange","readyState","contentType","mimeType","getResponseHeader","status","responseText","test","responseJSON","parseJSON","responseXML","parseXML","successfulRequest","callback","open","serialize","set","key","value","data","end","arguments","JSONPCallback","methodName","parseInt","Date","getTime","json","teardown","object","results","encodeURIComponent","join","string","JSON","parse","DOMParser","text","parseFromString","xml","async","loadXML","run","scriptTag","document","createElement","id","src","that","onerror","body","appendChild","removeChild","get","post","jsonp","Util","instance","getInstance","applePayPaymentProductId","googlePayPaymentProductId","bancontactPaymentProductId","getMetadata","screenSize","innerWidth","innerHeight","platformIdentifier","navigator","userAgent","sdkIdentifier","GC","rppEnabledPage","sdkCreator","collectDeviceInformation","timezoneOffsetUtcMinutes","getTimezoneOffset","locale","language","browserData","javaScriptEnabled","javaEnabled","colorDepth","screen","screenHeight","height","screenWidth","width","base64Encode","stringify","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","slice","filterOutProductsThatAreNotSupportedInThisBrowser","paymentProducts","product","paymentProductsThatAreNotSupportedInThisBrowser","indexOf","splice","_util","_paymentProductSpecificInputs","_context","_gateway","_networks","paymentsClient","_getBaseCardPaymentMethod","parameters","allowedAuthMethods","allowedCardNetworks","_getGooglePaymentDataRequestForPrefetch","apiVersion","apiVersionMinor","allowedPaymentMethods","Object","assign","tokenizationSpecification","gateway","gatewayMerchantId","googlePay","transactionInfo","totalPriceStatus","currencyCode","currency","merchantInfo","merchantName","_getGooglePaymentsClient","googlePayEnvironment","environment","google","payments","api","PaymentsClient","console","GooglePay","C2SCommunicator","isGooglePayAvailable","context","paymentProductSpecificInputs","googlePayData","networks","setTimeout","isReadyToPay","paymentDataRequest","prefetchPaymentData","warn","catch","isMerchantIdProvided","merchantId","ApplePay","isApplePayAvailable","applePayIsAvailable","ApplePaySession","canMakePayments","initPayment","_countryCode","_C2SCommunicator","acquirerCountry","countryCode","payment","total","label","displayName","amount","totalAmount","supportedNetworks","merchantCapabilities","applePaySession","begin","onvalidatemerchant","event","validationURL","domainName","hostname","createPaymentProductSession","merchantSession","completeMerchantValidation","paymentProductSession302SpecificOutput","sessionObject","message","abort","onpaymentauthorized","token","STATUS_SUCCESS","completePayment","STATUS_FAILURE","PublicKeyResponse","keyId","publicKey","C2SCommunicatorConfiguration","sessionDetails","endpoints","PROD","EU","API","ASSETS","US","AMS","PAR","PREPROD","SANDBOX","INTEGRATION","DEV_NAMI","DEV_ISC","clientSessionId","clientSessionID","Error","assetUrl","assetsBaseUrl","clientApiUrl","apiBaseUrl","customerId","region","tester","split","path","IinDetailsResponse","paymentProductId","isAllowedInContext","coBrands","Net","c2SCommunicatorConfiguration","paymentProduct","_c2SCommunicatorConfiguration","_cache","_providedPaymentProduct","_GooglePay","_ApplePay","_mapType","expirydate","numericstring","integer","expirationDate","formatUrl","endsWith","formatImageUrl","imageUrl","startsWith","prefix","suffix","_cleanJSON","il","fields","field","validatorKey","displayHints","obfuscate","dataRestrictions","validators","formElement","list","tooltip","image","sort","a","b","displayOrder","logo","_extendLogoUrl","postfix","_isPaymentProductInList","metadata","resolveGetBasicPaymentProducts","cacheKey","getBasicPaymentProducts","cacheKeyLocale","cacheBust","isRecurring","urlParameterLocale","res","paymentProduct320SpecificData","_getGooglePayData","getBasicPaymentProductGroups","getPaymentProduct","errorId","errors","code","propertyName","httpStatusCode","urlParameterlocale","getPaymentProductUrl","bancontact","forceBasicFlow","cleanedJSON","getPaymentProductGroup","paymentProductGroupId","getPaymentProductIdByCreditCardNumber","partialCreditCardNumber","iinDetailsResponse","isEnoughDigits","convertContextToIinDetailsContext","payload","bin","paymentContext","amountOfMoney","accountOnFileId","getPublicKey","publicKeyResponse","getPaymentProductNetworks","getPaymentProductDirectory","convertAmount","source","target","getThirdPartyPaymentStatus","paymentId","getCustomerDetails","constructCacheKeyFromKeyValues","values","requestParameters","paymentProductSession302SpecificInput","validationUrl","initApplePayPayment","transformPaymentProductJSON","LabelTemplateElement","attributeKey","mask","wildcardMask","Attribute","mustWriteReason","AccountOnFileDisplayHints","labelTemplate","labelTemplateElementByAttributeKey","_json","_labelTemplate","_labelTemplateElementByAttributeKey","l","labelTemplateElement","_parseJSON","AccountOnFile","attributes","attributeByKey","getMaskedValueByAttributeKey","undefined","MaskingUtil","applyMask","_attributes","_attributeByKey","attribute","PaymentProduct302SpecificData","PaymentProduct320SpecificData","PaymentProduct863SpecificData","integrationTypes","PaymentProductDisplayHints","BasicPaymentProduct","accountsOnFile","accountOnFileById","allowsRecurring","allowsTokenization","autoTokenized","allowsInstallments","maxAmount","minAmount","paymentMethod","mobileIntegrationLevel","usesRedirectionTo3rdParty","paymentProductGroup","_paymentProduct","_accountsOnFile","_accountOnFileById","accountOnFile","paymentProduct302SpecificData","paymentProduct863SpecificData","BasicPaymentProductGroup","MaskedString","formattedValue","cursorIndex","_fillBuffer","index","offset","buffer","tempMask","valuec","Number","newValue","oldValue","maskc","c","cursor","substring","getMaxLengthBasedOnMask","newLength","removeMask","valueIndex","inMask","ValidationRuleLuhn","errorMessageId","validate","luhnArr","sum","p","o","ValidationRuleExpirationDate","_validateDateFormat","expirationMonth","expirationYear","getMonth","getFullYear","nowWithDay","now","maxExpirationDate","ValidationRuleFixedList","allowedValues","ValidationRuleLength","maxLength","minLength","ValidationRuleRange","maxValue","minValue","isNaN","ValidationRuleRegularExpression","regularExpression","RegExp","ValidationRuleResidentIdNumber","weights","Math","pow","checkSum","csChar","ValidationRuleEmailAddress","ValidationRuleTermsAndConditions","ValidationRuleBoletoBancarioRequiredness","fiscalNumberLength","fiscalNumberValue","_sanitizeValue","toUpperCase","ValidationRuleIban","_isValidFormat","block","remainder","d","_toComputedString","validationRules","EmailAddress","TermsAndConditions","ExpirationDate","FixedList","Length","Luhn","Range","RegularExpression","BoletoBancarioRequiredness","Iban","ResidentIdNumber","ValidationRuleFactory","makeValidator","rule","DataRestrictions","isRequired","validationRuleByType","_validationRules","_validationRuleByType","validationRuleFactory","validationRule","ValueMappingElement","FormElement","valueMapping","_valueMapping","Tooltip","PaymentProductFieldDisplayHints","placeholderLabel","preferredInputType","alwaysShow","PaymentProductField","_errorCodes","getErrorCodes","isValid","hasError","maskedValue","validator","applyWildcardMask","PaymentProduct","basicPaymentProduct","paymentProductFields","paymentProductFieldById","_paymentProductFields","_paymentProductFieldById","paymentProductField","PaymentProductGroup","BasicPaymentProducts","basicPaymentProducts","basicPaymentProductById","basicPaymentProductByAccountOnFileId","_paymentProducts","_paymentProductById","_paymentProductByAccountOnFileId","aofs","j","jl","aof","_parseJson","BasicPaymentProductGroups","basicPaymentProductGroups","basicPaymentProductGroupById","_paymentProductGroups","_paymentProductGroupById","paymentProductGroups","BasicPaymentItems","products","groups","basicPaymentItems","basicPaymentItemById","_products","_groups","_basicPaymentItems","doRemove","groupId","groupReplaced","productMethod","basicPaymentItem","PaymentRequest","_fieldValues","_accountOnFile","_tokenize","getErrorMessageIds","allRequiredFieldsPresent","getValue","getAccountOnFile","setValue","paymentProductFieldId","setTokenize","tokenize","getTokenize","concat","getValues","getMaskedValue","getMaskedValues","maskedString","getUnmaskedValues","setPaymentProduct","setAccountOnFile","getClientSessionID","C2SPaymentProductContext","pki","forge","base64UrlEncode","asn1","str","util","encode64","JOSEEncryptor","encrypt","plainTextValues","kid","JOSEHeader","publickeyB64Encoded","publickeyB64Decoded","buffer2","publickeyObject2","protectedHeader","alg","encodededProtectedHeader","CEK","random","getBytesSync","CEKKEYLENGTH","encryptedContentEncryptionKey","encryptContentEncryptionKey","decode64","createBuffer","fromDer","publicKeyFromAsn1","encodedEncryptedContentEncryptionKey","macKey","encKey","initializationVector","IVLENGTH","encodededinitializationVector","cipherText","cipher","createCipher","start","iv","update","finish","output","bytes","encryptPayload","encodedCipherText","calculatedHmac","al","putBytes","hmacInput","hmac","create","sha512","digest","calculateHMAC","lengthInBits","putInt32","calculateAdditionalAuthenticatedDataLength","authenticationTag","Encryptor","publicKeyResponsePromise","paymentRequest","encryptedString","blob","nonce","bytesToHex","paymentValues","ownValues","getOwnPropertyNames","joseEncryptor","session","_paymentRequestPayload","_paymentRequest","_paymentProductGroup","_c2sCommunicator","_session","paymentRequestPayload","c2SPaymentProductContext","reason","getBasicPaymentItems","useGroups","getIinDetails","getPaymentRequest","getEncryptor","createApplePayPayment","transformPaymentProductGroupJSON","Session"],"mappings":"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","file":"connectsdk.noEncrypt.min.js","sourcesContent":["(function (global) {\n    var connectsdk = {}, modules = {};\n\n    /* SDK internal function */\n    connectsdk.define = function (module, dependencies, fn) {\n        if (dependencies && dependencies.length) {\n            for (var i = 0; i < dependencies.length; i++) {\n                dependencies[i] = modules[dependencies[i]];\n            }\n        }\n        modules[module] = fn.apply(this, dependencies || []);\n    };\n\n    // Export `connectsdk` based on environment.\n    global.connectsdk = connectsdk;\n\n    if (typeof exports !== 'undefined') {\n        exports.connectsdk = connectsdk;\n    }\n\n    connectsdk.define('connectsdk.core', [], function () {\n        return connectsdk;\n    });\n\n    // use require.js if available otherwise we use our own\n    if (typeof define === 'undefined') {\n        global.define = connectsdk.define;\n    }\n} (typeof window === 'undefined' ? this : window));\n\n// (re)define core\ndefine(\"connectsdk.core\", [], function () {\n    var global = typeof window === 'undefined' ? this : window;\n    var connectsdk = {};\n    global.connectsdk = connectsdk;\n    if (typeof exports !== 'undefined') {\n        exports.connectsdk = connectsdk;\n    }\n    return connectsdk;\n});\n","define('connectsdk.promise', ['connectsdk.core'], function(turing) {\n\tfunction PromiseModule(global) {\n\t\t/**\n\t\t * The Promise class.\n\t\t */\n\t\tfunction Promise(singleton) {\n\t\t\tvar self = this;\n\t\t\tthis.pending = [];\n\n\t\t\t/**\n\t\t\t * Resolves a promise.\n\t\t\t *\n\t\t\t * @param {Object} A value\n\t\t\t */\n\t\t\tthis.resolve = function(result) {\n\t\t\t\tself.complete('resolve', result);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Rejects a promise.\n\t\t\t *\n\t\t\t * @param {Object} A value\n\t\t\t */\n\t\t\tthis.reject = function(result) {\n\t\t\t\tself.complete('reject', result);\n\t\t\t};\n\n\t\t\tif (singleton) {\n\t\t\t\tthis.isSingleton = true;\n\t\t\t}\n\t\t}\n\n\t\tPromise.prototype = {\n\t\t\t/**\n\t\t\t * Adds a success and failure handler for completion of this Promise object.\n\t\t\t *\n\t\t\t * @param {Function} success The success handler\n\t\t\t * @param {Function} success The failure handler\n\t\t\t * @returns {Promise} `this`\n\t\t\t */\n\t\t\tthen : function(success, failure) {\n\t\t\t\tthis.pending.push({\n\t\t\t\t\tresolve : success,\n\t\t\t\t\treject : failure\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs through each pending 'thenable' based on type (resolve, reject).\n\t\t\t *\n\t\t\t * @param {String} type The thenable type\n\t\t\t * @param {Object} result A value\n\t\t\t */\n\t\t\tcomplete : function(type, result) {\n\t\t\t\twhile (this.pending[0]) {\n\t\t\t\t\tthis.pending.shift()[type](result);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tglobal.Promise = Promise;\n\t}\n\tPromiseModule(connectsdk);\n\n\treturn connectsdk.Promise;\n});\n","define('connectsdk.net', ['connectsdk.core'], function(connectsdk) {\n  var net = {};\n\n  /**\n    * Ajax request options:\n    *\n    *   - `method`: {String} HTTP method - GET, POST, etc.\n    *   - `success`: {Function} A callback to run when a request is successful\n    *   - `error`: {Function} A callback to run when the request fails\n    *   - `asynchronous`: {Boolean} Defaults to asynchronous\n    *   - `postBody`: {String} The HTTP POST body\n    *   - `contentType`: {String} The content type of the request, default is `application/x-www-form-urlencoded`\n    *\n    */\n\n  /**\n    * Removes leading and trailing whitespace.\n    * @param {String}\n    * @return {String}\n    */\n  var trim = ''.trim\n    ? function(s) { return s.trim(); }\n    : function(s) { return s.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); };\n\n  function xhr() {\n    if (typeof XMLHttpRequest !== 'undefined' && (window.location.protocol !== 'file:' || !window.ActiveXObject)) {\n      return new XMLHttpRequest();\n    } else {\n      try {\n        return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n      } catch(e) { }\n      try {\n        return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n      } catch(e) { }\n      try {\n        return new ActiveXObject('Msxml2.XMLHTTP');\n      } catch(e) { }\n    }\n    return false;\n  }\n\n  function successfulRequest(request) {\n    return (request.status >= 200 && request.status < 300) ||\n        request.status == 304 ||\n        (request.status == 0 && request.responseText);\n  }\n\n  /**\n    * Serialize JavaScript for HTTP requests.\n    *\n    * @param {Object} object An Array or Object\n    * @returns {String} A string suitable for a GET or POST request\n    */\n  net.serialize = function(object) {\n    if (!object) return;\n\n    if (typeof object === 'string') {\n      return object;\n    }\n\n    var results = [];\n    for (var key in object) {\n      results.push(encodeURIComponent(key) + '=' + encodeURIComponent(object[key]));\n    }\n    return results.join('&');\n  };\n\n  /**\n    * JSON.parse support can be inferred using `connectsdk.detect('JSON.parse')`.\n    */\n  //connectsdk.addDetectionTest('JSON.parse', function() {\n  //  return window.JSON && window.JSON.parse;\n  //});\n\n  /**\n    * Parses JSON represented as a string.\n    *\n    * @param {String} string The original string\n    * @returns {Object} A JavaScript object\n    */\n  net.parseJSON = function(string) {\n    if (typeof string !== 'string' || !string) return null;\n    string = trim(string);\n    /*\n    return connectsdk.detect('JSON.parse') ?\n      window.JSON.parse(string) :\n      (new Function('return ' + string))();\n    */\n    return window.JSON.parse(string);\n  };\n\n  /**\n    * Parses XML represented as a string.\n    *\n    * @param {String} string The original string\n    * @returns {Object} A JavaScript object\n    */\n  if (window.DOMParser) {\n    net.parseXML = function(text) {\n      return new DOMParser().parseFromString(text, 'text/xml');\n    };\n  } else {\n    net.parseXML = function(text) {\n      var xml = new ActiveXObject('Microsoft.XMLDOM');\n      xml.async = 'false';\n      xml.loadXML(text);\n      return xml;\n    };\n  }\n\n  /**\n    * Creates an Ajax request.  Returns an object that can be used\n    * to chain calls.  For example:\n    *\n    *      $t.post('/post-test')\n    *        .data({ key: 'value' })\n    *        .end(function(res) {\n    *          assert.equal('value', res.responseText);\n    *        });\n    *\n    *      $t.get('/get-test')\n    *        .set('Accept', 'text/html')\n    *        .end(function(res) {\n    *          assert.equal('Sample text', res.responseText);\n    *        });\n    *\n    * The available chained methods are:\n    *\n    * `set` -- set a HTTP header\n    * `data` -- the postBody\n    * `end` -- send the request over the network, and calls your callback with a `res` object\n    * `send` -- sends the request and calls `data`: `.send({ data: value }, function(res) { });`\n    *\n    * @param {String} The URL to call\n    * @param {Object} Optional settings\n    * @returns {Object} A chainable object for further configuration\n    */\n  function ajax(url, options) {\n    var request = xhr(),\n        promise,\n        then,\n        response = {},\n        chain;\n    if (connectsdk.Promise) {\n      promise = new connectsdk.Promise();\n    }\n\n    function respondToReadyState(readyState) {\n      if (request.readyState == 4) {\n        var contentType = request.mimeType || request.getResponseHeader('content-type') || '';\n\n        response.status = request.status;\n        response.responseText = request.responseText;\n        if (/json/.test(contentType)) {\n          response.responseJSON = net.parseJSON(request.responseText);\n        } else if (/xml/.test(contentType)) {\n          response.responseXML = net.parseXML(request.responseText);\n      \t}\n\n        response.success = successfulRequest(request);\n\n        if (options.callback) {\n          return options.callback(response, request);\n        }\n\n        if (response.success) {\n          if (options.success) options.success(response, request);\n          if (promise) promise.resolve(response, request);\n        } else {\n          if (options.error) options.error(response, request);\n          if (promise) promise.reject(response, request);\n        }\n      }\n    }\n\n    // Set the HTTP headers\n    function setHeaders() {\n      var defaults = {\n        'Accept': 'text/javascript, application/json, text/html, application/xml, text/xml, */*',\n        'Content-Type': 'application/json'\n      };\n\n      /**\n       * Merge headers with defaults.\n       */\n      for (var name in defaults) {\n        if (!options.headers.hasOwnProperty(name))\n          options.headers[name] = defaults[name];\n      }\n      for (var name in options.headers) {\n        request.setRequestHeader(name, options.headers[name]);\n      }\n\n    }\n\n    if (typeof options === 'undefined') options = {};\n\n    options.method = options.method ? options.method.toLowerCase() : 'get';\n    options.asynchronous = options.asynchronous || true;\n    options.postBody = options.postBody || '';\n    request.onreadystatechange = respondToReadyState;\n    request.open(options.method, url, options.asynchronous);\n\n    options.headers = options.headers || {};\n    if (options.contentType) {\n      options.headers['Content-Type'] = options.contentType;\n    }\n\n    if (typeof options.postBody !== 'string') {\n      // Serialize JavaScript\n      options.postBody = net.serialize(options.postBody);\n    }\n\n    // setHeaders();\n\n    function send() {\n      try {\n      \tsetHeaders();\n        request.send(options.postBody);\n      } catch (e) {\n        if (options.error) {\n          options.error();\n        }\n      }\n    }\n\n    chain = {\n      set: function(key, value) {\n        options.headers[key] = value;\n        return chain;\n      },\n\n      send: function(data, callback) {\n        options.postBody = net.serialize(data);\n        options.callback = callback;\n        send();\n        return chain;\n      },\n\n      end: function(callback) {\n        options.callback = callback;\n        send();\n        return chain;\n      },\n\n      data: function(data) {\n        options.postBody = net.serialize(data);\n        return chain;\n      },\n\n      then: function() {\n        chain.end();\n        if (promise) promise.then.apply(promise, arguments);\n        return chain;\n      }\n    };\n\n    return chain;\n  }\n\n  function JSONPCallback(url, success, failure) {\n    var self = this;\n    this.url = url;\n    this.methodName = '__connectsdk_jsonp_' + parseInt(new Date().getTime());\n    this.success = success;\n    this.failure = failure;\n\n    function runCallback(json) {\n      self.success(json);\n      self.teardown();\n    }\n\n    window[this.methodName] = runCallback;\n  }\n\n  JSONPCallback.prototype.run = function() {\n    this.scriptTag = document.createElement('script');\n    this.scriptTag.id = this.methodName;\n    this.scriptTag.src = this.url.replace('{callback}', this.methodName);\n    var that = this;\n    this.scriptTag.onerror = function() {\n    \tthat.failure();\n    };\n    document.body.appendChild(this.scriptTag);\n  };\n\n  JSONPCallback.prototype.teardown = function() {\n    window[this.methodName] = null;\n    try {\n    \tdelete window[this.methodName];\n    } catch (e) {}\n    if (this.scriptTag) {\n      document.body.removeChild(this.scriptTag);\n    }\n  };\n\n  /**\n   * An Ajax GET request.\n   *\n   *      $t.get('/get-test')\n   *        .set('Accept', 'text/html')\n   *        .end(function(res) {\n   *          assert.equal('Sample text', res.responseText);\n   *        });\n   *\n   * @param {String} url The URL to request\n   * @param {Object} options The Ajax request options\n   * @returns {Object} A chainable object for further configuration\n   */\n  net.get = function(url, options) {\n    if (typeof options === 'undefined') options = {};\n    options.method = 'get';\n    return ajax(url, options);\n  };\n\n  /**\n   * An Ajax POST request.\n   *\n   *      $t.post('/post-test')\n   *        .data({ key: 'value' })\n   *        .end(function(res) {\n   *          assert.equal('value', res.responseText);\n   *        });\n   *\n   * @param {String} url The URL to request\n   * @param {Object} options The Ajax request options (`postBody` may come in handy here)\n   * @returns {Object} An object for further chaining with promises\n   */\n  net.post = function(url, options) {\n    if (typeof options === 'undefined') options = {};\n    options.method = 'post';\n    return ajax(url, options);\n  };\n\n  /**\n   * A jsonp request.  Example:\n   *\n   *     var url = 'http://feeds.delicious.com/v1/json/';\n   *     url += 'alex_young/javascript?callback={callback}';\n   *\n   *     connectsdk.net.jsonp(url, {\n   *       success: function(json) {\n   *         console.log(json);\n   *       }\n   *     });\n   *\n   * @param {String} url The URL to request\n   */\n  net.jsonp = function(url, options) {\n    if (typeof options === 'undefined') options = {};\n    var callback = new JSONPCallback(url, options.success, options.failure);\n    callback.run();\n  };\n\n  /**\n    * The Ajax methods are mapped to the `connectsdk` object:\n    *\n    *      connectsdk.get();\n    *      connectsdk.post();\n    *      connectsdk.json();\n    *\n    */\n  connectsdk.get = net.get;\n  connectsdk.post = net.post;\n  connectsdk.jsonp = net.jsonp;\n\n  net.ajax = ajax;\n  connectsdk.net = net;\n  return net;\n});\n","define(\"connectsdk.Util\", [\"connectsdk.core\"], function (connectsdk) {\n\n\t// Create a singleton from Util so the same util function can be used in different modules\n\tvar Util = (function () {\n\t\tvar instance;\n\n\t\tfunction createInstance() {\n\t\t\t// private variables to use in the public methods\n\t\t\tvar applePayPaymentProductId = 302;\n\t\t\tvar googlePayPaymentProductId = 320;\n\t\t\tvar bancontactPaymentProductId = 3012;\n\n\t\t\treturn {\n\t\t\t\tapplePayPaymentProductId: applePayPaymentProductId,\n\t\t\t\tgooglePayPaymentProductId: googlePayPaymentProductId,\n\t\t\t\tbancontactPaymentProductId: bancontactPaymentProductId,\n\t\t\t\tgetMetadata: function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tscreenSize: window.innerWidth + \"x\" + window.innerHeight,\n\t\t\t\t\t\tplatformIdentifier: window.navigator.userAgent,\n\t\t\t\t\t\tsdkIdentifier: ((document.GC && document.GC.rppEnabledPage) ? 'rpp-' : '') + 'JavaScriptClientSDK/v${version}',\n\t\t\t\t\t\tsdkCreator: 'Ingenico'\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcollectDeviceInformation: function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t\"timezoneOffsetUtcMinutes\": new Date().getTimezoneOffset(),\n\t\t\t\t\t\t\"locale\": navigator.language,\n\t\t\t\t\t\t\"browserData\": {\n\t\t\t\t\t\t\t\"javaScriptEnabled\": true,\n\t\t\t\t\t\t\t\"javaEnabled\": navigator.javaEnabled(),\n\t\t\t\t\t\t\t\"colorDepth\": screen.colorDepth,\n\t\t\t\t\t\t\t\"screenHeight\": screen.height,\n\t\t\t\t\t\t\t\"screenWidth\": screen.width,\n\t\t\t\t\t\t\t\"innerHeight\": window.innerHeight,\n\t\t\t\t\t\t\t\"innerWidth\": window.innerWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tbase64Encode: function (data) {\n\t\t\t\t\tif (typeof data === \"object\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tdata = JSON.stringify(data);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow \"data must be either a String or a JSON object\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t\t\t\t\tvar o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', tmp_arr = [];\n\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\n\t\t\t\t\tdo {// pack three octets into four hexets\n\t\t\t\t\t\to1 = data.charCodeAt(i++);\n\t\t\t\t\t\to2 = data.charCodeAt(i++);\n\t\t\t\t\t\to3 = data.charCodeAt(i++);\n\n\t\t\t\t\t\tbits = o1 << 16 | o2 << 8 | o3;\n\n\t\t\t\t\t\th1 = bits >> 18 & 0x3f;\n\t\t\t\t\t\th2 = bits >> 12 & 0x3f;\n\t\t\t\t\t\th3 = bits >> 6 & 0x3f;\n\t\t\t\t\t\th4 = bits & 0x3f;\n\n\t\t\t\t\t\t// use hexets to index into b64, and append result to encoded string\n\t\t\t\t\t\ttmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n\t\t\t\t\t} while (i < data.length);\n\n\t\t\t\t\tenc = tmp_arr.join('');\n\n\t\t\t\t\tvar r = data.length % 3;\n\n\t\t\t\t\treturn (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n\t\t\t\t},\n\t\t\t\tfilterOutProductsThatAreNotSupportedInThisBrowser: function (json) {\n\t\t\t\t\tfor (var i = json.paymentProducts.length - 1, il = 0; i >= il; i--) {\n\t\t\t\t\t\tvar product = json.paymentProducts[i];\n\t\t\t\t\t\tif (product && this.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(product.id) > -1) {\n\t\t\t\t\t\t\tjson.paymentProducts.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpaymentProductsThatAreNotSupportedInThisBrowser: []\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tgetInstance: function () {\n\t\t\t\tif (!instance) {\n\t\t\t\t\tinstance = createInstance();\n\t\t\t\t}\n\t\t\t\treturn instance;\n\t\t\t}\n\t\t};\n\t})();\n\n\tconnectsdk.Util = Util;\n\treturn Util;\n});\n","define(\"connectsdk.GooglePay\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.Util\"], function (connectsdk, Promise, Util) {\n\n    var _util = Util.getInstance();\n    var _C2SCommunicator = null;\n    var _paymentProductSpecificInputs = null;\n    var _context = null;\n    var _gateway = null;\n    var _networks = null;\n    var paymentsClient = null;\n\n    // Only base is needed to trigger isReadyToPay\n    var _getBaseCardPaymentMethod = function () {\n        return {\n            type: 'CARD',\n            parameters: {\n                allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n                allowedCardNetworks: _networks\n            }\n        }\n    };\n\n    var _getTokenizationSpecification = function () {\n        return {\n            type: 'PAYMENT_GATEWAY',\n            parameters: {\n                'gateway': _gateway,\n                'gatewayMerchantId': _paymentProductSpecificInputs.googlePay.gatewayMerchantId\n            }\n        }\n    };\n\n    // To prefetch payment data we need base + tokenizationSpecification\n    var _getCardPaymentMethod = function () {\n        return Object.assign(\n            {},\n            _getBaseCardPaymentMethod(),\n            {\n                tokenizationSpecification: _getTokenizationSpecification()\n            }\n        );\n    };\n\n    var _getTransactionInfo = function () {\n        return {\n            \"totalPriceStatus\": \"NOT_CURRENTLY_KNOWN\",\n            \"currencyCode\": _context.currency\n        };\n    };\n\n    var _getMerchantInfo = function () {\n        return {\n            \"merchantName\": _paymentProductSpecificInputs.googlePay.merchantName\n        };\n    };\n\n    var _getGooglePaymentDataRequest = function () {\n        return {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            allowedPaymentMethods: [_getBaseCardPaymentMethod()]\n        };\n    };\n\n    var _getGooglePaymentDataRequestForPrefetch = function () {\n        // transactionInfo must be set but does not affect cache\n        return {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            allowedPaymentMethods: [_getCardPaymentMethod()],\n            transactionInfo: _getTransactionInfo(),\n            merchantInfo: _getMerchantInfo()\n        };\n    };\n\n    function _getGooglePaymentsClient() {\n        if (paymentsClient === null) {\n            var googlePayEnvironment = 'TEST';\n            if (_context.environment === 'PROD') {\n                googlePayEnvironment = 'PROD';\n            }\n            if (window.google) {\n                paymentsClient = new google.payments.api.PaymentsClient({environment: googlePayEnvironment});\n            } else {\n                console.error(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\n            }\n        }\n        return paymentsClient;\n    }\n\n    /**\n     * Prefetch payment data to improve performance\n     *\n     * @see {@link https://developers.google.com/pay/api/web/reference/client#prefetchPaymentData|prefetchPaymentData()}\n     */\n    function prefetchGooglePaymentData() {\n        var paymentDataRequest = _getGooglePaymentDataRequestForPrefetch();\n\n        var paymentsClient = _getGooglePaymentsClient();\n\n        // Prefetching is only effective when all information is provided\n        if (_paymentProductSpecificInputs.googlePay.gatewayMerchantId &&\n            _paymentProductSpecificInputs.googlePay.merchantName) {\n            paymentsClient.prefetchPaymentData(paymentDataRequest);\n        } else {\n            console.warn(\"Prefetching payment data was not triggered because of missing information. \" +\n                \"gatewayMerchantId: \" + _paymentProductSpecificInputs.googlePay.gatewayMerchantId +\n                \", merchantName: \" + _paymentProductSpecificInputs.googlePay.merchantName)\n        }\n    }\n\n    var GooglePay = function (C2SCommunicator) {\n        _C2SCommunicator = C2SCommunicator;\n        this.isGooglePayAvailable = function (context, paymentProductSpecificInputs, googlePayData) {\n            _context = context;\n            _paymentProductSpecificInputs = paymentProductSpecificInputs;\n            if (googlePayData && googlePayData.networks) {\n                _gateway = googlePayData.gateway;\n                _networks = googlePayData.networks;\n            } else {\n                _gateway = \"ingenicoglobalcollect\";\n                _networks = googlePayData;\n            }\n            var promise = new Promise();\n            // This setTimeout is essential to make the following (not fully asynchronous) code work in a promise way in all scenarios. (not needed in happy flow)\n            // The SDK has it's only PolyFill for the promise which is not feature complete.\n            setTimeout(function () {\n                if (_networks && _networks.length > 0) {\n                    var paymentsClient = _getGooglePaymentsClient();\n                    if (!paymentsClient) {\n                        _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\n                        promise.reject(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\n                    } else {\n                        paymentsClient.isReadyToPay(_getGooglePaymentDataRequest())\n                            .then(function (response) {\n                                promise.resolve(response);\n\n                                prefetchGooglePaymentData();\n                            })\n                            .catch(function () {\n                                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\n                                promise.reject('failed to run isReadyToPay() with Google Pay API');\n                            });\n                    }\n                } else {\n                    _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\n                    promise.reject('There are no product networks available');\n                }\n            }, 0);\n            return promise;\n        };\n\n        this.isMerchantIdProvided = function (paymentProductSpecificInputs) {\n            if (paymentProductSpecificInputs.googlePay.merchantId) {\n                return paymentProductSpecificInputs.googlePay.merchantId;\n            } else {\n                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\n                return false;\n            }\n        }\n    };\n    connectsdk.GooglePay = GooglePay;\n    return GooglePay;\n});\n","define(\"connectsdk.ApplePay\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.Util\"], function (connectsdk, Promise, Util) {\n\n    var _util = Util.getInstance();\n\n    var ApplePay = function () {\n        this.isApplePayAvailable = function () {\n            var applePayIsAvailable = window.ApplePaySession && window.ApplePaySession.canMakePayments();\n            if (!applePayIsAvailable) {\n                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.applePayPaymentProductId);\n            }\n            return applePayIsAvailable;\n        };\n        this.initPayment = function (context, C2SCommunicator) {\n            var promise = new Promise();\n            var _context = context;\n            var _C2SCommunicator = C2SCommunicator;\n\n            var _countryCode;\n            if (_context.acquirerCountry) {\n                _countryCode = _context.acquirerCountry;\n            } else {\n                _countryCode = _context.countryCode;\n            }\n\n            var payment = {\n                currencyCode: _context.currency,\n                countryCode: _countryCode,\n                total: {\n                    label: _context.displayName,\n                    amount: _context.totalAmount / 100,\n                },\n                supportedNetworks: _context.networks,\n                merchantCapabilities: ['supports3DS'],\n            };\n\n            var applePaySession = new ApplePaySession(1, payment);\n            applePaySession.begin();\n\n            applePaySession.onvalidatemerchant = function (event) {\n                _context.validationURL = event.validationURL;\n                _context.domainName = window.location.hostname;\n                _C2SCommunicator.createPaymentProductSession('302', _context).then(function (merchantSession) {\n                    try {\n                        applePaySession.completeMerchantValidation(JSON.parse(merchantSession.paymentProductSession302SpecificOutput.sessionObject));\n                    } catch {\n                        promise.reject({ message: 'Error completing merchant validation' });\n                        applePaySession.abort();\n                    }\n                }, function () {\n                    promise.reject({ message: 'Error completing merchant validation' });\n                    applePaySession.abort();\n                })\n            };\n\n            applePaySession.onpaymentauthorized = function (event) {\n                if (!event.payment.token) {\n                    status = ApplePaySession.STATUS_FAILURE;\n                    promise.reject({ message: 'Error payment authorization' });\n                    applePaySession.completePayment(status);\n                } else {\n                    status = ApplePaySession.STATUS_SUCCESS;\n                    promise.resolve({ message: 'Payment authorized', data: event.payment.token });\n                    applePaySession.completePayment(status);\n                }\n            };\n            return promise;\n        };\n    }\n\n    connectsdk.ApplePay = ApplePay;\n    return ApplePay;\n});","define(\"connectsdk.PublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar PublicKeyResponse = function(json) {\n\t\tthis.json = json;\n\t\tthis.keyId = json.keyId;\n\t\tthis.publicKey = json.publicKey;\n\t};\n\n\tconnectsdk.PublicKeyResponse = PublicKeyResponse;\n\treturn PublicKeyResponse;\n});","define(\"connectsdk.C2SCommunicatorConfiguration\", [\"connectsdk.core\"], function (connectsdk) {\n\n    var C2SCommunicatorConfiguration = function (sessionDetails, apiVersion) {\n        this.endpoints = {\n            PROD: {\n                EU: {\n                    API: \"https://ams1.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay1.secured-by-ingenico.com\"\n                },\n                US: {\n                    API: \"https://us.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay2.secured-by-ingenico.com\"\n                },\n                AMS: {\n                    API: \"https://ams2.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay3.secured-by-ingenico.com\"\n                },\n                PAR: {\n                    API: \"https://par.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay4.secured-by-ingenico.com\"\n                }\n            },\n            PREPROD: {\n                EU: {\n                    API: \"https://ams1.preprod.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay1.preprod.secured-by-ingenico.com\"\n                },\n                US: {\n                    API: \"https://us.preprod.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay2.preprod.secured-by-ingenico.com\"\n                },\n                AMS: {\n                    API: \"https://ams2.preprod.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay3.preprod.secured-by-ingenico.com\"\n                },\n                PAR: {\n                    API: \"https://par-preprod.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay4.preprod.secured-by-ingenico.com\"\n                }\n            },\n            SANDBOX: {\n                EU: {\n                    API: \"https://ams1.sandbox.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay1.sandbox.secured-by-ingenico.com\"\n                },\n                US: {\n                    API: \"https://us.sandbox.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay2.sandbox.secured-by-ingenico.com\"\n                },\n                AMS: {\n                    API: \"https://ams2.sandbox.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay3.sandbox.secured-by-ingenico.com\"\n                },\n                PAR: {\n                    API: \"https://par.sandbox.api-ingenico.com/client/v1\",\n                    ASSETS: \"https://assets.pay4.sandbox.secured-by-ingenico.com\"\n                }\n            }\n\n            // Non public settings. Only needed in GC development environment. Do not use\n            // these, they will not work outside GC.\n            ,\n            INTEGRATION: {\n                EU: {\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\n                },\n                US: {\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\n                },\n                AMS: {\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\n                },\n                PAR: {\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\n                }\n            },\n            DEV_NAMI: {\n                EU: {\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\n                },\n                US: {\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\n                },\n                AMS: {\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\n                },\n                PAR: {\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\n                }\n            },\n            DEV_ISC: {\n                EU: {\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\n                },\n                US: {\n                    API: \"//api.gc-ci-dev.isaac.local/client/v1\",\n                    ASSETS: \"//rpp.gc-ci-dev.isaac.local\"\n                },\n                AMS: {\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\n                },\n                PAR: {\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\n                }\n            }\n        };\n\n        // clientSessionID, assetBaseUrl and apiBaseUrl are deprecated but still may be used. Here we check for presense of new variables, if they dont exist... Use the old variables.\n        if (!sessionDetails.clientSessionId) {\n            sessionDetails.clientSessionId = sessionDetails.clientSessionID;\n        } else if (sessionDetails.clientSessionID) {\n            throw new Error(\"You cannot use both the clientSessionId and the clientSessionID at the same time, please use the clientSessionId only.\");\n        }\n        if (!sessionDetails.assetUrl) {\n            sessionDetails.assetUrl = sessionDetails.assetsBaseUrl\n        } else if (sessionDetails.assetsBaseUrl) {\n            throw new Error(\"You cannot use both the assetUrl and the assetsBaseUrl at the same time, please use the assetUrl only.\");\n        }\n        if (!sessionDetails.clientApiUrl) {\n            sessionDetails.clientApiUrl = sessionDetails.apiBaseUrl\n        } else if (sessionDetails.apiBaseUrl) {\n            throw new Error(\"You cannot use both the clientApiUrl and the apiBaseUrl at the same time, please use the clientApiUrl only.\");\n        }\n\n        this.clientSessionId = sessionDetails.clientSessionId;\n        this.customerId = sessionDetails.customerId;\n\n        // can be removed in a newer version of the SDK from this line\n        if (sessionDetails.region && !sessionDetails.clientApiUrl) {\n            // use regions; old stuff\n            console.warn(\"Using regions is deprecated, switch to clientApiUrl\");\n            this.clientApiUrl = this.endpoints[sessionDetails.environment][sessionDetails.region].API;\n            this.assetUrl = this.endpoints[sessionDetails.environment][sessionDetails.region].ASSETS;\n        } else {\n            // till this line; normal behaviour is below\n            // ignore the region here\n            this.clientApiUrl = sessionDetails.clientApiUrl;\n            this.assetUrl = sessionDetails.assetUrl;\n            if (!this.clientApiUrl) {\n                throw new Error(\"This version of the connectSDK requires an clientApiUrl, which you did not provide.\");\n            }\n            if (!this.assetUrl) {\n                throw new Error(\"This version of the connectSDK requires an assetUrl, which you did not provide.\");\n            }\n\n            // now that the clientApiUrl is set check when if the api version is set in the URL, its the correct version break if not.\n            if (this.clientApiUrl.indexOf(\"//\") === -1) {\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\n            }\n            var tester = this.clientApiUrl.split(\"/\"); // [0] = (http(s): || \"\") , [1] = \"\", [2] = \"host:port\", [3+] = path\n            if (tester[0] !== \"\" && tester[0].indexOf(\"http\") !== 0) {\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\n            }\n            // if you cannot provide an URL that starts with (http(s)::)// and want an error: please provide a PR :)\n\n            var path = tester.splice(3).join(\"/\"); // the path (if no path; path = \"\").\n            if (!path) { //If path == \"\"\n                this.clientApiUrl += \"/\" + apiVersion;\n            } else if (path === 'client') { //If path == client\n                this.clientApiUrl += \"/\" + apiVersion.split('/')[1];\n            } else if (path.indexOf(apiVersion) !== 0 || path.length !== apiVersion.length) {\n                throw new Error(\"This version of the connectSDK is only compatible with \" + apiVersion + \", you supplied: '\" + path + \"'\");\n            }\n        }\n    };\n    connectsdk.C2SCommunicatorConfiguration = C2SCommunicatorConfiguration;\n    return C2SCommunicatorConfiguration;\n});","define(\"connectsdk.IinDetailsResponse\", [\"connectsdk.core\", \"connectsdk.promise\"], function(connectsdk, Promise) {\n\n\tvar IinDetailsResponse = function () {\n\t\tthis.status = '';\n\t\tthis.countryCode = '';\n\t\tthis.paymentProductId = '';\n\t\tthis.isAllowedInContext = '';\n\t\tthis.coBrands = [];\n\t};\n\tconnectsdk.IinDetailsResponse = IinDetailsResponse;\n\treturn IinDetailsResponse;\n});","define(\"connectsdk.C2SCommunicator\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.net\", \"connectsdk.Util\", \"connectsdk.PublicKeyResponse\", \"connectsdk.IinDetailsResponse\", \"connectsdk.GooglePay\", \"connectsdk.ApplePay\"], function (connectsdk, Promise, Net, Util, PublicKeyResponse, IinDetailsResponse, GooglePay, ApplePay) {\n\tvar C2SCommunicator = function (c2SCommunicatorConfiguration, paymentProduct) {\n\t\tvar _c2SCommunicatorConfiguration = c2SCommunicatorConfiguration;\n\t\tvar _util = Util.getInstance();\n\t\tvar _cache = {};\n\t\tvar _providedPaymentProduct = paymentProduct;\n\t\tvar that = this;\n\t\tvar _GooglePay = new GooglePay(that);\n\t\tvar _ApplePay = new ApplePay(that);\n\n\t\tvar _mapType = {\n\t\t\t\"expirydate\": \"tel\",\n\t\t\t\"string\": \"text\",\n\t\t\t\"numericstring\": \"tel\",\n\t\t\t\"integer\": \"number\",\n\t\t\t\"expirationDate\": \"tel\"\n\t\t};\n\n\t\tvar formatUrl = function (url) {\n\t\t\treturn (url && endsWith(url, '/')) ? url : url + '/';\n\t\t};\n\n\t\tvar formatImageUrl = function (url, imageUrl) {\n\t\t\turl = formatUrl(url);\n\t\t\t// _cleanJSON can be called multiple times with the same data (which is cached between calls).\n\t\t\t// Don't prepend the url after the first time.\n\t\t\tif (startsWith(imageUrl, url)) {\n\t\t\t\treturn imageUrl;\n\t\t\t}\n\t\t\treturn url + imageUrl;\n\t\t};\n\n\t\tvar startsWith = function (string, prefix) {\n\t\t\treturn string.indexOf(prefix) === 0;\n\t\t};\n\n\t\tvar endsWith = function (string, suffix) {\n\t\t\treturn string.indexOf(suffix, string.length - suffix.length) !== -1;\n\t\t};\n\n\t\tvar _cleanJSON = function (json, url) {\n\t\t\tfor (var i = 0, il = json.fields.length; i < il; i++) {\n\t\t\t\tvar field = json.fields[i];\n\t\t\t\tfield.type = (field.displayHints && field.displayHints.obfuscate) ? \"password\" : _mapType[field.type];\n\n\t\t\t\t// helper code for templating tools like Handlebars\n\t\t\t\tfor (validatorKey in field.dataRestrictions.validators) {\n\t\t\t\t\tfield.validators = field.validators || [];\n\t\t\t\t\tfield.validators.push(validatorKey);\n\t\t\t\t}\n\t\t\t\tif (field.displayHints && field.displayHints.formElement && field.displayHints.formElement.type === 'list') {\n\t\t\t\t\tfield.displayHints.formElement.list = true;\n\t\t\t\t}\n\n\t\t\t\t// full image paths\n\t\t\t\tif (field.displayHints && field.displayHints.tooltip && field.displayHints.tooltip.image) {\n\t\t\t\t\tfield.displayHints.tooltip.image = formatImageUrl(url, field.displayHints.tooltip.image);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The server orders in a different way, so we apply the sortorder\n\t\t\tjson.fields.sort(function (a, b) {\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\t// set full image path\n\t\t\tjson.displayHints.logo = formatImageUrl(url, json.displayHints.logo);\n\t\t\treturn json;\n\t\t};\n\n\t\tvar _extendLogoUrl = function (json, url, postfix) {\n\t\t\tfor (var i = 0, il = json[\"paymentProduct\" + postfix].length; i < il; i++) {\n\t\t\t\tvar product = json[\"paymentProduct\" + postfix][i];\n\t\t\t\tproduct.displayHints.logo = formatImageUrl(url, product.displayHints.logo);\n\t\t\t}\n\t\t\tjson[\"paymentProduct\" + postfix].sort(function (a, b) {\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\treturn json;\n\t\t};\n\n\t\tvar _isPaymentProductInList = function (list, paymentProductId) {\n\t\t\tfor (var i = list.length - 1, il = 0; i >= il; i--) {\n\t\t\t\tvar product = list[i];\n\t\t\t\tif (product && (product.id === paymentProductId)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tvar _getGooglePayData = function (list, paymentProductId) {\n\t\t\tfor (var i = list.length - 1, il = 0; i >= il; i--) {\n\t\t\t\tvar product = list[i];\n\t\t\t\tif (product && (product.id === paymentProductId)) {\n\t\t\t\t\treturn product.paymentProduct320SpecificData;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tvar metadata = _util.getMetadata();\n\n\t\tvar resolveGetBasicPaymentProducts = function(json, promise, cacheKey) {\n\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\n\t\t\t_cache[cacheKey] = json;\n\t\t\tif (json.paymentProducts.length === 0) {\n\t\t\t\tpromise.reject('No payment products available');\n\t\t\t} else {\n\t\t\t\tpromise.resolve(json);\n\t\t\t}\n\t\t}\n\n\t\tthis.getBasicPaymentProducts = function (context, paymentProductSpecificInputs) {\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\n\t\t\tpaymentProductSpecificInputs = paymentProductSpecificInputs || {};\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheBust = new Date().getTime()\n\t\t\t\t, cacheKey = \"getPaymentProducts-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\n\t\t\t\t\t+ cacheKeyLocale + context.isRecurring + \"_\" + context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tvar urlParameterLocale = context.locale ? \"&locale=\" + context.locale : '';\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\n\t\t\t\t\t+ \"/products\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\n\t\t\t\t\t+ \"&hide=fields\" + urlParameterLocale + \"&cacheBust=\" + cacheBust)\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"s\");\n\t\t\t\t\t\t\tif (_isPaymentProductInList(json.paymentProducts, _util.applePayPaymentProductId)) {\n\t\t\t\t\t\t\t\t_ApplePay.isApplePayAvailable()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (_isPaymentProductInList(json.paymentProducts, _util.googlePayPaymentProductId)\n\t\t\t\t\t\t\t\t&& _GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\n\t\t\t\t\t\t\t\tvar googlePayData = _getGooglePayData(json.paymentProducts, _util.googlePayPaymentProductId);\n\t\t\t\t\t\t\t\t_GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, googlePayData).then(function () {\n\t\t\t\t\t\t\t\t\tresolveGetBasicPaymentProducts(json, promise, cacheKey);\n\t\t\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t\t\tresolveGetBasicPaymentProducts(json, promise, cacheKey);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresolveGetBasicPaymentProducts(json, promise, cacheKey);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject('failed to retrieve Basic Payment Products', res);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getBasicPaymentProductGroups = function (context) {\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheBust = new Date().getTime()\n\t\t\t\t, cacheKey = \"getPaymentProductGroups-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\n\t\t\t\t\t+ cacheKeyLocale + context.isRecurring + \"_\" + context.currency;\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tvar urlParameterLocale = context.locale ? \"&locale=\" + context.locale : '';\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\n\t\t\t\t\t+ \"/productgroups\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\n\t\t\t\t\t+ \"&hide=fields\" + urlParameterLocale + \"&cacheBust=\" + cacheBust)\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"Groups\");\n\t\t\t\t\t\t\t_cache[cacheKey] = json;\n\t\t\t\t\t\t\tpromise.resolve(json);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(res.responseJSON);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProduct = function (paymentProductId, context, paymentProductSpecificInputs) {\n\t\t\tpaymentProductSpecificInputs = paymentProductSpecificInputs || {};\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheBust = new Date().getTime()\n\t\t\t\t, cacheKey = \"getPaymentProduct-\" + paymentProductId + \"_\" + context.totalAmount + \"_\"\n\t\t\t\t\t+ context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\"\n\t\t\t\t\t+ context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\n\t\t\tif (_util.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(paymentProductId) > -1) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.reject({\n\t\t\t\t\t\t\"errorId\": \"48b78d2d-1b35-4f8b-92cb-57cc2638e901\",\n\t\t\t\t\t\t\"errors\": [{\n\t\t\t\t\t\t\t\"code\": \"1007\",\n\t\t\t\t\t\t\t\"propertyName\": \"productId\",\n\t\t\t\t\t\t\t\"message\": \"UNKNOWN_PRODUCT_ID\",\n\t\t\t\t\t\t\t\"httpStatusCode\": 404\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductId) {\n\t\t\t\t\tif (!_cache[cacheKey]) {\n\t\t\t\t\t\t_cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\n\t\t\t\t\t}\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t\t}, 0);\n\t\t\t\t} else if (_cache[cacheKey]) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t\t}, 0);\n\t\t\t\t} else {\n\t\t\t\t\tvar urlParameterlocale = context.locale ? \"&locale=\" + context.locale : '';\n\t\t\t\t\tvar getPaymentProductUrl = formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\n\t\t\t\t\t\t+ \"/products/\" + paymentProductId + \"?countryCode=\" + context.countryCode\n\t\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\n\t\t\t\t\t\t+ \"&currencyCode=\" + context.currency + urlParameterlocale;\n\n\t\t\t\t\tif ((paymentProductId === _util.bancontactPaymentProductId) &&\n\t\t\t\t\t\tpaymentProductSpecificInputs &&\n\t\t\t\t\t\tpaymentProductSpecificInputs.bancontact &&\n\t\t\t\t\t\tpaymentProductSpecificInputs.bancontact.forceBasicFlow) {\n\t\t\t\t\t\t// Add query parameter to products call to force basic flow for bancontact\n\t\t\t\t\t\tgetPaymentProductUrl += \"&forceBasicFlow=\" + paymentProductSpecificInputs.bancontact.forceBasicFlow\n\t\t\t\t\t}\n\n\t\t\t\t\tgetPaymentProductUrl += \"&cacheBust=\" + cacheBust;\n\n\t\t\t\t\tNet.get(getPaymentProductUrl)\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetUrl);\n\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\n\t\t\t\t\t\t\t\tif (paymentProductId === _util.applePayPaymentProductId && !_ApplePay.isApplePayAvailable()) {\n\t\t\t\t\t\t\t\t\t// ApplePay is available in the payment context but the client does not support it.\n\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\n\t\t\t\t\t\t\t\t} else if (paymentProductId === _util.googlePayPaymentProductId\n\t\t\t\t\t\t\t\t\t&& _GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\n\t\t\t\t\t\t\t\t\tvar networks = cleanedJSON.paymentProduct320SpecificData.networks;\n\t\t\t\t\t\t\t\t\t_GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, networks).then(function (isGooglePayAvailable) {\n\t\t\t\t\t\t\t\t\t\tif (isGooglePayAvailable) {\n\t\t\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t//_isGooglePayAvailable returned false so google pay is not available, so reject getPaymentProduct\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t\t\t\t//_isGooglePayAvailable rejected so not available\n\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpromise.reject('failed to retrieve Payment Product', res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, context) {\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheBust = new Date().getTime()\n\t\t\t\t, cacheKey = \"getPaymentProductGroup-\" + paymentProductGroupId + \"_\" + context.totalAmount + \"_\"\n\t\t\t\t\t+ context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\"\n\t\t\t\t\t+ context.currency;\n\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductGroupId) {\n\t\t\t\tif (_cache[cacheKey]) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t\t}, 0);\n\t\t\t\t} else {\n\t\t\t\t\t_cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t} else if (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tvar urlParameterlocale = context.locale ? \"&locale=\" + context.locale : '';\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\n\t\t\t\t\t+ \"/productgroups/\" + paymentProductGroupId + \"?countryCode=\" + context.countryCode\n\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\n\t\t\t\t\t+ \"&currencyCode=\" + context.currency + urlParameterlocale + \"&cacheBust=\" + cacheBust)\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetUrl);\n\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\n\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(res.responseJSON);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductIdByCreditCardNumber = function (partialCreditCardNumber, context) {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, iinDetailsResponse = new IinDetailsResponse()\n\t\t\t\t, cacheKey = \"getPaymentProductIdByCreditCardNumber-\" + partialCreditCardNumber;\n\n\t\t\tvar that = this;\n\t\t\tthis.context = context;\n\t\t\tif (_cache[cacheKey]) {// cache is based on digit 1-6\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tvar isEnoughDigits = function (partialCreditCardNumber) {\n\t\t\t\t\treturn partialCreditCardNumber.length >= 6;\n\t\t\t\t};\n\t\t\t\tif (isEnoughDigits(partialCreditCardNumber)) {\n\t\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/services/getIINdetails\")\n\t\t\t\t\t\t.data(JSON.stringify(this.convertContextToIinDetailsContext(partialCreditCardNumber, this.context)))\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t\tiinDetailsResponse.json = res.responseJSON;\n\t\t\t\t\t\t\t\tiinDetailsResponse.countryCode = res.responseJSON.countryCode;\n\t\t\t\t\t\t\t\tiinDetailsResponse.paymentProductId = res.responseJSON.paymentProductId;\n\t\t\t\t\t\t\t\tiinDetailsResponse.isAllowedInContext = res.responseJSON.isAllowedInContext;\n\t\t\t\t\t\t\t\tiinDetailsResponse.coBrands = res.responseJSON.coBrands;\n\t\t\t\t\t\t\t\t// check if this card is supported\n\t\t\t\t\t\t\t\t// if isAllowedInContext is available in the response set status and resolve\n\t\t\t\t\t\t\t\tif (res.responseJSON.hasOwnProperty('isAllowedInContext')) {\n\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\n\t\t\t\t\t\t\t\t\tif (iinDetailsResponse.isAllowedInContext === false) {\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"EXISTING_BUT_NOT_ALLOWED\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\n\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//if isAllowedInContext is not available get the payment product again to determine status and resolve\n\t\t\t\t\t\t\t\t\tthat.getPaymentProduct(iinDetailsResponse.paymentProductId, that.context).then(function (paymentProduct) {\n\t\t\t\t\t\t\t\t\t\tif (paymentProduct) {\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNSUPPORTED\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\n\t\t\t\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\n\t\t\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\n\t\t\t\t\t\t\t\tiinDetailsResponse.json = res.responseJSON;\n\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tiinDetailsResponse.status = \"NOT_ENOUGH_DIGITS\";\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.convertContextToIinDetailsContext = function (partialCreditCardNumber, context) {\n\t\t\tvar payload = {\n\t\t\t\t\"bin\": partialCreditCardNumber,\n\t\t\t\t\"paymentContext\": {\n\t\t\t\t\t\"countryCode\": context.countryCode,\n\t\t\t\t\t\"isRecurring\": context.isRecurring,\n\t\t\t\t\t\"amountOfMoney\": {\n\t\t\t\t\t\t\"amount\": context.totalAmount,\n\t\t\t\t\t\t\"currencyCode\": context.currency\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Account on file id is needed only in case when the merchant\n\t\t\t// uses multiple payment platforms at the same time.\n\t\t\tif (typeof context.accountOnFileId !== 'undefined') {\n\t\t\t\tpayload.accountOnFileId = context.accountOnFileId;\n\t\t\t}\n\n\t\t\treturn payload;\n\t\t};\n\n\t\tthis.getPublicKey = function () {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheKey = \"publicKey\";\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/crypto/publickey\")\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\tvar publicKeyResponse = new PublicKeyResponse(res.responseJSON);\n\t\t\t\t\t\t\t_cache[cacheKey] = publicKeyResponse;\n\t\t\t\t\t\t\tpromise.resolve(publicKeyResponse);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(\"unable to get public key\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, context) {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheKey = \"paymentProductNetworks-\" + paymentProductId + \"_\" + context.countryCode + \"_\" + context.currency + \"_\"\n\t\t\t\t\t+ context.totalAmount + \"_\" + context.isRecurring;\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\n\t\t\t\t\t+ \"/products/\" + paymentProductId + \"/networks\" + \"?countryCode=\" + context.countryCode + \"&currencyCode=\" + context.currency\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&isRecurring=\" + context.isRecurring)\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(res.responseJSON);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheKey = \"getPaymentProductDirectory-\" + paymentProductId + \"_\" + currencyCode + \"_\" + countryCode;\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/directory?countryCode=\" + countryCode + \"&currencyCode=\" + currencyCode)\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(\"unable to retrieve payment product directory\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.convertAmount = function (amount, source, target) {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheKey = \"convertAmount-\" + amount + \"_\" + source + \"_\" + target;\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/services/convert/amount?source=\" + source + \"&target=\" + target + \"&amount=\" + amount)\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(\"unable to convert amount\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\n\t\t\tvar promise = new Promise();\n\n\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/payments/\" + paymentId + \"/thirdpartystatus\")\n\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t.end(function (res) {\n\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\tpromise.resolve(res.responseJSON);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpromise.reject(\"unable to retrieve third party status\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getCustomerDetails = function (paymentProductId, context) {\n\t\t\tvar promise = new Promise();\n\t\t\tvar cacheKey = \"getCustomerDetails_\" + context.countryCode;\n\t\t\tcacheKey = constructCacheKeyFromKeyValues(cacheKey, context.values);\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/customerDetails\")\n\t\t\t\t\t.data(JSON.stringify(context))\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(res.responseJSON);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.createPaymentProductSession = function (paymentProductId, context) {\n\t\t\tvar promise = new Promise();\n\t\t\tvar cacheKey = \"createPaymentProductSession_\" + context.validationURL + \"_\" + context.domainName + \"_\" + context.displayName;\n\t\t\tvar requestParameters = {\n\t\t\t\t\"paymentProductSession302SpecificInput\": {\n\t\t\t\t\t\"validationUrl\": context.validationURL,\n\t\t\t\t\t\"domainName\": context.domainName,\n\t\t\t\t\t\"displayName\": context.displayName\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/sessions\")\n\t\t\t\t\t.data(JSON.stringify(requestParameters))\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(res.responseJSON);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.initApplePayPayment = function (context, paymentProductSpecificInputs, networks) {\n\t\t\tvar promise = new Promise();\n\t\t\tvar _context = context;\n\t\t\t_context.displayName = paymentProductSpecificInputs.merchantName;\n\t\t\tif (paymentProductSpecificInputs.acquirerCountry) {\n\t\t\t\t_context.acquirerCountry = paymentProductSpecificInputs.acquirerCountry;\n\t\t\t}\n\t\t\t_context.networks = networks;\n\n\t\t\t_ApplePay.initPayment(_context, this).then(function (res) {\n\t\t\t\tpromise.resolve(res);\n\t\t\t}, function (res) {\n\t\t\t\tpromise.reject(res);\n\t\t\t});\n\t\t\treturn promise;\n\t\t}\n\n\n\t\tvar constructCacheKeyFromKeyValues = function (prefix, values) {\n\t\t\tvar cacheKey = prefix;\n\t\t\tfor (var key in values) {\n\t\t\t\tif (values.hasOwnProperty(key)) {\n\t\t\t\t\tcacheKey += \"_\" + values[key].key + \"_\" + values[key].value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cacheKey;\n\t\t};\n\n\t\t/* Transforms the JSON representation of a payment product (group) so it matches the result of getPaymentProduct and getPaymentProductGroup. */\n\t\tthis.transformPaymentProductJSON = function (json) {\n\t\t\treturn _cleanJSON(json, _c2SCommunicatorConfiguration.assetUrl)\n\t\t};\n\t};\n\n\tconnectsdk.C2SCommunicator = C2SCommunicator;\n\treturn C2SCommunicator;\n});\n","define(\"connectsdk.LabelTemplateElement\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar LabelTemplateElement = function (json) {\n\t\tthis.json = json;\n\t\tthis.attributeKey = json.attributeKey;\n\t\tthis.mask = json.mask;\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\n\t};\n\n\tconnectsdk.LabelTemplateElement = LabelTemplateElement;\n\treturn LabelTemplateElement;\n});","define(\"connectsdk.Attribute\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar Attribute = function (json) {\n\t\tthis.json = json;\n\t\tthis.key = json.key;\n\t\tthis.value = json.value;\n\t\tthis.status = json.status;\n\t\tthis.mustWriteReason = json.mustWriteReason;\n\t};\n\n\tconnectsdk.Attribute = Attribute;\n\treturn Attribute;\n});","define(\"connectsdk.AccountOnFileDisplayHints\", [\"connectsdk.core\", \"connectsdk.LabelTemplateElement\"], function(connectsdk, LabelTemplateElement) {\n\n\tvar _parseJSON = function (_json, _labelTemplate, _labelTemplateElementByAttributeKey) {\n\t\tif (_json.labelTemplate) {\n\t\t\tfor (var i = 0, l = _json.labelTemplate.length; i < l; i++) {\n\t\t\t\tvar labelTemplateElement = new LabelTemplateElement(_json.labelTemplate[i]);\n\t\t\t\t_labelTemplate.push(labelTemplateElement);\n\t\t\t\t_labelTemplateElementByAttributeKey[labelTemplateElement.attributeKey] = labelTemplateElement;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar AccountOnFileDisplayHints = function (json) {\n\t\tthis.json = json;\n\t\tthis.labelTemplate = [];\n\t\tthis.labelTemplateElementByAttributeKey = {};\n\n\t\t_parseJSON(json, this.labelTemplate, this.labelTemplateElementByAttributeKey);\n\t};\n\n\tconnectsdk.AccountOnFileDisplayHints = AccountOnFileDisplayHints;\n\treturn AccountOnFileDisplayHints;\n});","define(\"connectsdk.AccountOnFile\", [\"connectsdk.core\" ,\"connectsdk.AccountOnFileDisplayHints\", \"connectsdk.Attribute\"], function(connectsdk, AccountOnFileDisplayHints, Attribute) {\n\n\tvar _parseJSON = function (_json, _attributes, _attributeByKey) {\n\t\tif (_json.attributes) {\n\t\t\tfor (var i = 0, l = _json.attributes.length; i < l; i++) {\n\t\t\t\tvar attribute = new Attribute(_json.attributes[i]);\n\t\t\t\t_attributes.push(attribute);\n\t\t\t\t_attributeByKey[attribute.key] = attribute;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar AccountOnFile = function (json) {\n\t\tvar that = this;\n\t\tthis.json = json;\n\t\tthis.attributes = [];\n\t\tthis.attributeByKey = {};\n\t\tthis.displayHints = new AccountOnFileDisplayHints(json.displayHints);\n\t\tthis.id = json.id;\n\t\tthis.paymentProductId = json.paymentProductId;\n\n\t\tthis.getMaskedValueByAttributeKey = function(attributeKey) {\n\t\t\tvar value = this.attributeByKey[attributeKey].value;\n\t\t\tvar wildcardMask;\n\t\t\ttry {\n\t\t\t\twildcardMask = this.displayHints.labelTemplateElementByAttributeKey[attributeKey].wildcardMask;\n\t\t\t} catch (e) {}\n\t\t\tif (value !== undefined && wildcardMask !== undefined) {\n\t\t\t\tvar maskingUtil = new connectsdk.MaskingUtil();\n\t\t\t\treturn maskingUtil.applyMask(wildcardMask, value);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\n\t\t_parseJSON(json, this.attributes, this.attributeByKey);\n\t};\n\n\tconnectsdk.AccountOnFile = AccountOnFile;\n\treturn AccountOnFile;\n});","define(\"connectsdk.PaymentProduct302SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar PaymentProduct302SpecificData = function (json) {\n\t\tthis.json = json;\n\t\tthis.networks = json.networks;\n\t};\n\n\tconnectsdk.PaymentProduct302SpecificData = PaymentProduct302SpecificData;\n\treturn PaymentProduct302SpecificData;\n});","define(\"connectsdk.PaymentProduct320SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar PaymentProduct320SpecificData = function (json) {\n\t\tthis.json = json;\n\t\tthis.gateway = json.gateway;\n\t\tthis.networks = json.networks;\n\t};\n\n\tconnectsdk.PaymentProduct320SpecificData = PaymentProduct320SpecificData;\n\treturn PaymentProduct320SpecificData;\n});","define(\"connectsdk.PaymentProduct863SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar PaymentProduct863SpecificData = function (json) {\n\t\tthis.json = json;\n\t\tthis.integrationTypes = json.integrationTypes;\n\t};\n\n\tconnectsdk.PaymentProduct863SpecificData = PaymentProduct863SpecificData;\n\treturn PaymentProduct863SpecificData;\n});","define(\"connectsdk.PaymentProductDisplayHints\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar PaymentProductDisplayHints = function (json) {\n\t\tthis.json = json;\n\t\tthis.displayOrder = json.displayOrder;\n\t\tthis.label = json.label;\n\t\tthis.logo = json.logo;\n\t};\n\n\tconnectsdk.PaymentProductDisplayHints = PaymentProductDisplayHints;\n\treturn PaymentProductDisplayHints;\n});","define(\"connectsdk.BasicPaymentProduct\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\", \"connectsdk.PaymentProduct302SpecificData\", \"connectsdk.PaymentProduct320SpecificData\", \"connectsdk.PaymentProduct863SpecificData\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints, PaymentProduct302SpecificData, PaymentProduct320SpecificData, PaymentProduct863SpecificData) {\n\n\tvar _parseJSON = function (_json, _paymentProduct, _accountsOnFile, _accountOnFileById) {\n\t\tif (_json.accountsOnFile) {\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\n\t\t\t\t_accountsOnFile.push(accountOnFile);\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\n\t\t\t}\n\t\t}\n\t\tif (_json.paymentProduct302SpecificData) {\n\t\t\t_paymentProduct.paymentProduct302SpecificData = new PaymentProduct302SpecificData(_json.paymentProduct302SpecificData);\n\t\t}\n\t\tif (_json.paymentProduct320SpecificData) {\n\t\t\t_paymentProduct.paymentProduct320SpecificData = new PaymentProduct320SpecificData(_json.paymentProduct320SpecificData);\n\t\t}\n\t\tif (_json.paymentProduct863SpecificData) {\n\t\t\t_paymentProduct.paymentProduct863SpecificData = new PaymentProduct863SpecificData(_json.paymentProduct863SpecificData);\n\t\t}\n\t};\n\n\tvar BasicPaymentProduct = function (json) {\n\t\tthis.json = json;\n\t\tthis.json.type = \"product\";\n\t\tthis.accountsOnFile = [];\n\t\tthis.accountOnFileById = {};\n\t\tthis.allowsRecurring = json.allowsRecurring;\n\t\tthis.allowsTokenization = json.allowsTokenization;\n\t\tthis.autoTokenized = json.autoTokenized;\n\t\tthis.allowsInstallments = json.allowsInstallments;\n\t\tthis.acquirerCountry = json.acquirerCountry;\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\n\t\tthis.id = json.id;\n\t\tthis.maxAmount = json.maxAmount;\n\t\tthis.minAmount = json.minAmount;\n\t\tthis.paymentMethod = json.paymentMethod;\n\t\tthis.mobileIntegrationLevel = json.mobileIntegrationLevel;\n\t\tthis.usesRedirectionTo3rdParty = json.usesRedirectionTo3rdParty;\n\t\tthis.paymentProductGroup = json.paymentProductGroup;\n\n\t\t_parseJSON(json, this, this.accountsOnFile, this.accountOnFileById);\n\t};\n\n\tconnectsdk.BasicPaymentProduct = BasicPaymentProduct;\n\treturn BasicPaymentProduct;\n});","define(\"connectsdk.BasicPaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\n\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\n\t\tif (_json.accountsOnFile) {\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\n\t\t\t\t_accountsOnFile.push(accountOnFile);\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar BasicPaymentProductGroup = function (json) {\n\t\tthis.json = json;\n\t\tthis.json.type = \"group\";\n\t\tthis.id = json.id;\n\t\tthis.acquirerCountry = json.acquirerCountry;\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\n\t\tthis.accountsOnFile = [];\n\t\tthis.accountOnFileById = {};\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\n\t};\n\n\tconnectsdk.BasicPaymentProductGroup = BasicPaymentProductGroup;\n\treturn BasicPaymentProductGroup;\n});","define(\"connectsdk.MaskedString\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar MaskedString = function(formattedValue, cursorIndex) {\n\n\t\tthis.formattedValue = formattedValue;\n\t\tthis.cursorIndex = cursorIndex;\n\t};\n\n\tconnectsdk.MaskedString = MaskedString;\n\treturn MaskedString;\n});","define(\"connectsdk.MaskingUtil\", [\"connectsdk.core\", \"connectsdk.MaskedString\"], function(connectsdk, MaskedString) {\n\n\tvar _fillBuffer = function(index, offset, buffer, tempMask, valuec) {\n\t\tif (index+offset < valuec.length && index < tempMask.length) {\n\t\t\tif ((tempMask[index] === \"9\" && Number(valuec[index+offset]) > -1 && valuec[index+offset] !== \" \") || tempMask[index] === \"*\") {\n\t\t\t\tbuffer.push(valuec[index+offset]);\n\t\t\t} else {\n\t\t\t\tif (valuec[index+offset] === tempMask[index]) {\n\t\t\t\t\tbuffer.push(valuec[index+offset]);\n\t\t\t\t} else if (tempMask[index] !== \"9\" && tempMask[index] !== \"*\") {\n\t\t\t\t\tbuffer.push(tempMask[index]);\n\t\t\t\t\toffset--;\n\t\t\t\t} else {\n\t\t\t\t\t// offset++;\n\t\t\t\t\tvaluec.splice(index+offset, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_fillBuffer(index+1, offset, buffer, tempMask, valuec);\n\t\t}\n\t};\n\n\tvar MaskingUtil = function () {\n\t\tthis.applyMask = function (mask, newValue, oldValue) {\n\t\t\tvar buffer = [],\n\t\t\t\t\tvaluec = newValue.split(\"\");\n\t\t\tif (mask) {\n\t\t\t\tvar maskc = mask.split(\"\"),\n\t\t\t\t\t\ttempMask = [];\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\n\t\t\t\t\tvar c = maskc[i];\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttempMask.push(c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// tempmask now contains the replaceable chars and the non-replaceable masks at the correct index\n\t\t\t\t_fillBuffer(0, 0, buffer, tempMask, valuec);\n\t\t\t} else {\n\t\t\t\t// send back as is\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\n\t\t\t\t\tvar c = valuec[i];\n\t\t\t\t\tbuffer.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnewValue = buffer.join(\"\");\n\t\t\tvar cursor = 1;\n\t\t\t// calculate the cursor index\n\t\t\tif (oldValue) {\n\t\t\t\tvar tester = oldValue.split(\"\");\n\t\t\t\tfor (var i = 0, il = buffer.length; i < il; i++) {\n\t\t\t\t\tif (buffer[i] !== tester[i]) {\n\t\t\t\t\t\tcursor = i+1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newValue.substring(0, newValue.length -1) === oldValue) {\n\t\t\t\tcursor = newValue.length + 1;\n\t\t\t}\n\t\t\treturn new MaskedString(newValue, cursor);\n\t\t};\n\n\t\tthis.getMaxLengthBasedOnMask = function (mask) {\n\t\t\tif (mask) {\n\t\t\t\tvar maskc = mask.split(\"\"),\n\t\t\t\t\t\tnewLength = -1;\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\n\t\t\t\t\tnewLength++;\n\t\t\t\t\tvar c = maskc[i];\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\n\t\t\t\t\t\tnewLength--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn newLength;\n\t\t\t}\n\t\t};\n\n\t\tthis.removeMask = function (mask, value) {\n\t\t\t// remove the mask from the masked input\n\t\t\tvar buffer = [],\n\t\t\t\t\tvaluec = (value) ? value.split(\"\") : [];\n\t\t\tif (mask) {\n\t\t\t\tvar maskc = mask.split(\"\"),\n\t\t\t\t\t\tvalueIndex = -1,\n\t\t\t\t\t\tinMask = false;\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\n\t\t\t\t\tvalueIndex++;\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\n\t\t\t\t\tvar c = maskc[i];\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\n\t\t\t\t\t\tvalueIndex--;\n\t\t\t\t\t\tif (c === \"{\") {\n\t\t\t\t\t\t\tinMask = true;\n\t\t\t\t\t\t} else if (c === \"}\") {\n\t\t\t\t\t\t\tinMask = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (inMask && valuec[valueIndex]) {\n\t\t\t\t\t\t\tbuffer.push(valuec[valueIndex]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// send back as is\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\n\t\t\t\t\tvar c = valuec[i];\n\t\t\t\t\tbuffer.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buffer.join(\"\").trim();\n\t\t};\n\t};\n\n\tconnectsdk.MaskingUtil = MaskingUtil;\n\treturn MaskingUtil;\n});\n","define(\"connectsdk.ValidationRuleLuhn\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleLuhn = function (json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n\t\tthis.validate = function (value) {\n\t\t\tvar luhnArr = [[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]]\n\t\t\t\t,sum = 0;\n\n\t   \t\tvalue.replace(/\\D+/g,\"\").replace(/[\\d]/g, function(c, p, o) {\n\t\t        sum += luhnArr[ (o.length-p)&1 ][ parseInt(c,10) ];\n\t\t    });\n\t\t    return (sum%10 === 0) && (sum > 0);\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleLuhn = ValidationRuleLuhn;\n\treturn ValidationRuleLuhn;\n});\n","define(\"connectsdk.ValidationRuleExpirationDate\", [\"connectsdk.core\"], function (connectsdk) {\n\n\tvar _validateDateFormat = function (value) {\n\t\t// value is mmYY or mmYYYY\n\t\tvar pattern = /\\d{4}|\\d{6}$/g;\n\t\treturn pattern.test(value);\n\t};\n\n\tvar ValidationRuleExpirationDate = function (json) {\n\t\tthis.json = json;\n\t\tthis.type = json.type;\n\t\tthis.errorMessageId = json.type;\n\n\t\tthis.validate = function (value) {\n\n\t\t\tvalue = value.replace(/[^\\d]/g, '');\n\t\t\tif (!_validateDateFormat(value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar split;\n\t\t\tif (value.length === 4) {\n\t\t\t\tsplit = [value.substring(0, 2), \"20\" + value.substring(2, 4)];\n\t\t\t} else if (value.length === 6) {\n\t\t\t\tsplit = [value.substring(0, 2), value.substring(2, 6)];\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// The month is zero-based, so subtract one.\n\t\t\tvar expirationMonth = split[0] - 1;\n\t\t\tvar expirationYear = split[1];\n\t\t\tvar expirationDate = new Date(expirationYear, expirationMonth, 1);\n\n\t\t\t// Compare the input with the parsed date, to check if the date rolled over.\n\t\t\tif (expirationDate.getMonth() !== Number(expirationMonth) || expirationDate.getFullYear() !== Number(expirationYear)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For comparison, set the current year & month and the maximum allowed expiration date.\n\t\t\tvar nowWithDay = new Date();\n\t\t\tvar now = new Date(nowWithDay.getFullYear(), nowWithDay.getMonth(), 1);\n\t\t\tvar maxExpirationDate = new Date(nowWithDay.getFullYear() + 25, 11, 1);\n\n\t\t\t// The card is still valid if it expires this month.\n\t\t\treturn expirationDate >= now && expirationDate <= maxExpirationDate;\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleExpirationDate = ValidationRuleExpirationDate;\n\treturn ValidationRuleExpirationDate;\n});\n","define(\"connectsdk.ValidationRuleFixedList\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleFixedList = function (json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n\t\tthis.allowedValues = json.attributes.allowedValues;\n\n\t\tthis.validate = function (value) {\n\t\t\tfor (var i = 0, il = this.allowedValues.length; i < il; i++) {\n\t\t\t\tif (this.allowedValues[i] === value) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleFixedList = ValidationRuleFixedList;\n\treturn ValidationRuleFixedList;\n});\n","define(\"connectsdk.ValidationRuleLength\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleLength = function (json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n        this.maxLength = json.attributes.maxLength;\n\t\tthis.minLength = json.attributes.minLength;\n\n\t\tthis.validate = function (value) {\n\t\t\treturn this.minLength <= value.length && value.length <= this.maxLength;\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleLength = ValidationRuleLength;\n\treturn ValidationRuleLength;\n});\n","define(\"connectsdk.ValidationRuleRange\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleRange = function(json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n        this.maxValue = json.attributes.maxValue;\n\t\tthis.minValue = json.attributes.minValue;\n\n\t\tthis.validate = function(value) {\n\t\t\tif (isNaN(value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvalue = Number(value);\n\t\t\treturn this.minValue <= value && value <= this.maxValue;\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleRange = ValidationRuleRange;\n\treturn ValidationRuleRange;\n});\n","define(\"connectsdk.ValidationRuleRegularExpression\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleRegularExpression = function(json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n\t\tthis.regularExpression = json.attributes.regularExpression;\n\n\t\tthis.validate = function(value) {\n\t\t\tvar regexp = new RegExp(this.regularExpression);\n\t\t\treturn regexp.test(value);\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleRegularExpression = ValidationRuleRegularExpression;\n\treturn ValidationRuleRegularExpression;\n});\n","define(\"connectsdk.ValidationRuleResidentIdNumber\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleResidentIdNumber = function (json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n\n        // https://en.wikipedia.org/wiki/Resident_Identity_Card\n\t\tvar weights = [];\n\t\t// storing weights in the reverse order so that we can begin\n\t\t// from the 0th position of ID while calculating checksum\n\t\tfor(var i=18; i > 0; i--) {\n\t\t\tweights.push(Math.pow(2, i-1) % 11);\n\t\t}\n\n\t\tthis.validate = function (value) {\n\t\t\tif(value.length < 15) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif(value.length == 15) {\n\t\t\t\treturn !isNaN(value);\n\t\t\t}\n\n\t\t\tif(value.length < 18 || value.length > 18) {\n\t\t\t\treturn false;\n\t\t\t}\n\n            var sum = 0;\n            for(var i = 0; i < value.length-1; i++) {\n            \tsum += value.charAt(i) * weights[i];\n            }\n\n            var checkSum = (12 - (sum % 11)) % 11;\n            var csChar = value.charAt(17);\n\n            if(checkSum < 10) {\n               return (checkSum == csChar); // check only values\n            }\n\n\t\t    return (csChar === 'X'); // check the type as well\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleResidentIdNumber = ValidationRuleResidentIdNumber;\n\treturn ValidationRuleResidentIdNumber;\n});","define(\"connectsdk.ValidationRuleEmailAddress\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleEmailAddress = function(json) {\n\t\tthis.json = json;\n\t\tthis.type = json.type,\n\t\tthis.errorMessageId = json.type;\n\n\t\tthis.validate = function(value) {\n\t\t\tvar regexp = new RegExp(/^[^@\\.]+(\\.[^@\\.]+)*@([^@\\.]+\\.)*[^@\\.]+\\.[^@\\.][^@\\.]+$/i);\n\t\t\treturn regexp.test(value);\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleEmailAddress = ValidationRuleEmailAddress;\n\treturn ValidationRuleEmailAddress;\n});","define(\"connectsdk.ValidationRuleTermsAndConditions\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleTermsAndConditions = function(json) {\n\t\tthis.json = json;\n\t\tthis.type = json.type,\n\t\tthis.errorMessageId = json.type;\n\n\t\tthis.validate = function(value) {\n\t\t\treturn true === value || \"true\" === value;\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleTermsAndConditions = ValidationRuleTermsAndConditions;\n\treturn ValidationRuleTermsAndConditions;\n});","define(\"connectsdk.ValidationRuleBoletoBancarioRequiredness\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleBoletoBancarioRequiredness = function (json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n        this.fiscalNumberLength = json.attributes.fiscalNumberLength;\n\n\t\tthis.validate = function (value, fiscalNumberValue) {\n\t\t\tif (typeof fiscalNumberValue === 'undefined') {\n\t\t\t\tfiscalNumberValue = '';\n\t\t\t}\n\n\t\t\treturn (fiscalNumberValue.length === this.fiscalNumberLength && value.length > 0) || fiscalNumberValue.length !== this.fiscalNumberLength;\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleBoletoBancarioRequiredness = ValidationRuleBoletoBancarioRequiredness;\n\treturn ValidationRuleBoletoBancarioRequiredness;\n});\n","define('connectsdk.ValidationRuleIban', ['connectsdk.core'], function (connectsdk) {\n\n  /**\n   * Sanitize value by remove all unwanted chars of a Iban format\n   *\n   * @param {String} value\n   * @returns {string}\n   * @private\n   */\n  var _sanitizeValue = function (value) {\n    return value.replace(/[^\\d\\w]+/g, '').toUpperCase();\n  };\n\n  /**\n   * Get state if given value is a valid Iban format\n   *\n   * @param {String} value\n   * @returns {boolean}\n   * @private\n   */\n  var _isValidFormat = function (value) {\n    return typeof value === 'string' && /^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{7}([A-Z0-9]?){0,16}$/.test(_sanitizeValue(value));\n  };\n\n  /**\n   * Convert a value to a string needed for validation calculations\n   *\n   * @param {String} value\n   * @returns {string}\n   * @private\n   */\n  var _toComputedString = function (value) {\n    return _sanitizeValue(value)\n\n    // place the first 4 chars to the end\n      .replace(/(^.{4})(.*)/, '$2$1')\n\n      // replace letters by corresponding numbers A=10 / Z=35\n      .replace(/[A-Z]/g, function (d) {\n        return d.charCodeAt(0) - 55;\n      });\n  }\n\n  /**\n   * Validate Iban by given json\n   *\n   * @param {Object} json\n   * @constructor\n   */\n  var ValidationRuleIban = function (json) {\n    this.json           = json;\n    this.type           = json.type;\n    this.errorMessageId = json.type;\n\n    /**\n     * Validate Iban nrule\n     *\n     * @see https://github.com/arhs/iban.js/blob/master/iban.js\n     *\n     * @param   {string} value\n     * @returns {boolean}\n     */\n    this.validate = function (value) {\n\n      // bail if format is invalid\n      if (!_isValidFormat(value)) {\n        return false;\n      }\n\n      // Check if reminder module 97 equals 1\n      // only then it should pass the validation\n      var remainder = _toComputedString(value),\n          block;\n\n      while (remainder.length > 2) {\n        block     = remainder.slice(0, 9);\n        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\n      }\n\n      return (parseInt(remainder, 10) % 97) === 1;\n    };\n  };\n\n  connectsdk.ValidationRuleIban = ValidationRuleIban;\n  return ValidationRuleIban;\n});","define(\"connectsdk.ValidationRuleFactory\", [\"connectsdk.core\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleTermsAndConditions\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleBoletoBancarioRequiredness\", \"connectsdk.ValidationRuleIban\", \"connectsdk.ValidationRuleResidentIdNumber\"], function (connectsdk, ValidationRuleEmailAddress, ValidationRuleTermsAndConditions, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleBoletoBancarioRequiredness, ValidationRuleIban, ValidationRuleResidentIdNumber) {\n\n    var validationRules = {\n        EmailAddress : ValidationRuleEmailAddress,\n        TermsAndConditions: ValidationRuleTermsAndConditions,\n        ExpirationDate : ValidationRuleExpirationDate,\n        FixedList : ValidationRuleFixedList,\n        Length : ValidationRuleLength,\n        Luhn: ValidationRuleLuhn,\n        Range: ValidationRuleRange,\n        RegularExpression: ValidationRuleRegularExpression,\n        BoletoBancarioRequiredness: ValidationRuleBoletoBancarioRequiredness,\n        Iban: ValidationRuleIban,\n        ResidentIdNumber: ValidationRuleResidentIdNumber\n    }\n\n    var ValidationRuleFactory = function () {\n        this.makeValidator = function (json) {\n            try {\n                var rule = json.type.charAt(0).toUpperCase() + json.type.slice(1);\n                return new validationRules[rule](json);\n            } catch (e) {\n                console.warn('no validator for ', rule);\n            }\n            return null;\n        };\n    };\n\n    connectsdk.ValidationRuleFactory = ValidationRuleFactory;\n    return ValidationRuleFactory;\n});\n","define(\"connectsdk.DataRestrictions\", [\"connectsdk.core\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleTermsAndConditions\", \"connectsdk.ValidationRuleIban\", \"connectsdk.ValidationRuleResidentIdNumber\", \"connectsdk.ValidationRuleFactory\"], function(connectsdk, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleEmailAddress, ValidationRuleTermsAndConditions, ValidationRuleIban, ValidationRuleResidentIdNumber, ValidationRuleFactory) {\n\n\tvar DataRestrictions = function (json, mask) {\n\n\t\tvar _parseJSON = function (_json, _validationRules, _validationRuleByType) {\n\t\t    var validationRuleFactory = new ValidationRuleFactory();\n\t\t\tif (_json.validators) {\n\t\t\t\tfor (var key in _json.validators) {\n\t\t\t\t\tvar validationRule = validationRuleFactory.makeValidator({type: key, attributes: _json.validators[key]});\n\t\t\t\t\tif (validationRule) {\n\t\t\t\t\t\t_validationRules.push(validationRule);\n\t\t\t\t\t\t_validationRuleByType[validationRule.type] = validationRule;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.json = json;\n\t\tthis.isRequired = json.isRequired;\n\t\tthis.validationRules = [];\n\t\tthis.validationRuleByType = {};\n\n\t\t_parseJSON(json, this.validationRules, this.validationRuleByType);\n\t};\n\n\tconnectsdk.DataRestrictions = DataRestrictions;\n\treturn DataRestrictions;\n});","define(\"connectsdk.ValueMappingElement\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValueMappingElement = function (json) {\n\t\tthis.json = json;\n\t\tthis.displayName = json.displayName;\n\t\tthis.value = json.value;\n\t};\n\n\tconnectsdk.ValueMappingElement = ValueMappingElement;\n\treturn ValueMappingElement;\n});","define(\"connectsdk.FormElement\", [\"connectsdk.core\", \"connectsdk.ValueMappingElement\"], function(connectsdk, ValueMappingElement) {\n\n\tvar FormElement = function (json) {\n\n\t\tvar _parseJSON = function (_json, _valueMapping) {\n\t\t\tif (_json.valueMapping) {\n\t\t\t\tfor (var i = 0, l = _json.valueMapping.length; i < l; i++) {\n\t\t\t\t\t_valueMapping.push(new ValueMappingElement(_json.valueMapping[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.json = json;\n\t\tthis.type = json.type;\n\t\tthis.valueMapping = [];\n\n\t\t_parseJSON(json, this.valueMapping);\n\t};\n\n\tconnectsdk.FormElement = FormElement;\n\treturn FormElement;\n});\n","define(\"connectsdk.Tooltip\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar Tooltip = function (json) {\n\t\tthis.json = json;\n\t\tthis.image = json.image;\n\t\tthis.label = json.label;\n\t};\n\n\tconnectsdk.Tooltip = Tooltip;\n\treturn Tooltip;\n});","define(\"connectsdk.PaymentProductFieldDisplayHints\", [\"connectsdk.core\", \"connectsdk.Tooltip\", \"connectsdk.FormElement\"], function(connectsdk, Tooltip, FormElement) {\n\n\tvar PaymentProductFieldDisplayHints = function (json) {\n\t\tthis.json = json;\n \t\tthis.displayOrder = json.displayOrder;\n\t\tif (json.formElement) {\n\t\t\tthis.formElement = new FormElement(json.formElement);\n\t\t}\n\t\tthis.label = json.label;\n\t\tthis.mask = json.mask;\n\t\tthis.obfuscate = json.obfuscate;\n\t\tthis.placeholderLabel = json.placeholderLabel;\n\t\tthis.preferredInputType = json.preferredInputType;\n\t\tthis.tooltip = json.tooltip? new Tooltip(json.tooltip): undefined;\n\t\tthis.alwaysShow = json.alwaysShow;\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\n\t};\n\n\tconnectsdk.PaymentProductFieldDisplayHints = PaymentProductFieldDisplayHints;\n\treturn PaymentProductFieldDisplayHints;\n});","define(\"connectsdk.PaymentProductField\", [\"connectsdk.core\", \"connectsdk.PaymentProductFieldDisplayHints\", \"connectsdk.DataRestrictions\", \"connectsdk.MaskingUtil\"], function(connectsdk, PaymentProductFieldDisplayHints, DataRestrictions, MaskingUtil) {\n\tvar PaymentProductField = function (json) {\n\t\tthis.json = json;\n\t\tthis.displayHints = json.displayHints ? new PaymentProductFieldDisplayHints(json.displayHints) : '';\n\t\tthis.dataRestrictions = new DataRestrictions(json.dataRestrictions, this.displayHints ? this.displayHints.mask : '');\n\t\tthis.id = json.id;\n\t\tthis.type = json.type;\n\t\tvar _errorCodes = [];\n\n\t\tthis.getErrorCodes = function (value) {\n\t\t\tif (value) {\n\t\t\t\t_errorCodes = [];\n\t\t\t\tthis.isValid(value);\n\t\t\t}\n\t\t\treturn _errorCodes;\n\t\t};\n\t\tthis.isValid = function (value) {\n\t\t\t// isValid checks all datarestrictions\n\t\t\tvar validators = this.dataRestrictions.validationRules;\n\t\t\tvar hasError = false;\n\n\t\t\t// Apply masking value first\n\t\t\tvar maskedValue = this.applyMask(value);\n\t\t\tvalue = this.removeMask(maskedValue.formattedValue);\n\t\t\tfor (var i = 0, il = validators.length; i < il; i++) {\n\t\t\t\tvar validator = validators[i];\n\t\t\t\tif (!validator.validate(value)) {\n\t\t\t\t\thasError = true;\n\t\t\t\t\t_errorCodes.push(validator.errorMessageId);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !hasError;\n\t\t};\n\t\tthis.applyMask = function (newValue, oldValue) {\n\t\t\tvar maskingUtil = new MaskingUtil();\n\t\t\treturn maskingUtil.applyMask(this.displayHints.mask, newValue, oldValue);\n\t\t};\n\t\tthis.applyWildcardMask = function (newValue, oldValue) {\n\t\t\tvar maskingUtil = new MaskingUtil();\n\t\t\treturn maskingUtil.applyMask(this.displayHints.wildcardMask, newValue, oldValue);\n\t\t};\n\t\tthis.removeMask = function (value) {\n\t\t\tvar maskingUtil = new MaskingUtil();\n\t\t\treturn maskingUtil.removeMask(this.displayHints.mask, value);\n\t\t};\n\t};\n\n\tconnectsdk.PaymentProductField = PaymentProductField;\n\treturn PaymentProductField;\n});","define(\"connectsdk.PaymentProduct\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\n\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\n\t\tif (_json.fields) {\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\n\t\t\t\t_paymentProductFields.push(paymentProductField);\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar PaymentProduct = function (json) {\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\n\t\tbasicPaymentProduct.paymentProductFields = [];\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\n\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\n\n\t\treturn basicPaymentProduct;\n\t};\n\n\tconnectsdk.PaymentProduct = PaymentProduct;\n\treturn PaymentProduct;\n});\n","define(\"connectsdk.PaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\n\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\n\t\tif (_json.fields) {\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\n\t\t\t\t_paymentProductFields.push(paymentProductField);\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar PaymentProductGroup = function (json) {\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\n\t\tbasicPaymentProduct.json = json;\n\t\tbasicPaymentProduct.json.type = \"group\";\n\t\tbasicPaymentProduct.paymentProductFields = [];\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\n\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\n\n\t\treturn basicPaymentProduct;\n\t};\n\n\tconnectsdk.PaymentProductGroup = PaymentProductGroup;\n\treturn PaymentProductGroup;\n});","define(\"connectsdk.BasicPaymentProducts\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\"], function(connectsdk, BasicPaymentProduct) {\n\n\tvar _parseJson = function (_json, _paymentProducts, _accountsOnFile, _paymentProductById, _accountOnFileById, _paymentProductByAccountOnFileId) {\n\t\tif (_json.paymentProducts) {\n\t\t\tfor (var i = 0, il = _json.paymentProducts.length; i < il; i++) {\n\t\t\t\tvar paymentProduct = new BasicPaymentProduct(_json.paymentProducts[i]);\n\t\t\t\t_paymentProducts.push(paymentProduct);\n\t\t\t\t_paymentProductById[paymentProduct.id] = paymentProduct;\n\n\t\t\t\tif (paymentProduct.accountsOnFile) {\n\t\t\t\t\tvar aofs = paymentProduct.accountsOnFile;\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\n\t\t\t\t\t\tvar aof = aofs[j];\n\t\t\t\t\t\t_accountsOnFile.push(aof);\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\n\t\t\t\t\t\t_paymentProductByAccountOnFileId[aof.id] = paymentProduct;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar BasicPaymentProducts = function (json) {\n\t\tthis.basicPaymentProducts = [];\n\t\tthis.basicPaymentProductById = {};\n\t\tthis.basicPaymentProductByAccountOnFileId = {};\n\t\tthis.accountsOnFile = [];\n\t\tthis.accountOnFileById = {};\n\t\tthis.json = json;\n\n\t\t_parseJson(json, this.basicPaymentProducts, this.accountsOnFile, this.basicPaymentProductById, this.accountOnFileById, this.basicPaymentProductByAccountOnFileId);\n\t};\n\n\tconnectsdk.BasicPaymentProducts = BasicPaymentProducts;\n\treturn BasicPaymentProducts;\n});","define(\"connectsdk.BasicPaymentProductGroups\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProductGroup\"], function(connectsdk, BasicPaymentProductGroup) {\n\n\tvar _parseJson = function (_json, _paymentProductGroups, _accountsOnFile, _paymentProductGroupById, _accountOnFileById) {\n\t\tif (_json.paymentProductGroups) {\n\t\t\tfor (var i = 0, il = _json.paymentProductGroups.length; i < il; i++) {\n\t\t\t\tvar paymentProductGroup = new BasicPaymentProductGroup(_json.paymentProductGroups[i]);\n\t\t\t\t_paymentProductGroups.push(paymentProductGroup);\n\t\t\t\t_paymentProductGroupById[paymentProductGroup.id] = paymentProductGroup;\n\n\t\t\t\tif (paymentProductGroup.accountsOnFile) {\n\t\t\t\t\tvar aofs = paymentProductGroup.accountsOnFile;\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\n\t\t\t\t\t\tvar aof = aofs[j];\n\t\t\t\t\t\t_accountsOnFile.push(aof);\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar BasicPaymentProductGroups = function (json) {\n\t\tthis.basicPaymentProductGroups = [];\n\t\tthis.basicPaymentProductGroupById = {};\n\t\tthis.accountsOnFile = [];\n\t\tthis.accountOnFileById = {};\n\t\tthis.json = json;\n\n\t\t_parseJson(json, this.basicPaymentProductGroups, this.accountsOnFile, this.basicPaymentProductGroupById, this.accountOnFileById);\n\t};\n\n\tconnectsdk.BasicPaymentProductGroups = BasicPaymentProductGroups;\n\treturn BasicPaymentProductGroups;\n});","define(\"connectsdk.BasicPaymentItems\", [\"connectsdk.core\"], function(connectsdk) {\n\t\"use strict\";\n\n\t\tvar _parseJson = function (_products, _groups, _basicPaymentItems) {\n\t\tvar doRemove = [];\n\t\tif (_groups) {\n\t\t\tfor (var i = 0, il = _groups.basicPaymentProductGroups.length; i < il; i++) {\n\t\t\t\tvar groupId = _groups.basicPaymentProductGroups[i].id,\n\t\t\t\t\t\tgroupReplaced = false;\n\t\t\t\tfor (var j = 0, jl = _products.basicPaymentProducts.length; j < jl; j++) {\n\t\t\t\t\tvar productMethod = _products.basicPaymentProducts[j].paymentProductGroup;\n\t\t\t\t\tif (productMethod === groupId && groupReplaced === false) {\n\t\t\t\t\t\t// replace instance by group\n\t\t\t\t\t\t_products.basicPaymentProducts.splice(j, 1, _groups.basicPaymentProductGroups[i]);\n\t\t\t\t\t\tgroupReplaced = true;\n\t\t\t\t\t} else if (productMethod === groupId && groupReplaced === true) {\n\t\t\t\t\t\t// mark for removal\n\t\t\t\t\t\tdoRemove.push(j);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i = doRemove.length -1, il = 0; i >= il; i--) {\n\t\t\t\t_products.basicPaymentProducts.splice(doRemove[i], 1);\n\t\t\t}\n\t\t}\n\t\t_basicPaymentItems.basicPaymentItems = JSON.parse(JSON.stringify(_products.basicPaymentProducts));\n\t\tfor (var i = 0, il = _basicPaymentItems.basicPaymentItems.length; i < il; i++) {\n\t\t\tvar basicPaymentItem = _basicPaymentItems.basicPaymentItems[i];\n\t\t\t_basicPaymentItems.basicPaymentItemById[basicPaymentItem.id] = basicPaymentItem;\n\t\t\tif (basicPaymentItem.accountsOnFile) {\n\t\t\t\tvar aofs = basicPaymentItem.accountsOnFile;\n\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\n\t\t\t\t\tvar aof = aofs[j];\n\t\t\t\t\t_basicPaymentItems.accountsOnFile.push(aof);\n\t\t\t\t\t_basicPaymentItems.accountOnFileById[aof.id] = aof;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tvar BasicPaymentItems = function (products, groups) {\n\t\tthis.basicPaymentItems = [];\n\t\tthis.basicPaymentItemById = {};\n\t\tthis.accountsOnFile = [];\n\t\tthis.accountOnFileById = {};\n\t\t_parseJson(products, groups, this);\n\t};\n\tconnectsdk.BasicPaymentItems = BasicPaymentItems;\n\treturn BasicPaymentItems;\n});","define(\"connectsdk.PaymentRequest\", [\"connectsdk.core\"], function(connectsdk) {\n  var PaymentRequest = function(clientSessionID) {\n    var _clientSessionID = clientSessionID;\n    var _fieldValues = {};\n    var _paymentProduct = null;\n    var _accountOnFile = null;\n    var _tokenize = false;\n\n    this.isValid = function() {\n      var errors = this.getErrorMessageIds();\n      // besides checking the fields for errors check if all mandatory fields are present as well\n      var paymentProduct = this.getPaymentProduct();\n      if (!paymentProduct) {\n        return false;\n      }\n      var allRequiredFieldsPresent = true;\n      for (var i = 0; i < paymentProduct.paymentProductFields.length; i++) {\n        var field = paymentProduct.paymentProductFields[i];\n        if (field.dataRestrictions.isRequired) {\n          // is this field present in the request?\n          var storedValue = this.getValue(field.id);\n          if (!storedValue && !this.getAccountOnFile()) {\n              // if we have an acoount on file the account on file could have the field, so we can ignore it\n            allRequiredFieldsPresent = false;\n          }\n        }\n      }\n      return errors.length === 0 && allRequiredFieldsPresent;\n    };\n    this.setValue = function(paymentProductFieldId, value) {\n      _fieldValues[paymentProductFieldId] = value;\n    };\n    this.setTokenize = function(tokenize) {\n      _tokenize = tokenize;\n    };\n    this.getTokenize = function() {\n      return _tokenize;\n    };\n    this.getErrorMessageIds = function() {\n      var errors = [];\n      for (key in _fieldValues) {\n        var paymentProductField = _paymentProduct.paymentProductFieldById[key];\n        if (paymentProductField) {\n          errors = errors.concat(paymentProductField.getErrorCodes(_fieldValues[key]));\n        }\n      }\n      return errors;\n    };\n    this.getValue = function(paymentProductFieldId) {\n      return _fieldValues[paymentProductFieldId];\n    };\n    this.getValues = function() {\n      return _fieldValues;\n    };\n    this.getMaskedValue = function(paymentProductFieldId) {\n      var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\n      var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\n      return maskedString.formattedValue();\n    };\n    this.getMaskedValues = function() {\n      var fields = _fieldValues;\n      var result = [];\n      for (var paymentProductFieldId in fields) {\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\n        var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\n        result[paymentProductFieldId] = maskedString.formattedValue;\n      }\n      return result;\n    };\n    this.getUnmaskedValues = function() {\n      var fields = _fieldValues;\n      var result = [];\n      for (var paymentProductFieldId in fields) {\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\n        if (paymentProductField) {\n          var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\n          var formattedValue = maskedString.formattedValue;\n          result[paymentProductFieldId] = paymentProductField.removeMask(formattedValue);\n        }\n      }\n      return result;\n    };\n    this.setPaymentProduct = function(paymentProduct) {\n      if (paymentProduct.type === \"group\") {\n        return;\n      }\n      _paymentProduct = paymentProduct;\n    };\n    this.getPaymentProduct = function() {\n      return _paymentProduct;\n    };\n    this.setAccountOnFile = function(accountOnFile) {\n      for (var i = 0, il = accountOnFile.attributes.length; i < il; i++) {\n        var attribute = accountOnFile.attributes[i];\n        delete _fieldValues[attribute.key];\n      }\n      _accountOnFile = accountOnFile;\n    };\n    this.getAccountOnFile = function() {\n      return _accountOnFile;\n    };\n    this.getClientSessionID = function() {\n\t\t    return clientSessionID;\n    };\n  };\n  connectsdk.PaymentRequest = PaymentRequest;\n  return PaymentRequest;\n});","define(\"connectsdk.C2SPaymentProductContext\", [\"connectsdk.core\"], function(connectsdk) {\n\n    var C2SPaymentProductContext = function (payload) {\n        this.totalAmount = typeof payload.totalAmount !== 'undefined' ? payload.totalAmount : '';\n        this.countryCode = payload.countryCode;\n        this.isRecurring = typeof payload.isRecurring !== 'undefined' ? payload.isRecurring : '';\n        this.currency = payload.currency;\n\n        if (typeof payload.locale !== 'undefined') {\n            this.locale = payload.locale;\n        }\n\n        if (typeof payload.accountOnFileId !== 'undefined') {\n            this.accountOnFileId = parseInt(payload.accountOnFileId);\n        }\n    };\n\n  connectsdk.C2SPaymentProductContext = C2SPaymentProductContext;\n  return C2SPaymentProductContext;\n});\n","define(\"connectsdk.JOSEEncryptor\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar pki = forge.pki;\n\tvar asn1 = forge.asn1;\n\tvar CEKKEYLENGTH = 512;\n\tvar IVLENGTH = 128;\n\n\tvar base64UrlEncode = function(str) {\n\t\tstr = forge.util.encode64(str);\n\t\tstr = str.split('=')[0];\n\t\tstr = str.replace(/\\+/g, '-');\n\t\tstr = str.replace(/\\//g, '_');\n\t\treturn str;\n\t};\n\n\tvar createProtectedHeader = function(kid) {\n\t\tvar JOSEHeader = {\n\t\t\t\"alg\" : \"RSA-OAEP\",\n\t\t\t\"enc\" : \"A256CBC-HS512\",\n\t\t\t\"kid\" : kid\n\t\t};\n\t\treturn JSON.stringify(JOSEHeader);\n\t};\n\n\tvar decodePemPublicKey = function(publickeyB64Encoded) {\n\t\t// step 1: base64decode\n\t\tvar publickeyB64Decoded = forge.util.decode64(publickeyB64Encoded);\n\t\t// create a bytebuffer with these bytes\n\t\tvar buffer2 = forge.util.createBuffer(publickeyB64Decoded, 'raw');\n\t\t// convert DER to ASN1 object\n\t\tvar publickeyObject2 = forge.asn1.fromDer(buffer2);\n\t\t// convert to publicKey object\n\t\tvar publicKey2 = pki.publicKeyFromAsn1(publickeyObject2);\n\t\treturn publicKey2;\n\t};\n\n\tvar encryptContentEncryptionKey = function(CEK, publicKey) {\n\t\t// encrypt CEK with OAEP+SHA-1+MGF1Padding\n\t\tvar encryptedCEK = publicKey.encrypt(CEK, 'RSA-OAEP');\n\t\treturn encryptedCEK;\n\t};\n\n\tvar encryptPayload = function(payload, encKey, initializationVector) {\n\t\tvar cipher = forge.cipher.createCipher('AES-CBC', encKey);\n\t\tcipher.start({\n\t\t\tiv : initializationVector\n\t\t});\n\t\tcipher.update(forge.util.createBuffer(payload));\n\t\tcipher.finish();\n\t\treturn cipher.output.bytes();\n\t};\n\n\tvar calculateAdditionalAuthenticatedDataLength = function(encodededProtectedHeader) {\n\t\tvar buffer = forge.util.createBuffer(encodededProtectedHeader);\n\t\tvar lengthInBits = buffer.length() * 8;\n\n\t\tvar buffer2 = forge.util.createBuffer();\n\t\t// convert int to 64bit big endian\n\t\tbuffer2.putInt32(0);\n\t\tbuffer2.putInt32(lengthInBits);\n\t\treturn buffer2.bytes();\n\t};\n\n\tvar calculateHMAC = function(macKey, encodededProtectedHeader, initializationVector, cipherText, al) {\n\t\tvar buffer = forge.util.createBuffer();\n\t\tbuffer.putBytes(encodededProtectedHeader);\n\t\tbuffer.putBytes(initializationVector);\n\t\tbuffer.putBytes(cipherText);\n\t\tbuffer.putBytes(al);\n\n\t\tvar hmacInput = buffer.bytes();\n\n\t\tvar hmac = forge.hmac.create();\n\t\thmac.start(forge.sha512.create(), macKey);\n\t\thmac.update(hmacInput);\n\t\treturn hmac.digest().bytes();\n\t};\n\n\tvar JOSEEncryptor = function() {\n\n\t\tthis.encrypt = function(plainTextValues, publicKeyResponse) {\n\t\t\t// Create protected header and encode it with Base64 encoding\n\t\t\tvar payload = JSON.stringify(plainTextValues);\n\t\t\tvar protectedHeader = createProtectedHeader(publicKeyResponse.keyId);\n\t\t\tvar encodededProtectedHeader = base64UrlEncode(protectedHeader);\n\n\t\t\t// Create ContentEncryptionKey, is a random byte[]\n\t\t\tvar CEK = forge.random.getBytesSync(CEKKEYLENGTH / 8);\n\t\t\tvar publicKey = decodePemPublicKey(publicKeyResponse.publicKey);\n\n\t\t\t// Encrypt the contentEncryptionKey with the GC gateway publickey and encode it with Base64 encoding\n\t\t\tvar encryptedContentEncryptionKey = encryptContentEncryptionKey(CEK, publicKey);\n\t\t\tvar encodedEncryptedContentEncryptionKey = base64UrlEncode(encryptedContentEncryptionKey);\n\n\t\t\t// Split the contentEncryptionKey in ENC_KEY and MAC_KEY for using hmac\n\t\t\tvar macKey = CEK.substring(0, CEKKEYLENGTH / 2 / 8);\n\t\t\tvar encKey = CEK.substring(CEKKEYLENGTH / 2 / 8);\n\n\t\t\t// Create Initialization Vector\n\t\t\tvar initializationVector = forge.random.getBytesSync(IVLENGTH / 8);\n\t\t\tvar encodededinitializationVector = base64UrlEncode(initializationVector);\n\n\t\t\t// Encrypt content with ContentEncryptionKey and Initialization Vector\n\t\t\tvar cipherText = encryptPayload(payload, encKey, initializationVector);\n\t\t\tvar encodedCipherText = base64UrlEncode(cipherText);\n\n\t\t\t// Create Additional Authenticated Data  and Additional Authenticated Data Length\n\t\t\tvar al = calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader);\n\n\t\t\t// Calculates HMAC\n\t\t\tvar calculatedHmac = calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al);\n\n\t\t\t// Truncate HMAC Value to Create Authentication Tag\n\t\t\tvar authenticationTag = calculatedHmac.substring(0, calculatedHmac.length / 2);\n\t\t\tvar encodedAuthenticationTag = base64UrlEncode(authenticationTag);\n\n\t\t\treturn encodededProtectedHeader + \".\" + encodedEncryptedContentEncryptionKey + \".\" + encodededinitializationVector + \".\" + encodedCipherText + \".\" + encodedAuthenticationTag;\n\t\t};\n\t};\n\n\tconnectsdk.JOSEEncryptor = JOSEEncryptor;\n\treturn JOSEEncryptor;\n});","define(\"connectsdk.Encryptor\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.JOSEEncryptor\", \"connectsdk.Util\"], function(connectsdk, Promise, JOSEEncryptor, Util) {\n\n\tvar _util = Util.getInstance();\n\n\tvar Encryptor = function(publicKeyResponsePromise) {\n\t\tthis.encrypt = function(paymentRequest) {\n\t\t\tvar promise = new Promise();\n\t\t\tvar encryptedString = '';\n\t\t\tpublicKeyResponsePromise.then(function (publicKeyResponse) {\n\t\t\t\tif (paymentRequest.isValid()) {\n\n\t\t\t\t\tvar blob = {\n\t\t\t\t\t   clientSessionId: paymentRequest.getClientSessionID()\n\t\t\t\t\t   ,nonce: forge.util.bytesToHex(forge.random.getBytesSync(16))\n\t\t\t\t\t   ,paymentProductId: paymentRequest.getPaymentProduct().id\n                       ,tokenize: paymentRequest.getTokenize()\n                    };\n\n\t\t\t\t\tif (paymentRequest.getAccountOnFile()) {\n                        blob[\"accountOnFileId\"] = paymentRequest.getAccountOnFile().id;\n                    }\n\n                    var paymentValues = [], values = paymentRequest.getUnmaskedValues();\n                    var ownValues = Object.getOwnPropertyNames(values);\n\t\t\t\t\tfor (var i = 0; i < ownValues.length; i++) {\n\t\t\t\t\t\tvar propertyName = ownValues[i];\n\t\t\t\t\t\tif (propertyName !== \"length\") {\n\t\t\t\t\t\t\tpaymentValues.push({\n\t\t\t\t\t\t\t\tkey: propertyName,\n\t\t\t\t\t\t\t\tvalue: values[propertyName]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                    blob[\"paymentValues\"] = paymentValues;\n\n\t\t\t\t\tblob[\"collectedDeviceInformation\"] = _util.collectDeviceInformation();\n\n\t\t\t\t\t// use blob to encrypt\n\t\t\t\t\tvar joseEncryptor = new JOSEEncryptor();\n\t\t\t\t\tencryptedString = joseEncryptor.encrypt(blob, publicKeyResponse);\n\t\t\t\t\tpromise.resolve(encryptedString);\n\t\t\t\t} else {\n\t\t\t\t\tpromise.reject(paymentRequest.getErrorMessageIds());\n\t\t\t\t}\n\t\t\t}, function (error) {\n\t\t\t\tpromise.reject(error);\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\t};\n\n\tconnectsdk.Encryptor = Encryptor;\n\treturn Encryptor;\n});\n","define(\"connectsdk.Session\", [\"connectsdk.core\", \"connectsdk.C2SCommunicator\", \"connectsdk.C2SCommunicatorConfiguration\", \"connectsdk.IinDetailsResponse\", \"connectsdk.promise\", \"connectsdk.C2SPaymentProductContext\", \"connectsdk.BasicPaymentProducts\", \"connectsdk.BasicPaymentProductGroups\", \"connectsdk.PaymentProduct\", \"connectsdk.PaymentProductGroup\", \"connectsdk.BasicPaymentItems\", \"connectsdk.PaymentRequest\", \"connectsdk.Encryptor\"], function (connectsdk, C2SCommunicator, C2SCommunicatorConfiguration, IinDetailsResponse, Promise, C2SPaymentProductContext, BasicPaymentProducts, BasicPaymentProductGroups, PaymentProduct, PaymentProductGroup, BasicPaymentItems, PaymentRequest, Encryptor) {\n\tvar APIVERSION = \"client/v1\";\n\tvar session = function (sessionDetails, paymentProduct) {\n\n\t\tvar _c2SCommunicatorConfiguration = new C2SCommunicatorConfiguration(sessionDetails, APIVERSION),\n\t\t\t_c2sCommunicator = new C2SCommunicator(_c2SCommunicatorConfiguration, paymentProduct),\n\t\t\t_session = this,\n\t\t\t_paymentProductId, _paymentProduct, _paymentRequestPayload, _paymentRequest, _paymentProductGroupId, _paymentProductGroup;\n\t\tthis.clientApiUrl = _c2SCommunicatorConfiguration.clientApiUrl;\n\t\tthis.assetUrl = _c2SCommunicatorConfiguration.assetUrl;\n\n\t\tthis.getBasicPaymentProducts = function (paymentRequestPayload, paymentProductSpecificInputs) {\n\t\t\tvar promise = new Promise();\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\n\t\t\t_c2sCommunicator.getBasicPaymentProducts(c2SPaymentProductContext, paymentProductSpecificInputs).then(function (json) {\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\n\t\t\t\tvar paymentProducts = new BasicPaymentProducts(json);\n\t\t\t\tpromise.resolve(paymentProducts);\n\t\t\t}, function (reason) {\n\t\t\t\tpromise.reject(reason);\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getBasicPaymentProductGroups = function (paymentRequestPayload) {\n\t\t\tvar promise = new Promise();\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\n\t\t\t_c2sCommunicator.getBasicPaymentProductGroups(c2SPaymentProductContext).then(function (json) {\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\n\t\t\t\tvar paymentProductGroups = new BasicPaymentProductGroups(json);\n\t\t\t\tpromise.resolve(paymentProductGroups);\n\t\t\t}, function (reason) {\n\t\t\t\tpromise.reject(reason);\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getBasicPaymentItems = function (paymentRequestPayload, useGroups, paymentProductSpecificInputs) {\n\t\t\tvar promise = new Promise();\n\t\t\t// get products & groups\n\t\t\tif (useGroups) {\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\n\t\t\t\t\t_session.getBasicPaymentProductGroups(paymentRequestPayload).then(function (groups) {\n\t\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, groups);\n\t\t\t\t\t\tpromise.resolve(basicPaymentItems);\n\t\t\t\t\t}, function (reason) {\n\t\t\t\t\t\tpromise.reject(reason);\n\t\t\t\t\t});\n\t\t\t\t}, function (reason) {\n\t\t\t\t\tpromise.reject(reason);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\n\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, null);\n\t\t\t\t\tpromise.resolve(basicPaymentItems);\n\t\t\t\t}, function (reason) {\n\t\t\t\t\tpromise.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProduct = function (paymentProductId, paymentRequestPayload, paymentProductSpecificInputs) {\n\t\t\tvar promise = new Promise();\n\t\t\t_paymentProductId = paymentProductId;\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\n\t\t\t_c2sCommunicator.getPaymentProduct(paymentProductId, c2SPaymentProductContext, paymentProductSpecificInputs).then(function (response) {\n\t\t\t\t_paymentProduct = new PaymentProduct(response);\n\t\t\t\tpromise.resolve(_paymentProduct);\n\t\t\t}, function (reason) {\n\t\t\t\t_paymentProduct = null;\n\t\t\t\tpromise.reject(reason);\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, paymentRequestPayload) {\n\t\t\tvar promise = new Promise();\n\t\t\t_paymentProductGroupId = paymentProductGroupId;\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\n\t\t\t_c2sCommunicator.getPaymentProductGroup(paymentProductGroupId, c2SPaymentProductContext).then(function (response) {\n\t\t\t\t_paymentProductGroup = new PaymentProductGroup(response);\n\t\t\t\tpromise.resolve(_paymentProductGroup);\n\t\t\t}, function (reason) {\n\t\t\t\t_paymentProductGroup = null;\n\t\t\t\tpromise.reject(reason);\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getIinDetails = function (partialCreditCardNumber, paymentRequestPayload) {\n\t\t\tpartialCreditCardNumber = partialCreditCardNumber.replace(/ /g, '');\n\t\t\tif (partialCreditCardNumber.length >= 8) {\n\t\t\t\tpartialCreditCardNumber = partialCreditCardNumber.substring(0, 8);\n\t\t\t} else {\n\t\t\t\tpartialCreditCardNumber = partialCreditCardNumber.substring(0, 6);\n\t\t\t}\n\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\n\t\t\treturn _c2sCommunicator.getPaymentProductIdByCreditCardNumber(partialCreditCardNumber, c2SPaymentProductContext);\n\t\t};\n\n\t\tthis.getPublicKey = function () {\n\t\t\treturn _c2sCommunicator.getPublicKey();\n\t\t};\n\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, paymentRequestPayload) {\n\t\t\tvar promise = new Promise();\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\n\t\t\t_c2sCommunicator.getPaymentProductNetworks(paymentProductId, c2SPaymentProductContext).then(function (response) {\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\n\t\t\t\tpromise.resolve(response);\n\t\t\t}, function (reason) {\n\t\t\t\tpromise.reject(reason);\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\n\t\t\treturn _c2sCommunicator.getPaymentProductDirectory(paymentProductId, currencyCode, countryCode);\n\t\t};\n\n\t\tthis.convertAmount = function (amount, source, target) {\n\t\t\treturn _c2sCommunicator.convertAmount(amount, source, target);\n\t\t};\n\n\t\tthis.getPaymentRequest = function () {\n\t\t\tif (!_paymentRequest) {\n\t\t\t\t_paymentRequest = new PaymentRequest(_c2SCommunicatorConfiguration.clientSessionId);\n\t\t\t}\n\t\t\treturn _paymentRequest;\n\t\t};\n\n\t\tthis.getEncryptor = function () {\n\t\t\tvar publicKeyResponsePromise = _c2sCommunicator.getPublicKey();\n\t\t\treturn new Encryptor(publicKeyResponsePromise);\n\t\t};\n\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\n\t\t\tvar promise = new Promise();\n\t\t\t_c2sCommunicator.getThirdPartyPaymentStatus(paymentId).then(function (response) {\n\t\t\t\tpromise.resolve(response);\n\t\t\t}, function (reason) {\n\t\t\t\tpromise.reject(reason);\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getCustomerDetails = function (paymentProductId, paymentRequestPayload) {\n\t\t\treturn _c2sCommunicator.getCustomerDetails(paymentProductId, paymentRequestPayload);\n\t\t};\n\n\t\tthis.createPaymentProductSession = function (paymentProductId, paymentRequestPayload) {\n\t\t\treturn _c2sCommunicator.createPaymentProductSession(paymentProductId, paymentRequestPayload);\n\t\t};\n\n\t\tthis.createApplePayPayment = function (context, paymentProductSpecificInputs, networks) {\n\t\t\tvar promise = new Promise();\n\t\t\t_c2sCommunicator.initApplePayPayment(context, paymentProductSpecificInputs, networks).then(function (res) {\n\t\t\t\tpromise.resolve(res)\n\t\t\t}, function (reason) {\n\t\t\t\tpromise.reject(reason);\n\t\t\t});\n\t\t\treturn promise;\n\t\t}\n\n\t\t/* In case a full JSON representation of a payment product is already available in context,\n\t\t\t this method can be used instead of getPaymentProduct for the same (but synchronous) result. */\n\t\tthis.transformPaymentProductJSON = function (json) {\n\t\t\treturn new PaymentProduct(_c2sCommunicator.transformPaymentProductJSON(json))\n\t\t};\n\n\t\t/* In case a full JSON representation of a payment product group is already available in context,\n\t\t\t this method can be used instead of getPaymentProductGroup for the same (but synchronous) result. */\n\t\tthis.transformPaymentProductGroupJSON = function (json) {\n\t\t\treturn new PaymentProductGroup(_c2sCommunicator.transformPaymentProductJSON(json))\n\t\t};\n\t};\n\tconnectsdk.Session = session;\n\treturn session;\n});\n"]}