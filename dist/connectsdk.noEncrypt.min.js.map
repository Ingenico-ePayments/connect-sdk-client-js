{"version":3,"sources":["core.js","promise.js","net.js","Util.js","GooglePay.js","ApplePay.js","PublicKeyResponse.js","C2SCommunicatorConfiguration.js","IinDetailsResponse.js","C2SCommunicator.js","LabelTemplateElement.js","Attribute.js","AccountOnFileDisplayHints.js","AccountOnFile.js","PaymentProduct302SpecificData.js","PaymentProduct320SpecificData.js","PaymentProduct863SpecificData.js","PaymentProductDisplayHints.js","BasicPaymentProduct.js","BasicPaymentProductGroup.js","MaskedString.js","MaskingUtil.js","ValidationRuleLuhn.js","ValidationRuleExpirationDate.js","ValidationRuleFixedList.js","ValidationRuleLength.js","ValidationRuleRange.js","ValidationRuleRegularExpression.js","ValidationRuleResidentIdNumber.js","ValidationRuleEmailAddress.js","ValidationRuleTermsAndConditions.js","ValidationRuleBoletoBancarioRequiredness.js","ValidationRuleIban.js","ValidationRuleFactory.js","DataRestrictions.js","ValueMappingElement.js","FormElement.js","Tooltip.js","PaymentProductFieldDisplayHints.js","PaymentProductField.js","PaymentProduct.js","PaymentProductGroup.js","BasicPaymentProducts.js","BasicPaymentProductGroups.js","BasicPaymentItems.js","PaymentRequest.js","C2SPaymentProductContext.js","JOSEEncryptor.js","Encryptor.js","session.js"],"names":["global","connectsdk","modules","define","module","dependencies","fn","length","i","apply","this","exports","window","turing","Promise","singleton","self","pending","resolve","result","complete","reject","isSingleton","prototype","then","success","failure","push","type","shift","PromiseModule","net","trim","s","replace","ajax","url","options","promise","chain","request","XMLHttpRequest","location","protocol","ActiveXObject","e","xhr","response","send","defaults","Accept","Content-Type","name","headers","hasOwnProperty","setRequestHeader","setHeaders","postBody","error","method","toLowerCase","asynchronous","onreadystatechange","readyState","contentType","mimeType","getResponseHeader","status","responseText","test","responseJSON","parseJSON","responseXML","parseXML","successfulRequest","callback","open","serialize","set","key","value","data","end","arguments","JSONPCallback","methodName","parseInt","Date","getTime","json","teardown","object","results","encodeURIComponent","join","string","JSON","parse","DOMParser","text","parseFromString","xml","async","loadXML","run","scriptTag","document","createElement","id","src","that","onerror","body","appendChild","removeChild","get","post","jsonp","Util","instance","getInstance","applePayPaymentProductId","googlePayPaymentProductId","bancontactPaymentProductId","getMetadata","screenSize","innerWidth","innerHeight","platformIdentifier","navigator","userAgent","sdkIdentifier","GC","rppEnabledPage","sdkCreator","collectDeviceInformation","timezoneOffsetUtcMinutes","getTimezoneOffset","locale","language","browserData","javaScriptEnabled","javaEnabled","colorDepth","screen","screenHeight","height","screenWidth","width","base64Encode","stringify","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","slice","filterOutProductsThatAreNotSupportedInThisBrowser","paymentProducts","product","paymentProductsThatAreNotSupportedInThisBrowser","indexOf","splice","_util","_paymentProductSpecificInputs","_context","_gateway","_networks","paymentsClient","_getBaseCardPaymentMethod","parameters","allowedAuthMethods","allowedCardNetworks","_getGooglePaymentDataRequestForPrefetch","apiVersion","apiVersionMinor","allowedPaymentMethods","Object","assign","tokenizationSpecification","gateway","gatewayMerchantId","googlePay","transactionInfo","totalPriceStatus","currencyCode","currency","merchantInfo","merchantName","_getGooglePaymentsClient","googlePayEnvironment","environment","google","payments","api","PaymentsClient","console","GooglePay","C2SCommunicator","isGooglePayAvailable","context","paymentProductSpecificInputs","googlePayData","networks","setTimeout","isReadyToPay","paymentDataRequest","prefetchPaymentData","warn","catch","isMerchantIdProvided","merchantId","ApplePay","isApplePayAvailable","applePayIsAvailable","ApplePaySession","canMakePayments","initPayment","_C2SCommunicator","payment","countryCode","total","label","displayName","amount","totalAmount","supportedNetworks","merchantCapabilities","applePaySession","begin","onvalidatemerchant","event","validationURL","domainName","hostname","createPaymentProductSession","merchantSession","completeMerchantValidation","paymentProductSession302SpecificOutput","sessionObject","message","abort","onpaymentauthorized","token","STATUS_SUCCESS","completePayment","STATUS_FAILURE","PublicKeyResponse","keyId","publicKey","C2SCommunicatorConfiguration","sessionDetails","endpoints","PROD","EU","API","ASSETS","US","AMS","PAR","PREPROD","SANDBOX","INTEGRATION","DEV_NAMI","DEV_ISC","clientSessionId","clientSessionID","Error","assetUrl","assetsBaseUrl","clientApiUrl","apiBaseUrl","customerId","region","tester","split","path","IinDetailsResponse","paymentProductId","isAllowedInContext","coBrands","Net","c2SCommunicatorConfiguration","paymentProduct","_c2SCommunicatorConfiguration","_cache","_providedPaymentProduct","_GooglePay","_ApplePay","_mapType","expirydate","numericstring","integer","expirationDate","formatUrl","endsWith","formatImageUrl","imageUrl","startsWith","prefix","suffix","_cleanJSON","il","fields","field","validatorKey","displayHints","obfuscate","dataRestrictions","validators","formElement","list","tooltip","image","sort","a","b","displayOrder","logo","_extendLogoUrl","postfix","_isPaymentProductInList","metadata","resolveGetBasicPaymentProducts","cacheKey","getBasicPaymentProducts","cacheKeyLocale","cacheBust","isRecurring","urlParameterLocale","res","paymentProduct320SpecificData","_getGooglePayData","getBasicPaymentProductGroups","getPaymentProduct","errorId","errors","code","propertyName","httpStatusCode","urlParameterlocale","getPaymentProductUrl","bancontact","forceBasicFlow","cleanedJSON","getPaymentProductGroup","paymentProductGroupId","getPaymentProductIdByCreditCardNumber","partialCreditCardNumber","iinDetailsResponse","isEnoughDigits","convertContextToIinDetailsContext","payload","bin","paymentContext","amountOfMoney","accountOnFileId","getPublicKey","publicKeyResponse","getPaymentProductNetworks","getPaymentProductDirectory","convertAmount","source","target","getThirdPartyPaymentStatus","paymentId","getCustomerDetails","constructCacheKeyFromKeyValues","values","requestParameters","paymentProductSession302SpecificInput","validationUrl","initApplePayPayment","transformPaymentProductJSON","LabelTemplateElement","attributeKey","mask","wildcardMask","Attribute","mustWriteReason","AccountOnFileDisplayHints","labelTemplate","labelTemplateElementByAttributeKey","_json","_labelTemplate","_labelTemplateElementByAttributeKey","l","labelTemplateElement","_parseJSON","AccountOnFile","attributes","attributeByKey","getMaskedValueByAttributeKey","undefined","MaskingUtil","applyMask","_attributes","_attributeByKey","attribute","PaymentProduct302SpecificData","PaymentProduct320SpecificData","PaymentProduct863SpecificData","integrationTypes","PaymentProductDisplayHints","BasicPaymentProduct","accountsOnFile","accountOnFileById","allowsRecurring","allowsTokenization","autoTokenized","maxAmount","minAmount","paymentMethod","mobileIntegrationLevel","usesRedirectionTo3rdParty","paymentProductGroup","_paymentProduct","_accountsOnFile","_accountOnFileById","accountOnFile","paymentProduct302SpecificData","paymentProduct863SpecificData","BasicPaymentProductGroup","MaskedString","formattedValue","cursorIndex","_fillBuffer","index","offset","buffer","tempMask","valuec","Number","newValue","oldValue","maskc","c","cursor","substring","getMaxLengthBasedOnMask","newLength","removeMask","valueIndex","inMask","ValidationRuleLuhn","errorMessageId","validate","luhnArr","sum","p","o","ValidationRuleExpirationDate","_validateDateFormat","expirationMonth","expirationYear","getMonth","getFullYear","nowWithDay","now","maxExpirationDate","ValidationRuleFixedList","allowedValues","ValidationRuleLength","maxLength","minLength","ValidationRuleRange","maxValue","minValue","isNaN","ValidationRuleRegularExpression","regularExpression","RegExp","ValidationRuleResidentIdNumber","weights","Math","pow","checkSum","csChar","ValidationRuleEmailAddress","ValidationRuleTermsAndConditions","ValidationRuleBoletoBancarioRequiredness","fiscalNumberLength","fiscalNumberValue","_sanitizeValue","toUpperCase","ValidationRuleIban","_isValidFormat","block","remainder","d","_toComputedString","validationRules","EmailAddress","TermsAndConditions","ExpirationDate","FixedList","Length","Luhn","Range","RegularExpression","BoletoBancarioRequiredness","Iban","ResidentIdNumber","ValidationRuleFactory","makeValidator","rule","DataRestrictions","isRequired","validationRuleByType","_validationRules","_validationRuleByType","validationRuleFactory","validationRule","ValueMappingElement","FormElement","valueMapping","_valueMapping","Tooltip","PaymentProductFieldDisplayHints","placeholderLabel","preferredInputType","alwaysShow","PaymentProductField","_errorCodes","getErrorCodes","isValid","hasError","maskedValue","validator","applyWildcardMask","PaymentProduct","basicPaymentProduct","paymentProductFields","paymentProductFieldById","_paymentProductFields","_paymentProductFieldById","paymentProductField","PaymentProductGroup","BasicPaymentProducts","basicPaymentProducts","basicPaymentProductById","basicPaymentProductByAccountOnFileId","_paymentProducts","_paymentProductById","_paymentProductByAccountOnFileId","aofs","j","jl","aof","_parseJson","BasicPaymentProductGroups","basicPaymentProductGroups","basicPaymentProductGroupById","_paymentProductGroups","_paymentProductGroupById","paymentProductGroups","BasicPaymentItems","products","groups","basicPaymentItems","basicPaymentItemById","_products","_groups","_basicPaymentItems","doRemove","groupId","groupReplaced","productMethod","basicPaymentItem","PaymentRequest","_fieldValues","_accountOnFile","_tokenize","getErrorMessageIds","allRequiredFieldsPresent","getValue","getAccountOnFile","setValue","paymentProductFieldId","setTokenize","tokenize","getTokenize","concat","getValues","getMaskedValue","getMaskedValues","maskedString","getUnmaskedValues","setPaymentProduct","setAccountOnFile","getClientSessionID","C2SPaymentProductContext","pki","forge","base64UrlEncode","asn1","str","util","encode64","JOSEEncryptor","encrypt","plainTextValues","kid","JOSEHeader","publickeyB64Encoded","publickeyB64Decoded","buffer2","publickeyObject2","protectedHeader","alg","encodededProtectedHeader","CEK","random","getBytesSync","CEKKEYLENGTH","encryptedContentEncryptionKey","encryptContentEncryptionKey","decode64","createBuffer","fromDer","publicKeyFromAsn1","encodedEncryptedContentEncryptionKey","macKey","encKey","initializationVector","IVLENGTH","encodededinitializationVector","cipherText","cipher","createCipher","start","iv","update","finish","output","bytes","encryptPayload","encodedCipherText","calculatedHmac","al","putBytes","hmacInput","hmac","create","sha512","digest","calculateHMAC","lengthInBits","putInt32","calculateAdditionalAuthenticatedDataLength","authenticationTag","Encryptor","publicKeyResponsePromise","paymentRequest","encryptedString","blob","nonce","bytesToHex","paymentValues","ownValues","getOwnPropertyNames","joseEncryptor","session","_paymentRequestPayload","_paymentRequest","_paymentProductGroup","_c2sCommunicator","_session","paymentRequestPayload","c2SPaymentProductContext","getBasicPaymentItems","useGroups","getIinDetails","getPaymentRequest","getEncryptor","createApplePayPayment","transformPaymentProductGroupJSON","Session"],"mappings":"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","file":"connectsdk.noEncrypt.min.js","sourcesContent":["(function (global) {\r\n    var connectsdk = {}, modules = {};\r\n\r\n    /* SDK internal function */\r\n    connectsdk.define = function (module, dependencies, fn) {\r\n        if (dependencies && dependencies.length) {\r\n            for (var i = 0; i < dependencies.length; i++) {\r\n                dependencies[i] = modules[dependencies[i]];\r\n            }\r\n        }\r\n        modules[module] = fn.apply(this, dependencies || []);\r\n    };\r\n\r\n    // Export `connectsdk` based on environment.\r\n    global.connectsdk = connectsdk;\r\n\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n\r\n    connectsdk.define('connectsdk.core', [], function () {\r\n        return connectsdk;\r\n    });\r\n\r\n    // use require.js if available otherwise we use our own\r\n    if (typeof define === 'undefined') {\r\n        global.define = connectsdk.define;\r\n    }\r\n} (typeof window === 'undefined' ? this : window));\r\n\r\n// (re)define core\r\ndefine(\"connectsdk.core\", [], function () {\r\n    var global = typeof window === 'undefined' ? this : window;\r\n    var connectsdk = {};\r\n    global.connectsdk = connectsdk;\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n    return connectsdk;\r\n});\r\n","define('connectsdk.promise', ['connectsdk.core'], function(turing) {\r\n\tfunction PromiseModule(global) {\r\n\t\t/**\r\n\t\t * The Promise class.\r\n\t\t */\r\n\t\tfunction Promise(singleton) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.pending = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Resolves a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.resolve = function(result) {\r\n\t\t\t\tself.complete('resolve', result);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Rejects a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.reject = function(result) {\r\n\t\t\t\tself.complete('reject', result);\r\n\t\t\t};\r\n\r\n\t\t\tif (singleton) {\r\n\t\t\t\tthis.isSingleton = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tPromise.prototype = {\r\n\t\t\t/**\r\n\t\t\t * Adds a success and failure handler for completion of this Promise object.\r\n\t\t\t *\r\n\t\t\t * @param {Function} success The success handler\r\n\t\t\t * @param {Function} success The failure handler\r\n\t\t\t * @returns {Promise} `this`\r\n\t\t\t */\r\n\t\t\tthen : function(success, failure) {\r\n\t\t\t\tthis.pending.push({\r\n\t\t\t\t\tresolve : success,\r\n\t\t\t\t\treject : failure\r\n\t\t\t\t});\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Runs through each pending 'thenable' based on type (resolve, reject).\r\n\t\t\t *\r\n\t\t\t * @param {String} type The thenable type\r\n\t\t\t * @param {Object} result A value\r\n\t\t\t */\r\n\t\t\tcomplete : function(type, result) {\r\n\t\t\t\twhile (this.pending[0]) {\r\n\t\t\t\t\tthis.pending.shift()[type](result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tglobal.Promise = Promise;\r\n\t}\r\n\tPromiseModule(connectsdk);\r\n\r\n\treturn connectsdk.Promise;\r\n});\r\n","define('connectsdk.net', ['connectsdk.core'], function(connectsdk) {\r\n  var net = {};\r\n\r\n  /**\r\n    * Ajax request options:\r\n    *\r\n    *   - `method`: {String} HTTP method - GET, POST, etc.\r\n    *   - `success`: {Function} A callback to run when a request is successful\r\n    *   - `error`: {Function} A callback to run when the request fails\r\n    *   - `asynchronous`: {Boolean} Defaults to asynchronous\r\n    *   - `postBody`: {String} The HTTP POST body\r\n    *   - `contentType`: {String} The content type of the request, default is `application/x-www-form-urlencoded`\r\n    *\r\n    */\r\n\r\n  /**\r\n    * Removes leading and trailing whitespace.\r\n    * @param {String}\r\n    * @return {String}\r\n    */\r\n  var trim = ''.trim\r\n    ? function(s) { return s.trim(); }\r\n    : function(s) { return s.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); };\r\n\r\n  function xhr() {\r\n    if (typeof XMLHttpRequest !== 'undefined' && (window.location.protocol !== 'file:' || !window.ActiveXObject)) {\r\n      return new XMLHttpRequest();\r\n    } else {\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.6.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.3.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function successfulRequest(request) {\r\n    return (request.status >= 200 && request.status < 300) ||\r\n        request.status == 304 ||\r\n        (request.status == 0 && request.responseText);\r\n  }\r\n\r\n  /**\r\n    * Serialize JavaScript for HTTP requests.\r\n    *\r\n    * @param {Object} object An Array or Object\r\n    * @returns {String} A string suitable for a GET or POST request\r\n    */\r\n  net.serialize = function(object) {\r\n    if (!object) return;\r\n\r\n    if (typeof object === 'string') {\r\n      return object;\r\n    }\r\n\r\n    var results = [];\r\n    for (var key in object) {\r\n      results.push(encodeURIComponent(key) + '=' + encodeURIComponent(object[key]));\r\n    }\r\n    return results.join('&');\r\n  };\r\n\r\n  /**\r\n    * JSON.parse support can be inferred using `connectsdk.detect('JSON.parse')`.\r\n    */\r\n  //connectsdk.addDetectionTest('JSON.parse', function() {\r\n  //  return window.JSON && window.JSON.parse;\r\n  //});\r\n\r\n  /**\r\n    * Parses JSON represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  net.parseJSON = function(string) {\r\n    if (typeof string !== 'string' || !string) return null;\r\n    string = trim(string);\r\n    /*\r\n    return connectsdk.detect('JSON.parse') ?\r\n      window.JSON.parse(string) :\r\n      (new Function('return ' + string))();\r\n    */\r\n    return window.JSON.parse(string);\r\n  };\r\n\r\n  /**\r\n    * Parses XML represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  if (window.DOMParser) {\r\n    net.parseXML = function(text) {\r\n      return new DOMParser().parseFromString(text, 'text/xml');\r\n    };\r\n  } else {\r\n    net.parseXML = function(text) {\r\n      var xml = new ActiveXObject('Microsoft.XMLDOM');\r\n      xml.async = 'false';\r\n      xml.loadXML(text);\r\n      return xml;\r\n    };\r\n  }\r\n\r\n  /**\r\n    * Creates an Ajax request.  Returns an object that can be used\r\n    * to chain calls.  For example:\r\n    *\r\n    *      $t.post('/post-test')\r\n    *        .data({ key: 'value' })\r\n    *        .end(function(res) {\r\n    *          assert.equal('value', res.responseText);\r\n    *        });\r\n    *\r\n    *      $t.get('/get-test')\r\n    *        .set('Accept', 'text/html')\r\n    *        .end(function(res) {\r\n    *          assert.equal('Sample text', res.responseText);\r\n    *        });\r\n    *\r\n    * The available chained methods are:\r\n    *\r\n    * `set` -- set a HTTP header\r\n    * `data` -- the postBody\r\n    * `end` -- send the request over the network, and calls your callback with a `res` object\r\n    * `send` -- sends the request and calls `data`: `.send({ data: value }, function(res) { });`\r\n    *\r\n    * @param {String} The URL to call\r\n    * @param {Object} Optional settings\r\n    * @returns {Object} A chainable object for further configuration\r\n    */\r\n  function ajax(url, options) {\r\n    var request = xhr(),\r\n        promise,\r\n        then,\r\n        response = {},\r\n        chain;\r\n    if (connectsdk.Promise) {\r\n      promise = new connectsdk.Promise();\r\n    }\r\n\r\n    function respondToReadyState(readyState) {\r\n      if (request.readyState == 4) {\r\n        var contentType = request.mimeType || request.getResponseHeader('content-type') || '';\r\n\r\n        response.status = request.status;\r\n        response.responseText = request.responseText;\r\n        if (/json/.test(contentType)) {\r\n          response.responseJSON = net.parseJSON(request.responseText);\r\n        } else if (/xml/.test(contentType)) {\r\n          response.responseXML = net.parseXML(request.responseText);\r\n      \t}\r\n\r\n        response.success = successfulRequest(request);\r\n\r\n        if (options.callback) {\r\n          return options.callback(response, request);\r\n        }\r\n\r\n        if (response.success) {\r\n          if (options.success) options.success(response, request);\r\n          if (promise) promise.resolve(response, request);\r\n        } else {\r\n          if (options.error) options.error(response, request);\r\n          if (promise) promise.reject(response, request);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Set the HTTP headers\r\n    function setHeaders() {\r\n      var defaults = {\r\n        'Accept': 'text/javascript, application/json, text/html, application/xml, text/xml, */*',\r\n        'Content-Type': 'application/json'\r\n      };\r\n\r\n      /**\r\n       * Merge headers with defaults.\r\n       */\r\n      for (var name in defaults) {\r\n        if (!options.headers.hasOwnProperty(name))\r\n          options.headers[name] = defaults[name];\r\n      }\r\n      for (var name in options.headers) {\r\n        request.setRequestHeader(name, options.headers[name]);\r\n      }\r\n\r\n    }\r\n\r\n    if (typeof options === 'undefined') options = {};\r\n\r\n    options.method = options.method ? options.method.toLowerCase() : 'get';\r\n    options.asynchronous = options.asynchronous || true;\r\n    options.postBody = options.postBody || '';\r\n    request.onreadystatechange = respondToReadyState;\r\n    request.open(options.method, url, options.asynchronous);\r\n\r\n    options.headers = options.headers || {};\r\n    if (options.contentType) {\r\n      options.headers['Content-Type'] = options.contentType;\r\n    }\r\n\r\n    if (typeof options.postBody !== 'string') {\r\n      // Serialize JavaScript\r\n      options.postBody = net.serialize(options.postBody);\r\n    }\r\n\r\n    // setHeaders();\r\n\r\n    function send() {\r\n      try {\r\n      \tsetHeaders();\r\n        request.send(options.postBody);\r\n      } catch (e) {\r\n        if (options.error) {\r\n          options.error();\r\n        }\r\n      }\r\n    }\r\n\r\n    chain = {\r\n      set: function(key, value) {\r\n        options.headers[key] = value;\r\n        return chain;\r\n      },\r\n\r\n      send: function(data, callback) {\r\n        options.postBody = net.serialize(data);\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      end: function(callback) {\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      data: function(data) {\r\n        options.postBody = net.serialize(data);\r\n        return chain;\r\n      },\r\n\r\n      then: function() {\r\n        chain.end();\r\n        if (promise) promise.then.apply(promise, arguments);\r\n        return chain;\r\n      }\r\n    };\r\n\r\n    return chain;\r\n  }\r\n\r\n  function JSONPCallback(url, success, failure) {\r\n    var self = this;\r\n    this.url = url;\r\n    this.methodName = '__connectsdk_jsonp_' + parseInt(new Date().getTime());\r\n    this.success = success;\r\n    this.failure = failure;\r\n\r\n    function runCallback(json) {\r\n      self.success(json);\r\n      self.teardown();\r\n    }\r\n\r\n    window[this.methodName] = runCallback;\r\n  }\r\n\r\n  JSONPCallback.prototype.run = function() {\r\n    this.scriptTag = document.createElement('script');\r\n    this.scriptTag.id = this.methodName;\r\n    this.scriptTag.src = this.url.replace('{callback}', this.methodName);\r\n    var that = this;\r\n    this.scriptTag.onerror = function() {\r\n    \tthat.failure();\r\n    };\r\n    document.body.appendChild(this.scriptTag);\r\n  };\r\n\r\n  JSONPCallback.prototype.teardown = function() {\r\n    window[this.methodName] = null;\r\n    try {\r\n    \tdelete window[this.methodName];\r\n    } catch (e) {}\r\n    if (this.scriptTag) {\r\n      document.body.removeChild(this.scriptTag);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * An Ajax GET request.\r\n   *\r\n   *      $t.get('/get-test')\r\n   *        .set('Accept', 'text/html')\r\n   *        .end(function(res) {\r\n   *          assert.equal('Sample text', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options\r\n   * @returns {Object} A chainable object for further configuration\r\n   */\r\n  net.get = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'get';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * An Ajax POST request.\r\n   *\r\n   *      $t.post('/post-test')\r\n   *        .data({ key: 'value' })\r\n   *        .end(function(res) {\r\n   *          assert.equal('value', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options (`postBody` may come in handy here)\r\n   * @returns {Object} An object for further chaining with promises\r\n   */\r\n  net.post = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'post';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * A jsonp request.  Example:\r\n   *\r\n   *     var url = 'http://feeds.delicious.com/v1/json/';\r\n   *     url += 'alex_young/javascript?callback={callback}';\r\n   *\r\n   *     connectsdk.net.jsonp(url, {\r\n   *       success: function(json) {\r\n   *         console.log(json);\r\n   *       }\r\n   *     });\r\n   *\r\n   * @param {String} url The URL to request\r\n   */\r\n  net.jsonp = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    var callback = new JSONPCallback(url, options.success, options.failure);\r\n    callback.run();\r\n  };\r\n\r\n  /**\r\n    * The Ajax methods are mapped to the `connectsdk` object:\r\n    *\r\n    *      connectsdk.get();\r\n    *      connectsdk.post();\r\n    *      connectsdk.json();\r\n    *\r\n    */\r\n  connectsdk.get = net.get;\r\n  connectsdk.post = net.post;\r\n  connectsdk.jsonp = net.jsonp;\r\n\r\n  net.ajax = ajax;\r\n  connectsdk.net = net;\r\n  return net;\r\n});\r\n","define(\"connectsdk.Util\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\t// Create a singleton from Util so the same util function can be used in different modules\r\n\tvar Util = (function () {\r\n\t\tvar instance;\r\n\r\n\t\tfunction createInstance() {\r\n\t\t\t// private variables to use in the public methods\r\n\t\t\tvar applePayPaymentProductId = 302;\r\n\t\t\tvar googlePayPaymentProductId = 320;\r\n\t\t\tvar bancontactPaymentProductId = 3012;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tapplePayPaymentProductId: applePayPaymentProductId,\r\n\t\t\t\tgooglePayPaymentProductId: googlePayPaymentProductId,\r\n\t\t\t\tbancontactPaymentProductId: bancontactPaymentProductId,\r\n\t\t\t\tgetMetadata: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tscreenSize: window.innerWidth + \"x\" + window.innerHeight,\r\n\t\t\t\t\t\tplatformIdentifier: window.navigator.userAgent,\r\n\t\t\t\t\t\tsdkIdentifier: ((document.GC && document.GC.rppEnabledPage) ? 'rpp-' : '') + 'JavaScriptClientSDK/v${version}',\r\n\t\t\t\t\t\tsdkCreator: 'Ingenico'\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tcollectDeviceInformation: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\"timezoneOffsetUtcMinutes\": new Date().getTimezoneOffset(),\r\n\t\t\t\t\t\t\"locale\": navigator.language,\r\n\t\t\t\t\t\t\"browserData\": {\r\n\t\t\t\t\t\t\t\"javaScriptEnabled\": true,\r\n\t\t\t\t\t\t\t\"javaEnabled\": navigator.javaEnabled(),\r\n\t\t\t\t\t\t\t\"colorDepth\": screen.colorDepth,\r\n\t\t\t\t\t\t\t\"screenHeight\": screen.height,\r\n\t\t\t\t\t\t\t\"screenWidth\": screen.width,\r\n\t\t\t\t\t\t\t\"innerHeight\": window.innerHeight,\r\n\t\t\t\t\t\t\t\"innerWidth\": window.innerWidth\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tbase64Encode: function (data) {\r\n\t\t\t\t\tif (typeof data === \"object\") {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdata = JSON.stringify(data);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tthrow \"data must be either a String or a JSON object\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\t\t\t\t\tvar o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', tmp_arr = [];\r\n\r\n\t\t\t\t\tif (!data) {\r\n\t\t\t\t\t\treturn data;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdo {// pack three octets into four hexets\r\n\t\t\t\t\t\to1 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to2 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to3 = data.charCodeAt(i++);\r\n\r\n\t\t\t\t\t\tbits = o1 << 16 | o2 << 8 | o3;\r\n\r\n\t\t\t\t\t\th1 = bits >> 18 & 0x3f;\r\n\t\t\t\t\t\th2 = bits >> 12 & 0x3f;\r\n\t\t\t\t\t\th3 = bits >> 6 & 0x3f;\r\n\t\t\t\t\t\th4 = bits & 0x3f;\r\n\r\n\t\t\t\t\t\t// use hexets to index into b64, and append result to encoded string\r\n\t\t\t\t\t\ttmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\r\n\t\t\t\t\t} while (i < data.length);\r\n\r\n\t\t\t\t\tenc = tmp_arr.join('');\r\n\r\n\t\t\t\t\tvar r = data.length % 3;\r\n\r\n\t\t\t\t\treturn (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\r\n\t\t\t\t},\r\n\t\t\t\tfilterOutProductsThatAreNotSupportedInThisBrowser: function (json) {\r\n\t\t\t\t\tfor (var i = json.paymentProducts.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\t\t\tvar product = json.paymentProducts[i];\r\n\t\t\t\t\t\tif (product && this.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(product.id) > -1) {\r\n\t\t\t\t\t\t\tjson.paymentProducts.splice(i, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tpaymentProductsThatAreNotSupportedInThisBrowser: []\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tgetInstance: function () {\r\n\t\t\t\tif (!instance) {\r\n\t\t\t\t\tinstance = createInstance();\r\n\t\t\t\t}\r\n\t\t\t\treturn instance;\r\n\t\t\t}\r\n\t\t};\r\n\t})();\r\n\r\n\tconnectsdk.Util = Util;\r\n\treturn Util;\r\n});\r\n","define(\"connectsdk.GooglePay\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.Util\"], function (connectsdk, Promise, Util) {\r\n\r\n    var _util = Util.getInstance();\r\n    var _C2SCommunicator = null;\r\n    var _paymentProductSpecificInputs = null;\r\n    var _context = null;\r\n    var _gateway = null;\r\n    var _networks = null;\r\n    var paymentsClient = null;\r\n\r\n    // Only base is needed to trigger isReadyToPay\r\n    var _getBaseCardPaymentMethod = function () {\r\n        return {\r\n            type: 'CARD',\r\n            parameters: {\r\n                allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\r\n                allowedCardNetworks: _networks\r\n            }\r\n        }\r\n    };\r\n\r\n    var _getTokenizationSpecification = function () {\r\n        return {\r\n            type: 'PAYMENT_GATEWAY',\r\n            parameters: {\r\n                'gateway': _gateway,\r\n                'gatewayMerchantId': _paymentProductSpecificInputs.googlePay.gatewayMerchantId\r\n            }\r\n        }\r\n    };\r\n\r\n    // To prefetch payment data we need base + tokenizationSpecification\r\n    var _getCardPaymentMethod = function () {\r\n        return Object.assign(\r\n            {},\r\n            _getBaseCardPaymentMethod(),\r\n            {\r\n                tokenizationSpecification: _getTokenizationSpecification()\r\n            }\r\n        );\r\n    };\r\n\r\n    var _getTransactionInfo = function () {\r\n        return {\r\n            \"totalPriceStatus\": \"NOT_CURRENTLY_KNOWN\",\r\n            \"currencyCode\": _context.currency\r\n        };\r\n    };\r\n\r\n    var _getMerchantInfo = function () {\r\n        return {\r\n            \"merchantName\": _paymentProductSpecificInputs.googlePay.merchantName\r\n        };\r\n    };\r\n\r\n    var _getGooglePaymentDataRequest = function () {\r\n        return {\r\n            apiVersion: 2,\r\n            apiVersionMinor: 0,\r\n            allowedPaymentMethods: [_getBaseCardPaymentMethod()]\r\n        };\r\n    };\r\n\r\n    var _getGooglePaymentDataRequestForPrefetch = function () {\r\n        // transactionInfo must be set but does not affect cache\r\n        return {\r\n            apiVersion: 2,\r\n            apiVersionMinor: 0,\r\n            allowedPaymentMethods: [_getCardPaymentMethod()],\r\n            transactionInfo: _getTransactionInfo(),\r\n            merchantInfo: _getMerchantInfo()\r\n        };\r\n    };\r\n\r\n    function _getGooglePaymentsClient() {\r\n        if (paymentsClient === null) {\r\n            var googlePayEnvironment = 'TEST';\r\n            if (_context.environment === 'PROD') {\r\n                googlePayEnvironment = 'PROD';\r\n            }\r\n            if (window.google) {\r\n                paymentsClient = new google.payments.api.PaymentsClient({environment: googlePayEnvironment});\r\n            } else {\r\n                console.error(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\r\n            }\r\n        }\r\n        return paymentsClient;\r\n    }\r\n\r\n    /**\r\n     * Prefetch payment data to improve performance\r\n     *\r\n     * @see {@link https://developers.google.com/pay/api/web/reference/client#prefetchPaymentData|prefetchPaymentData()}\r\n     */\r\n    function prefetchGooglePaymentData() {\r\n        var paymentDataRequest = _getGooglePaymentDataRequestForPrefetch();\r\n\r\n        var paymentsClient = _getGooglePaymentsClient();\r\n\r\n        // Prefetching is only effective when all information is provided\r\n        if (_paymentProductSpecificInputs.googlePay.gatewayMerchantId &&\r\n            _paymentProductSpecificInputs.googlePay.merchantName) {\r\n            paymentsClient.prefetchPaymentData(paymentDataRequest);\r\n        } else {\r\n            console.warn(\"Prefetching payment data was not triggered because of missing information. \" +\r\n                \"gatewayMerchantId: \" + _paymentProductSpecificInputs.googlePay.gatewayMerchantId +\r\n                \", merchantName: \" + _paymentProductSpecificInputs.googlePay.merchantName)\r\n        }\r\n    }\r\n\r\n    var GooglePay = function (C2SCommunicator) {\r\n        _C2SCommunicator = C2SCommunicator;\r\n        this.isGooglePayAvailable = function (context, paymentProductSpecificInputs, googlePayData) {\r\n            _context = context;\r\n            _paymentProductSpecificInputs = paymentProductSpecificInputs;\r\n            if (googlePayData && googlePayData.networks) {\r\n                _gateway = googlePayData.gateway;\r\n                _networks = googlePayData.networks;\r\n            } else {\r\n                _gateway = \"ingenicoglobalcollect\";\r\n                _networks = googlePayData;\r\n            }\r\n            var promise = new Promise();\r\n            // This setTimeout is essential to make the following (not fully asynchronous) code work in a promise way in all scenarios. (not needed in happy flow)\r\n            // The SDK has it's only PolyFill for the promise which is not feature complete.\r\n            setTimeout(function () {\r\n                if (_networks && _networks.length > 0) {\r\n                    var paymentsClient = _getGooglePaymentsClient();\r\n                    if (!paymentsClient) {\r\n                        _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                        promise.reject(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\r\n                    } else {\r\n                        paymentsClient.isReadyToPay(_getGooglePaymentDataRequest())\r\n                            .then(function (response) {\r\n                                promise.resolve(response);\r\n\r\n                                prefetchGooglePaymentData();\r\n                            })\r\n                            .catch(function () {\r\n                                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                                promise.reject('failed to run isReadyToPay() with Google Pay API');\r\n                            });\r\n                    }\r\n                } else {\r\n                    _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                    promise.reject('There are no product networks available');\r\n                }\r\n            }, 0);\r\n            return promise;\r\n        };\r\n\r\n        this.isMerchantIdProvided = function (paymentProductSpecificInputs) {\r\n            if (paymentProductSpecificInputs.googlePay.merchantId) {\r\n                return paymentProductSpecificInputs.googlePay.merchantId;\r\n            } else {\r\n                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.googlePayPaymentProductId);\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    connectsdk.GooglePay = GooglePay;\r\n    return GooglePay;\r\n});\r\n","define(\"connectsdk.ApplePay\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.Util\"], function (connectsdk, Promise, Util) {\r\n\r\n    var _util = Util.getInstance();\r\n\r\n    var ApplePay = function () {\r\n        this.isApplePayAvailable = function () {\r\n            var applePayIsAvailable = window.ApplePaySession && window.ApplePaySession.canMakePayments();\r\n            if (!applePayIsAvailable) {\r\n                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.applePayPaymentProductId);\r\n            }\r\n            return applePayIsAvailable;\r\n        };\r\n        this.initPayment = function (context, C2SCommunicator) {\r\n            var promise = new Promise();\r\n            var _context = context;\r\n            var _C2SCommunicator = C2SCommunicator;\r\n\r\n            var payment = {\r\n                currencyCode: _context.currency,\r\n                countryCode: _context.countryCode,\r\n                total: {\r\n                    label: _context.displayName,\r\n                    amount: _context.totalAmount / 100,\r\n                },\r\n                supportedNetworks: _context.networks,\r\n                merchantCapabilities: ['supports3DS'],\r\n            };\r\n\r\n            var applePaySession = new ApplePaySession(1, payment);\r\n            applePaySession.begin();\r\n\r\n            applePaySession.onvalidatemerchant = function (event) {\r\n                _context.validationURL = event.validationURL;\r\n                _context.domainName = window.location.hostname;\r\n                _C2SCommunicator.createPaymentProductSession('302', _context).then(function (merchantSession) {\r\n                    try {\r\n                        applePaySession.completeMerchantValidation(JSON.parse(merchantSession.paymentProductSession302SpecificOutput.sessionObject));\r\n                    } catch {\r\n                        promise.reject({message: 'Error completing merchant validation'});\r\n                        applePaySession.abort();\r\n                    }\r\n                }, function () {\r\n                    promise.reject({message: 'Error completing merchant validation'});\r\n                    applePaySession.abort();\r\n                })\r\n            };\r\n\r\n            applePaySession.onpaymentauthorized = function (event) {\r\n                if (!event.payment.token) {\r\n                    status = ApplePaySession.STATUS_FAILURE;\r\n                    promise.reject({message: 'Error payment authorization'});\r\n                } else {\r\n                    status = ApplePaySession.STATUS_SUCCESS;\r\n                    promise.resolve({message: 'Payment authorized', data: event.payment.token});\r\n                    applePaySession.completePayment(status);\r\n                }\r\n            };\r\n            return promise;\r\n        };\r\n    }\r\n\r\n    connectsdk.ApplePay = ApplePay;\r\n    return ApplePay;\r\n});","define(\"connectsdk.PublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PublicKeyResponse = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.keyId = json.keyId;\r\n\t\tthis.publicKey = json.publicKey;\r\n\t};\r\n\r\n\tconnectsdk.PublicKeyResponse = PublicKeyResponse;\r\n\treturn PublicKeyResponse;\r\n});","define(\"connectsdk.C2SCommunicatorConfiguration\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n    var C2SCommunicatorConfiguration = function (sessionDetails, apiVersion) {\r\n        this.endpoints = {\r\n            PROD: {\r\n                EU: {\r\n                    API: \"https://ams1.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.secured-by-ingenico.com\"\r\n                }\r\n            },\r\n            PREPROD: {\r\n                EU: {\r\n                    API: \"https://ams1.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.preprod.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.preprod.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.preprod.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par-preprod.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.preprod.secured-by-ingenico.com\"\r\n                }\r\n            },\r\n            SANDBOX: {\r\n                EU: {\r\n                    API: \"https://ams1.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay1.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                US: {\r\n                    API: \"https://us.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay2.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://ams2.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay3.sandbox.secured-by-ingenico.com\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://par.sandbox.api-ingenico.com/client/v1\",\r\n                    ASSETS: \"https://assets.pay4.sandbox.secured-by-ingenico.com\"\r\n                }\r\n            }\r\n\r\n            // Non public settings. Only needed in GC development environment. Do not use\r\n            // these, they will not work outside GC.\r\n            ,\r\n            INTEGRATION: {\r\n                EU: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                US: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                }\r\n            },\r\n            DEV_NAMI: {\r\n                EU: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                US: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                AMS: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                },\r\n                PAR: {\r\n                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\",\r\n                    ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                }\r\n            },\r\n            DEV_ISC: {\r\n                EU: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                },\r\n                US: {\r\n                    API: \"//api.gc-ci-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-ci-dev.isaac.local\"\r\n                },\r\n                AMS: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                },\r\n                PAR: {\r\n                    API: \"//api.gc-dev.isaac.local/client/v1\",\r\n                    ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                }\r\n            }\r\n        };\r\n\r\n        // clientSessionID, assetBaseUrl and apiBaseUrl are deprecated but still may be used. Here we check for presense of new variables, if they dont exist... Use the old variables.\r\n        if (!sessionDetails.clientSessionId) {\r\n            sessionDetails.clientSessionId = sessionDetails.clientSessionID;\r\n        } else if (sessionDetails.clientSessionID) {\r\n            throw new Error(\"You cannot use both the clientSessionId and the clientSessionID at the same time, please use the clientSessionId only.\");\r\n        }\r\n        if (!sessionDetails.assetUrl) {\r\n            sessionDetails.assetUrl = sessionDetails.assetsBaseUrl\r\n        } else if (sessionDetails.assetsBaseUrl) {\r\n            throw new Error(\"You cannot use both the assetUrl and the assetsBaseUrl at the same time, please use the assetUrl only.\");\r\n        }\r\n        if (!sessionDetails.clientApiUrl) {\r\n            sessionDetails.clientApiUrl = sessionDetails.apiBaseUrl\r\n        } else if (sessionDetails.apiBaseUrl) {\r\n            throw new Error(\"You cannot use both the clientApiUrl and the apiBaseUrl at the same time, please use the clientApiUrl only.\");\r\n        }\r\n\r\n        this.clientSessionId = sessionDetails.clientSessionId;\r\n        this.customerId = sessionDetails.customerId;\r\n\r\n        // can be removed in a newer version of the SDK from this line\r\n        if (sessionDetails.region && !sessionDetails.clientApiUrl) {\r\n            // use regions; old stuff\r\n            console.warn(\"Using regions is deprecated, switch to clientApiUrl\");\r\n            this.clientApiUrl = this.endpoints[sessionDetails.environment][sessionDetails.region].API;\r\n            this.assetUrl = this.endpoints[sessionDetails.environment][sessionDetails.region].ASSETS;\r\n        } else {\r\n            // till this line; normal behaviour is below\r\n            // ignore the region here\r\n            this.clientApiUrl = sessionDetails.clientApiUrl;\r\n            this.assetUrl = sessionDetails.assetUrl;\r\n            if (!this.clientApiUrl) {\r\n                throw new Error(\"This version of the connectSDK requires an clientApiUrl, which you did not provide.\");\r\n            }\r\n            if (!this.assetUrl) {\r\n                throw new Error(\"This version of the connectSDK requires an assetUrl, which you did not provide.\");\r\n            }\r\n\r\n            // now that the clientApiUrl is set check when if the api version is set in the URL, its the correct version break if not.\r\n            if (this.clientApiUrl.indexOf(\"//\") === -1) {\r\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\r\n            }\r\n            var tester = this.clientApiUrl.split(\"/\"); // [0] = (http(s): || \"\") , [1] = \"\", [2] = \"host:port\", [3+] = path\r\n            if (tester[0] !== \"\" && tester[0].indexOf(\"http\") !== 0) {\r\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\r\n            }\r\n            // if you cannot provide an URL that starts with (http(s)::)// and want an error: please provide a PR :)\r\n\r\n            var path = tester.splice(3).join(\"/\"); // the path (if no path; path = \"\").\r\n            if (!path) { //If path == \"\"\r\n                this.clientApiUrl += \"/\" + apiVersion;\r\n            } else if (path === 'client') { //If path == client\r\n                this.clientApiUrl += \"/\" + apiVersion.split('/')[1];\r\n            } else if (path.indexOf(apiVersion) !== 0 || path.length !== apiVersion.length) {\r\n                throw new Error(\"This version of the connectSDK is only compatible with \" + apiVersion + \", you supplied: '\" + path + \"'\");\r\n            }\r\n        }\r\n    };\r\n    connectsdk.C2SCommunicatorConfiguration = C2SCommunicatorConfiguration;\r\n    return C2SCommunicatorConfiguration;\r\n});","define(\"connectsdk.IinDetailsResponse\", [\"connectsdk.core\", \"connectsdk.promise\"], function(connectsdk, Promise) {\r\n\r\n\tvar IinDetailsResponse = function () {\r\n\t\tthis.status = '';\r\n\t\tthis.countryCode = '';\r\n\t\tthis.paymentProductId = '';\r\n\t\tthis.isAllowedInContext = '';\r\n\t\tthis.coBrands = [];\r\n\t};\r\n\tconnectsdk.IinDetailsResponse = IinDetailsResponse;\r\n\treturn IinDetailsResponse;\r\n});","define(\"connectsdk.C2SCommunicator\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.net\", \"connectsdk.Util\", \"connectsdk.PublicKeyResponse\", \"connectsdk.IinDetailsResponse\", \"connectsdk.GooglePay\", \"connectsdk.ApplePay\"], function (connectsdk, Promise, Net, Util, PublicKeyResponse, IinDetailsResponse, GooglePay, ApplePay) {\r\n\tvar C2SCommunicator = function (c2SCommunicatorConfiguration, paymentProduct) {\r\n\t\tvar _c2SCommunicatorConfiguration = c2SCommunicatorConfiguration;\r\n\t\tvar _util = Util.getInstance();\r\n\t\tvar _cache = {};\r\n\t\tvar _providedPaymentProduct = paymentProduct;\r\n\t\tvar that = this;\r\n\t\tvar _GooglePay = new GooglePay(that);\r\n\t\tvar _ApplePay = new ApplePay(that);\r\n\r\n\t\tvar _mapType = {\r\n\t\t\t\"expirydate\": \"tel\",\r\n\t\t\t\"string\": \"text\",\r\n\t\t\t\"numericstring\": \"tel\",\r\n\t\t\t\"integer\": \"number\",\r\n\t\t\t\"expirationDate\": \"tel\"\r\n\t\t};\r\n\r\n\t\tvar formatUrl = function (url) {\r\n\t\t\treturn (url && endsWith(url, '/')) ? url : url + '/';\r\n\t\t};\r\n\r\n\t\tvar formatImageUrl = function (url, imageUrl) {\r\n\t\t\turl = formatUrl(url);\r\n\t\t\t// _cleanJSON can be called multiple times with the same data (which is cached between calls).\r\n\t\t\t// Don't prepend the url after the first time.\r\n\t\t\tif (startsWith(imageUrl, url)) {\r\n\t\t\t\treturn imageUrl;\r\n\t\t\t}\r\n\t\t\treturn url + imageUrl;\r\n\t\t};\r\n\r\n\t\tvar startsWith = function (string, prefix) {\r\n\t\t\treturn string.indexOf(prefix) === 0;\r\n\t\t};\r\n\r\n\t\tvar endsWith = function (string, suffix) {\r\n\t\t\treturn string.indexOf(suffix, string.length - suffix.length) !== -1;\r\n\t\t};\r\n\r\n\t\tvar _cleanJSON = function (json, url) {\r\n\t\t\tfor (var i = 0, il = json.fields.length; i < il; i++) {\r\n\t\t\t\tvar field = json.fields[i];\r\n\t\t\t\tfield.type = (field.displayHints && field.displayHints.obfuscate) ? \"password\" : _mapType[field.type];\r\n\r\n\t\t\t\t// helper code for templating tools like Handlebars\r\n\t\t\t\tfor (validatorKey in field.dataRestrictions.validators) {\r\n\t\t\t\t\tfield.validators = field.validators || [];\r\n\t\t\t\t\tfield.validators.push(validatorKey);\r\n\t\t\t\t}\r\n\t\t\t\tif (field.displayHints && field.displayHints.formElement && field.displayHints.formElement.type === 'list') {\r\n\t\t\t\t\tfield.displayHints.formElement.list = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// full image paths\r\n\t\t\t\tif (field.displayHints && field.displayHints.tooltip && field.displayHints.tooltip.image) {\r\n\t\t\t\t\tfield.displayHints.tooltip.image = formatImageUrl(url, field.displayHints.tooltip.image);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// The server orders in a different way, so we apply the sortorder\r\n\t\t\tjson.fields.sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\t// set full image path\r\n\t\t\tjson.displayHints.logo = formatImageUrl(url, json.displayHints.logo);\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _extendLogoUrl = function (json, url, postfix) {\r\n\t\t\tfor (var i = 0, il = json[\"paymentProduct\" + postfix].length; i < il; i++) {\r\n\t\t\t\tvar product = json[\"paymentProduct\" + postfix][i];\r\n\t\t\t\tproduct.displayHints.logo = formatImageUrl(url, product.displayHints.logo);\r\n\t\t\t}\r\n\t\t\tjson[\"paymentProduct\" + postfix].sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _isPaymentProductInList = function (list, paymentProductId) {\r\n\t\t\tfor (var i = list.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\tvar product = list[i];\r\n\t\t\t\tif (product && (product.id === paymentProductId)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tvar _getGooglePayData = function (list, paymentProductId) {\r\n\t\t\tfor (var i = list.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\tvar product = list[i];\r\n\t\t\t\tif (product && (product.id === paymentProductId)) {\r\n\t\t\t\t\treturn product.paymentProduct320SpecificData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tvar metadata = _util.getMetadata();\r\n\r\n\t\tvar resolveGetBasicPaymentProducts = function(json, promise, cacheKey) {\r\n\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t_cache[cacheKey] = json;\r\n\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t} else {\r\n\t\t\t\tpromise.resolve(json);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.getBasicPaymentProducts = function (context, paymentProductSpecificInputs) {\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tpaymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProducts-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ cacheKeyLocale + context.isRecurring + \"_\" + context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterLocale = context.locale ? \"&locale=\" + context.locale : '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields\" + urlParameterLocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"s\");\r\n\t\t\t\t\t\t\tif (_isPaymentProductInList(json.paymentProducts, _util.applePayPaymentProductId)) {\r\n\t\t\t\t\t\t\t\t_ApplePay.isApplePayAvailable()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (_isPaymentProductInList(json.paymentProducts, _util.googlePayPaymentProductId)\r\n\t\t\t\t\t\t\t\t&& _GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n\t\t\t\t\t\t\t\tvar googlePayData = _getGooglePayData(json.paymentProducts, _util.googlePayPaymentProductId);\r\n\t\t\t\t\t\t\t\t_GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, googlePayData).then(function () {\r\n\t\t\t\t\t\t\t\t\tresolveGetBasicPaymentProducts(json, promise, cacheKey);\r\n\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\tresolveGetBasicPaymentProducts(json, promise, cacheKey);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tresolveGetBasicPaymentProducts(json, promise, cacheKey);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject('failed to retrieve Basic Payment Products', res);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function (context) {\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroups-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ cacheKeyLocale + context.isRecurring + \"_\" + context.currency;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterLocale = context.locale ? \"&locale=\" + context.locale : '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields\" + urlParameterLocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"Groups\");\r\n\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function (paymentProductId, context, paymentProductSpecificInputs) {\r\n\t\t\tpaymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProduct-\" + paymentProductId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\r\n\t\t\tif (_util.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(paymentProductId) > -1) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.reject({\r\n\t\t\t\t\t\t\"errorId\": \"48b78d2d-1b35-4f8b-92cb-57cc2638e901\",\r\n\t\t\t\t\t\t\"errors\": [{\r\n\t\t\t\t\t\t\t\"code\": \"1007\",\r\n\t\t\t\t\t\t\t\"propertyName\": \"productId\",\r\n\t\t\t\t\t\t\t\"message\": \"UNKNOWN_PRODUCT_ID\",\r\n\t\t\t\t\t\t\t\"httpStatusCode\": 404\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductId) {\r\n\t\t\t\t\tif (!_cache[cacheKey]) {\r\n\t\t\t\t\t\t_cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar urlParameterlocale = context.locale ? \"&locale=\" + context.locale : '';\r\n\t\t\t\t\tvar getPaymentProductUrl = formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t\t+ \"/products/\" + paymentProductId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t\t+ \"&currencyCode=\" + context.currency + urlParameterlocale;\r\n\r\n\t\t\t\t\tif ((paymentProductId === _util.bancontactPaymentProductId) &&\r\n\t\t\t\t\t\tpaymentProductSpecificInputs &&\r\n\t\t\t\t\t\tpaymentProductSpecificInputs.bancontact &&\r\n\t\t\t\t\t\tpaymentProductSpecificInputs.bancontact.forceBasicFlow) {\r\n\t\t\t\t\t\t// Add query parameter to products call to force basic flow for bancontact\r\n\t\t\t\t\t\tgetPaymentProductUrl += \"&forceBasicFlow=\" + paymentProductSpecificInputs.bancontact.forceBasicFlow\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgetPaymentProductUrl += \"&cacheBust=\" + cacheBust;\r\n\r\n\t\t\t\t\tNet.get(getPaymentProductUrl)\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\tif (paymentProductId === _util.applePayPaymentProductId && !_ApplePay.isApplePayAvailable()) {\r\n\t\t\t\t\t\t\t\t\t// ApplePay is available in the payment context but the client does not support it.\r\n\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t} else if (paymentProductId === _util.googlePayPaymentProductId\r\n\t\t\t\t\t\t\t\t\t&& _GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n\t\t\t\t\t\t\t\t\tvar networks = cleanedJSON.paymentProduct320SpecificData.networks;\r\n\t\t\t\t\t\t\t\t\t_GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, networks).then(function (isGooglePayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\tif (isGooglePayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t//_isGooglePayAvailable returned false so google pay is not available, so reject getPaymentProduct\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\t//_isGooglePayAvailable rejected so not available\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tpromise.reject('failed to retrieve Payment Product', res);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, context) {\r\n\t\t\tvar cacheKeyLocale = context.locale ? context.locale + \"_\" : '';\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroup-\" + paymentProductGroupId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency;\r\n\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductGroupId) {\r\n\t\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar urlParameterlocale = context.locale ? \"&locale=\" + context.locale : '';\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups/\" + paymentProductGroupId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t+ \"&currencyCode=\" + context.currency + urlParameterlocale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetUrl);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductIdByCreditCardNumber = function (partialCreditCardNumber, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, iinDetailsResponse = new IinDetailsResponse()\r\n\t\t\t\t, cacheKey = \"getPaymentProductIdByCreditCardNumber-\" + partialCreditCardNumber;\r\n\r\n\t\t\tvar that = this;\r\n\t\t\tthis.context = context;\r\n\t\t\tif (_cache[cacheKey]) {// cache is based on digit 1-6\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar isEnoughDigits = function (partialCreditCardNumber) {\r\n\t\t\t\t\treturn partialCreditCardNumber.length >= 6;\r\n\t\t\t\t};\r\n\t\t\t\tif (isEnoughDigits(partialCreditCardNumber)) {\r\n\t\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/services/getIINdetails\")\r\n\t\t\t\t\t\t.data(JSON.stringify(this.convertContextToIinDetailsContext(partialCreditCardNumber, this.context)))\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.json = res.responseJSON;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.countryCode = res.responseJSON.countryCode;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.paymentProductId = res.responseJSON.paymentProductId;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.isAllowedInContext = res.responseJSON.isAllowedInContext;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.coBrands = res.responseJSON.coBrands;\r\n\t\t\t\t\t\t\t\t// check if this card is supported\r\n\t\t\t\t\t\t\t\t// if isAllowedInContext is available in the response set status and resolve\r\n\t\t\t\t\t\t\t\tif (res.responseJSON.hasOwnProperty('isAllowedInContext')) {\r\n\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\tif (iinDetailsResponse.isAllowedInContext === false) {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"EXISTING_BUT_NOT_ALLOWED\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//if isAllowedInContext is not available get the payment product again to determine status and resolve\r\n\t\t\t\t\t\t\t\t\tthat.getPaymentProduct(iinDetailsResponse.paymentProductId, that.context).then(function (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\tif (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNSUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tiinDetailsResponse.status = \"NOT_ENOUGH_DIGITS\";\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertContextToIinDetailsContext = function (partialCreditCardNumber, context) {\r\n\t\t\tvar payload = {\r\n\t\t\t\t\"bin\": partialCreditCardNumber,\r\n\t\t\t\t\"paymentContext\": {\r\n\t\t\t\t\t\"countryCode\": context.countryCode,\r\n\t\t\t\t\t\"isRecurring\": context.isRecurring,\r\n\t\t\t\t\t\"amountOfMoney\": {\r\n\t\t\t\t\t\t\"amount\": context.totalAmount,\r\n\t\t\t\t\t\t\"currencyCode\": context.currency\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Account on file id is needed only in case when the merchant\r\n\t\t\t// uses multiple payment platforms at the same time.\r\n\t\t\tif (typeof context.accountOnFileId !== 'undefined') {\r\n\t\t\t\tpayload.accountOnFileId = context.accountOnFileId;\r\n\t\t\t}\r\n\r\n\t\t\treturn payload;\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"publicKey\";\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/crypto/publickey\")\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar publicKeyResponse = new PublicKeyResponse(res.responseJSON);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = publicKeyResponse;\r\n\t\t\t\t\t\t\tpromise.resolve(publicKeyResponse);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to get public key\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"paymentProductNetworks-\" + paymentProductId + \"_\" + context.countryCode + \"_\" + context.currency + \"_\"\r\n\t\t\t\t\t+ context.totalAmount + \"_\" + context.isRecurring;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products/\" + paymentProductId + \"/networks\" + \"?countryCode=\" + context.countryCode + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&isRecurring=\" + context.isRecurring)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"getPaymentProductDirectory-\" + paymentProductId + \"_\" + currencyCode + \"_\" + countryCode;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/directory?countryCode=\" + countryCode + \"&currencyCode=\" + currencyCode)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to retrieve payment product directory\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"convertAmount-\" + amount + \"_\" + source + \"_\" + target;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/services/convert/amount?source=\" + source + \"&target=\" + target + \"&amount=\" + amount)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to convert amount\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\r\n\t\t\tvar promise = new Promise();\r\n\r\n\t\t\tNet.get(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/payments/\" + paymentId + \"/thirdpartystatus\")\r\n\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t.end(function (res) {\r\n\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpromise.reject(\"unable to retrieve third party status\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getCustomerDetails = function (paymentProductId, context) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar cacheKey = \"getCustomerDetails_\" + context.countryCode;\r\n\t\t\tcacheKey = constructCacheKeyFromKeyValues(cacheKey, context.values);\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/customerDetails\")\r\n\t\t\t\t\t.data(JSON.stringify(context))\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(res.responseJSON);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.createPaymentProductSession = function (paymentProductId, context) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar cacheKey = \"createPaymentProductSession_\" + context.validationURL + \"_\" + context.domainName + \"_\" + context.displayName;\r\n\t\t\tvar requestParameters = {\r\n\t\t\t\t\"paymentProductSession302SpecificInput\": {\r\n\t\t\t\t\t\"validationUrl\": context.validationURL,\r\n\t\t\t\t\t\"domainName\": context.domainName,\r\n\t\t\t\t\t\"displayName\": context.displayName\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.post(formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/sessions\")\r\n\t\t\t\t\t.data(JSON.stringify(requestParameters))\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(res.responseJSON);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.initApplePayPayment = function (context, paymentProductSpecificInputs, networks) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar _context = context;\r\n\t\t\t_context.displayName = paymentProductSpecificInputs.merchantName;\r\n\t\t\t_context.networks = networks;\r\n\r\n\t\t\t_ApplePay.initPayment(_context, this).then(function (res) {\r\n\t\t\t\tpromise.resolve(res);\r\n\t\t\t}, function (res) {\r\n\t\t\t\tpromise.reject(res);\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t}\r\n\r\n\r\n\t\tvar constructCacheKeyFromKeyValues = function (prefix, values) {\r\n\t\t\tvar cacheKey = prefix;\r\n\t\t\tfor (var key in values) {\r\n\t\t\t\tif (values.hasOwnProperty(key)) {\r\n\t\t\t\t\tcacheKey += \"_\" + values[key].key + \"_\" + values[key].value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn cacheKey;\r\n\t\t};\r\n\r\n\t\t/* Transforms the JSON representation of a payment product (group) so it matches the result of getPaymentProduct and getPaymentProductGroup. */\r\n\t\tthis.transformPaymentProductJSON = function (json) {\r\n\t\t\treturn _cleanJSON(json, _c2SCommunicatorConfiguration.assetUrl)\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.C2SCommunicator = C2SCommunicator;\r\n\treturn C2SCommunicator;\r\n});\r\n","define(\"connectsdk.LabelTemplateElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar LabelTemplateElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.attributeKey = json.attributeKey;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.LabelTemplateElement = LabelTemplateElement;\r\n\treturn LabelTemplateElement;\r\n});","define(\"connectsdk.Attribute\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Attribute = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.key = json.key;\r\n\t\tthis.value = json.value;\r\n\t\tthis.status = json.status;\r\n\t\tthis.mustWriteReason = json.mustWriteReason;\r\n\t};\r\n\r\n\tconnectsdk.Attribute = Attribute;\r\n\treturn Attribute;\r\n});","define(\"connectsdk.AccountOnFileDisplayHints\", [\"connectsdk.core\", \"connectsdk.LabelTemplateElement\"], function(connectsdk, LabelTemplateElement) {\r\n\r\n\tvar _parseJSON = function (_json, _labelTemplate, _labelTemplateElementByAttributeKey) {\r\n\t\tif (_json.labelTemplate) {\r\n\t\t\tfor (var i = 0, l = _json.labelTemplate.length; i < l; i++) {\r\n\t\t\t\tvar labelTemplateElement = new LabelTemplateElement(_json.labelTemplate[i]);\r\n\t\t\t\t_labelTemplate.push(labelTemplateElement);\r\n\t\t\t\t_labelTemplateElementByAttributeKey[labelTemplateElement.attributeKey] = labelTemplateElement;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFileDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.labelTemplate = [];\r\n\t\tthis.labelTemplateElementByAttributeKey = {};\r\n\r\n\t\t_parseJSON(json, this.labelTemplate, this.labelTemplateElementByAttributeKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFileDisplayHints = AccountOnFileDisplayHints;\r\n\treturn AccountOnFileDisplayHints;\r\n});","define(\"connectsdk.AccountOnFile\", [\"connectsdk.core\" ,\"connectsdk.AccountOnFileDisplayHints\", \"connectsdk.Attribute\"], function(connectsdk, AccountOnFileDisplayHints, Attribute) {\r\n\r\n\tvar _parseJSON = function (_json, _attributes, _attributeByKey) {\r\n\t\tif (_json.attributes) {\r\n\t\t\tfor (var i = 0, l = _json.attributes.length; i < l; i++) {\r\n\t\t\t\tvar attribute = new Attribute(_json.attributes[i]);\r\n\t\t\t\t_attributes.push(attribute);\r\n\t\t\t\t_attributeByKey[attribute.key] = attribute;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFile = function (json) {\r\n\t\tvar that = this;\r\n\t\tthis.json = json;\r\n\t\tthis.attributes = [];\r\n\t\tthis.attributeByKey = {};\r\n\t\tthis.displayHints = new AccountOnFileDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.paymentProductId = json.paymentProductId;\r\n\r\n\t\tthis.getMaskedValueByAttributeKey = function(attributeKey) {\r\n\t\t\tvar value = this.attributeByKey[attributeKey].value;\r\n\t\t\tvar wildcardMask;\r\n\t\t\ttry {\r\n\t\t\t\twildcardMask = this.displayHints.labelTemplateElementByAttributeKey[attributeKey].wildcardMask;\r\n\t\t\t} catch (e) {}\r\n\t\t\tif (value !== undefined && wildcardMask !== undefined) {\r\n\t\t\t\tvar maskingUtil = new connectsdk.MaskingUtil();\r\n\t\t\t\treturn maskingUtil.applyMask(wildcardMask, value);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t};\r\n\r\n\t\t_parseJSON(json, this.attributes, this.attributeByKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFile = AccountOnFile;\r\n\treturn AccountOnFile;\r\n});","define(\"connectsdk.PaymentProduct302SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct302SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.networks = json.networks;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct302SpecificData = PaymentProduct302SpecificData;\r\n\treturn PaymentProduct302SpecificData;\r\n});","define(\"connectsdk.PaymentProduct320SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct320SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.gateway = json.gateway;\r\n\t\tthis.networks = json.networks;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct320SpecificData = PaymentProduct320SpecificData;\r\n\treturn PaymentProduct320SpecificData;\r\n});","define(\"connectsdk.PaymentProduct863SpecificData\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProduct863SpecificData = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.integrationTypes = json.integrationTypes;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct863SpecificData = PaymentProduct863SpecificData;\r\n\treturn PaymentProduct863SpecificData;\r\n});","define(\"connectsdk.PaymentProductDisplayHints\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProductDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayOrder = json.displayOrder;\r\n\t\tthis.label = json.label;\r\n\t\tthis.logo = json.logo;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductDisplayHints = PaymentProductDisplayHints;\r\n\treturn PaymentProductDisplayHints;\r\n});","define(\"connectsdk.BasicPaymentProduct\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\", \"connectsdk.PaymentProduct302SpecificData\", \"connectsdk.PaymentProduct320SpecificData\", \"connectsdk.PaymentProduct863SpecificData\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints, PaymentProduct302SpecificData, PaymentProduct320SpecificData, PaymentProduct863SpecificData) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProduct, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (_json.paymentProduct302SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct302SpecificData = new PaymentProduct302SpecificData(_json.paymentProduct302SpecificData);\r\n\t\t}\r\n\t\tif (_json.paymentProduct320SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct320SpecificData = new PaymentProduct320SpecificData(_json.paymentProduct320SpecificData);\r\n\t\t}\r\n\t\tif (_json.paymentProduct863SpecificData) {\r\n\t\t\t_paymentProduct.paymentProduct863SpecificData = new PaymentProduct863SpecificData(_json.paymentProduct863SpecificData);\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProduct = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"product\";\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.allowsRecurring = json.allowsRecurring;\r\n\t\tthis.allowsTokenization = json.allowsTokenization;\r\n\t\tthis.autoTokenized  = json.autoTokenized ;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.maxAmount = json.maxAmount;\r\n\t\tthis.minAmount = json.minAmount;\r\n\t\tthis.paymentMethod = json.paymentMethod;\r\n\t\tthis.mobileIntegrationLevel = json.mobileIntegrationLevel;\r\n\t\tthis.usesRedirectionTo3rdParty = json.usesRedirectionTo3rdParty;\r\n\t\tthis.paymentProductGroup = json.paymentProductGroup;\r\n\r\n\t\t_parseJSON(json, this, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProduct = BasicPaymentProduct;\r\n\treturn BasicPaymentProduct;\r\n});","define(\"connectsdk.BasicPaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\r\n\r\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroup = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"group\";\r\n\t\tthis.id = json.id;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroup = BasicPaymentProductGroup;\r\n\treturn BasicPaymentProductGroup;\r\n});","define(\"connectsdk.MaskedString\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar MaskedString = function(formattedValue, cursorIndex) {\r\n\r\n\t\tthis.formattedValue = formattedValue;\r\n\t\tthis.cursorIndex = cursorIndex;\r\n\t};\r\n\r\n\tconnectsdk.MaskedString = MaskedString;\r\n\treturn MaskedString;\r\n});","define(\"connectsdk.MaskingUtil\", [\"connectsdk.core\", \"connectsdk.MaskedString\"], function(connectsdk, MaskedString) {\r\n\r\n\tvar _fillBuffer = function(index, offset, buffer, tempMask, valuec) {\r\n\t\tif (index+offset < valuec.length && index < tempMask.length) {\r\n\t\t\tif ((tempMask[index] === \"9\" && Number(valuec[index+offset]) > -1 && valuec[index+offset] !== \" \") || tempMask[index] === \"*\") {\r\n\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t} else {\r\n\t\t\t\tif (valuec[index+offset] === tempMask[index]) {\r\n\t\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t\t} else if (tempMask[index] !== \"9\" && tempMask[index] !== \"*\") {\r\n\t\t\t\t\tbuffer.push(tempMask[index]);\r\n\t\t\t\t\toffset--;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// offset++;\r\n\t\t\t\t\tvaluec.splice(index+offset, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_fillBuffer(index+1, offset, buffer, tempMask, valuec);\r\n\t\t}\r\n\t};\r\n\r\n\tvar MaskingUtil = function () {\r\n\t\tthis.applyMask = function (mask, newValue, oldValue) {\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = newValue.split(\"\");\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\ttempMask = [];\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttempMask.push(c);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// tempmask now contains the replaceable chars and the non-replaceable masks at the correct index\r\n\t\t\t\t_fillBuffer(0, 0, buffer, tempMask, valuec);\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnewValue = buffer.join(\"\");\r\n\t\t\tvar cursor = 1;\r\n\t\t\t// calculate the cursor index\r\n\t\t\tif (oldValue) {\r\n\t\t\t\tvar tester = oldValue.split(\"\");\r\n\t\t\t\tfor (var i = 0, il = buffer.length; i < il; i++) {\r\n\t\t\t\t\tif (buffer[i] !== tester[i]) {\r\n\t\t\t\t\t\tcursor = i+1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (newValue.substring(0, newValue.length -1) === oldValue) {\r\n\t\t\t\tcursor = newValue.length + 1;\r\n\t\t\t}\r\n\t\t\treturn new MaskedString(newValue, cursor);\r\n\t\t};\r\n\r\n\t\tthis.getMaxLengthBasedOnMask = function (mask) {\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tnewLength = -1;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tnewLength++;\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tnewLength--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newLength;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.removeMask = function (mask, value) {\r\n\t\t\t// remove the mask from the masked input\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = (value) ? value.split(\"\") : [];\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tvalueIndex = -1,\r\n\t\t\t\t\t\tinMask = false;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tvalueIndex++;\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tvalueIndex--;\r\n\t\t\t\t\t\tif (c === \"{\") {\r\n\t\t\t\t\t\t\tinMask = true;\r\n\t\t\t\t\t\t} else if (c === \"}\") {\r\n\t\t\t\t\t\t\tinMask = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (inMask && valuec[valueIndex]) {\r\n\t\t\t\t\t\t\tbuffer.push(valuec[valueIndex]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn buffer.join(\"\").trim();\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.MaskingUtil = MaskingUtil;\r\n\treturn MaskingUtil;\r\n});\r\n","define(\"connectsdk.ValidationRuleLuhn\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLuhn = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.validate = function (value) {\r\n\t\t\tvar luhnArr = [[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]]\r\n\t\t\t\t,sum = 0;\r\n\r\n\t   \t\tvalue.replace(/\\D+/g,\"\").replace(/[\\d]/g, function(c, p, o) {\r\n\t\t        sum += luhnArr[ (o.length-p)&1 ][ parseInt(c,10) ];\r\n\t\t    });\r\n\t\t    return (sum%10 === 0) && (sum > 0);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLuhn = ValidationRuleLuhn;\r\n\treturn ValidationRuleLuhn;\r\n});\r\n","define(\"connectsdk.ValidationRuleExpirationDate\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\tvar _validateDateFormat = function (value) {\r\n\t\t// value is mmYY or mmYYYY\r\n\t\tvar pattern = /\\d{4}|\\d{6}$/g;\r\n\t\treturn pattern.test(value);\r\n\t};\r\n\r\n\tvar ValidationRuleExpirationDate = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type;\r\n\t\tthis.errorMessageId = json.type;\r\n\r\n\t\tthis.validate = function (value) {\r\n\r\n\t\t\tvalue = value.replace(/[^\\d]/g, '');\r\n\t\t\tif (!_validateDateFormat(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar split;\r\n\t\t\tif (value.length === 4) {\r\n\t\t\t\tsplit = [value.substring(0, 2), \"20\" + value.substring(2, 4)];\r\n\t\t\t} else if (value.length === 6) {\r\n\t\t\t\tsplit = [value.substring(0, 2), value.substring(2, 6)];\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// The month is zero-based, so subtract one.\r\n\t\t\tvar expirationMonth = split[0] - 1;\r\n\t\t\tvar expirationYear = split[1];\r\n\t\t\tvar expirationDate = new Date(expirationYear, expirationMonth, 1);\r\n\r\n\t\t\t// Compare the input with the parsed date, to check if the date rolled over.\r\n\t\t\tif (expirationDate.getMonth() !== Number(expirationMonth) || expirationDate.getFullYear() !== Number(expirationYear)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// For comparison, set the current year & month and the maximum allowed expiration date.\r\n\t\t\tvar nowWithDay = new Date();\r\n\t\t\tvar now = new Date(nowWithDay.getFullYear(), nowWithDay.getMonth(), 1);\r\n\t\t\tvar maxExpirationDate = new Date(nowWithDay.getFullYear() + 25, 11, 1);\r\n\r\n\t\t\t// The card is still valid if it expires this month.\r\n\t\t\treturn expirationDate >= now && expirationDate <= maxExpirationDate;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleExpirationDate = ValidationRuleExpirationDate;\r\n\treturn ValidationRuleExpirationDate;\r\n});\r\n","define(\"connectsdk.ValidationRuleFixedList\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleFixedList = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.allowedValues = json.attributes.allowedValues;\r\n\r\n\t\tthis.validate = function (value) {\r\n\t\t\tfor (var i = 0, il = this.allowedValues.length; i < il; i++) {\r\n\t\t\t\tif (this.allowedValues[i] === value) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleFixedList = ValidationRuleFixedList;\r\n\treturn ValidationRuleFixedList;\r\n});\r\n","define(\"connectsdk.ValidationRuleLength\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLength = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxLength = json.attributes.maxLength;\r\n\t\tthis.minLength = json.attributes.minLength;\r\n\r\n\t\tthis.validate = function (value) {\r\n\t\t\treturn this.minLength <= value.length && value.length <= this.maxLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLength = ValidationRuleLength;\r\n\treturn ValidationRuleLength;\r\n});\r\n","define(\"connectsdk.ValidationRuleRange\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRange = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxValue = json.attributes.maxValue;\r\n\t\tthis.minValue = json.attributes.minValue;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\tif (isNaN(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = Number(value);\r\n\t\t\treturn this.minValue <= value && value <= this.maxValue;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRange = ValidationRuleRange;\r\n\treturn ValidationRuleRange;\r\n});\r\n","define(\"connectsdk.ValidationRuleRegularExpression\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRegularExpression = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.regularExpression = json.attributes.regularExpression;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(this.regularExpression);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRegularExpression = ValidationRuleRegularExpression;\r\n\treturn ValidationRuleRegularExpression;\r\n});\r\n","define(\"connectsdk.ValidationRuleResidentIdNumber\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleResidentIdNumber = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\r\n        // https://en.wikipedia.org/wiki/Resident_Identity_Card\r\n\t\tvar weights = [];\r\n\t\t// storing weights in the reverse order so that we can begin\r\n\t\t// from the 0th position of ID while calculating checksum\r\n\t\tfor(var i=18; i > 0; i--) {\r\n\t\t\tweights.push(Math.pow(2, i-1) % 11);\r\n\t\t}\r\n\r\n\t\tthis.validate = function (value) {\r\n\t\t\tif(value.length < 15) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(value.length == 15) {\r\n\t\t\t\treturn !isNaN(value);\r\n\t\t\t}\r\n\r\n\t\t\tif(value.length < 18 || value.length > 18) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n            var sum = 0;\r\n            for(var i = 0; i < value.length-1; i++) {\r\n            \tsum += value.charAt(i) * weights[i];\r\n            }\r\n\r\n            var checkSum = (12 - (sum % 11)) % 11;\r\n            var csChar = value.charAt(17);\r\n\r\n            if(checkSum < 10) {\r\n               return (checkSum == csChar); // check only values\r\n            }\r\n\r\n\t\t    return (csChar === 'X'); // check the type as well\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleResidentIdNumber = ValidationRuleResidentIdNumber;\r\n\treturn ValidationRuleResidentIdNumber;\r\n});","define(\"connectsdk.ValidationRuleEmailAddress\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleEmailAddress = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\tthis.errorMessageId = json.type;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(/^[^@\\.]+(\\.[^@\\.]+)*@([^@\\.]+\\.)*[^@\\.]+\\.[^@\\.][^@\\.]+$/i);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleEmailAddress = ValidationRuleEmailAddress;\r\n\treturn ValidationRuleEmailAddress;\r\n});","define(\"connectsdk.ValidationRuleTermsAndConditions\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleTermsAndConditions = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\tthis.errorMessageId = json.type;\r\n\r\n\t\tthis.validate = function(value) {\r\n\t\t\treturn true === value || \"true\" === value;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleTermsAndConditions = ValidationRuleTermsAndConditions;\r\n\treturn ValidationRuleTermsAndConditions;\r\n});","define(\"connectsdk.ValidationRuleBoletoBancarioRequiredness\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleBoletoBancarioRequiredness = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.fiscalNumberLength = json.attributes.fiscalNumberLength;\r\n\r\n\t\tthis.validate = function (value, fiscalNumberValue) {\r\n\t\t\tif (typeof fiscalNumberValue === 'undefined') {\r\n\t\t\t\tfiscalNumberValue = '';\r\n\t\t\t}\r\n\r\n\t\t\treturn (fiscalNumberValue.length === this.fiscalNumberLength && value.length > 0) || fiscalNumberValue.length !== this.fiscalNumberLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleBoletoBancarioRequiredness = ValidationRuleBoletoBancarioRequiredness;\r\n\treturn ValidationRuleBoletoBancarioRequiredness;\r\n});\r\n","define('connectsdk.ValidationRuleIban', ['connectsdk.core'], function (connectsdk) {\r\n\r\n  /**\r\n   * Sanitize value by remove all unwanted chars of a Iban format\r\n   *\r\n   * @param {String} value\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  var _sanitizeValue = function (value) {\r\n    return value.replace(/[^\\d\\w]+/g, '').toUpperCase();\r\n  };\r\n\r\n  /**\r\n   * Get state if given value is a valid Iban format\r\n   *\r\n   * @param {String} value\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  var _isValidFormat = function (value) {\r\n    return typeof value === 'string' && /^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{7}([A-Z0-9]?){0,16}$/.test(_sanitizeValue(value));\r\n  };\r\n\r\n  /**\r\n   * Convert a value to a string needed for validation calculations\r\n   *\r\n   * @param {String} value\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  var _toComputedString = function (value) {\r\n    return _sanitizeValue(value)\r\n\r\n    // place the first 4 chars to the end\r\n      .replace(/(^.{4})(.*)/, '$2$1')\r\n\r\n      // replace letters by corresponding numbers A=10 / Z=35\r\n      .replace(/[A-Z]/g, function (d) {\r\n        return d.charCodeAt(0) - 55;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Validate Iban by given json\r\n   *\r\n   * @param {Object} json\r\n   * @constructor\r\n   */\r\n  var ValidationRuleIban = function (json) {\r\n    this.json           = json;\r\n    this.type           = json.type;\r\n    this.errorMessageId = json.type;\r\n\r\n    /**\r\n     * Validate Iban nrule\r\n     *\r\n     * @see https://github.com/arhs/iban.js/blob/master/iban.js\r\n     *\r\n     * @param   {string} value\r\n     * @returns {boolean}\r\n     */\r\n    this.validate = function (value) {\r\n\r\n      // bail if format is invalid\r\n      if (!_isValidFormat(value)) {\r\n        return false;\r\n      }\r\n\r\n      // Check if reminder module 97 equals 1\r\n      // only then it should pass the validation\r\n      var remainder = _toComputedString(value),\r\n          block;\r\n\r\n      while (remainder.length > 2) {\r\n        block     = remainder.slice(0, 9);\r\n        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\r\n      }\r\n\r\n      return (parseInt(remainder, 10) % 97) === 1;\r\n    };\r\n  };\r\n\r\n  connectsdk.ValidationRuleIban = ValidationRuleIban;\r\n  return ValidationRuleIban;\r\n});","define(\"connectsdk.ValidationRuleFactory\", [\"connectsdk.core\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleTermsAndConditions\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleBoletoBancarioRequiredness\", \"connectsdk.ValidationRuleIban\", \"connectsdk.ValidationRuleResidentIdNumber\"], function (connectsdk, ValidationRuleEmailAddress, ValidationRuleTermsAndConditions, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleBoletoBancarioRequiredness, ValidationRuleIban, ValidationRuleResidentIdNumber) {\r\n\r\n    var validationRules = {\r\n        EmailAddress : ValidationRuleEmailAddress,\r\n        TermsAndConditions: ValidationRuleTermsAndConditions,\r\n        ExpirationDate : ValidationRuleExpirationDate,\r\n        FixedList : ValidationRuleFixedList,\r\n        Length : ValidationRuleLength,\r\n        Luhn: ValidationRuleLuhn,\r\n        Range: ValidationRuleRange,\r\n        RegularExpression: ValidationRuleRegularExpression,\r\n        BoletoBancarioRequiredness: ValidationRuleBoletoBancarioRequiredness,\r\n        Iban: ValidationRuleIban,\r\n        ResidentIdNumber: ValidationRuleResidentIdNumber\r\n    }\r\n\r\n    var ValidationRuleFactory = function () {\r\n        this.makeValidator = function (json) {\r\n            try {\r\n                var rule = json.type.charAt(0).toUpperCase() + json.type.slice(1);\r\n                return new validationRules[rule](json);\r\n            } catch (e) {\r\n                console.warn('no validator for ', rule);\r\n            }\r\n            return null;\r\n        };\r\n    };\r\n\r\n    connectsdk.ValidationRuleFactory = ValidationRuleFactory;\r\n    return ValidationRuleFactory;\r\n});\r\n","define(\"connectsdk.DataRestrictions\", [\"connectsdk.core\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleTermsAndConditions\", \"connectsdk.ValidationRuleIban\", \"connectsdk.ValidationRuleResidentIdNumber\", \"connectsdk.ValidationRuleFactory\"], function(connectsdk, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleEmailAddress, ValidationRuleTermsAndConditions, ValidationRuleIban, ValidationRuleResidentIdNumber, ValidationRuleFactory) {\r\n\r\n\tvar DataRestrictions = function (json, mask) {\r\n\r\n\t\tvar _parseJSON = function (_json, _validationRules, _validationRuleByType) {\r\n\t\t    var validationRuleFactory = new ValidationRuleFactory();\r\n\t\t\tif (_json.validators) {\r\n\t\t\t\tfor (var key in _json.validators) {\r\n\t\t\t\t\tvar validationRule = validationRuleFactory.makeValidator({type: key, attributes: _json.validators[key]});\r\n\t\t\t\t\tif (validationRule) {\r\n\t\t\t\t\t\t_validationRules.push(validationRule);\r\n\t\t\t\t\t\t_validationRuleByType[validationRule.type] = validationRule;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.isRequired = json.isRequired;\r\n\t\tthis.validationRules = [];\r\n\t\tthis.validationRuleByType = {};\r\n\r\n\t\t_parseJSON(json, this.validationRules, this.validationRuleByType);\r\n\t};\r\n\r\n\tconnectsdk.DataRestrictions = DataRestrictions;\r\n\treturn DataRestrictions;\r\n});","define(\"connectsdk.ValueMappingElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValueMappingElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayName = json.displayName;\r\n\t\tthis.value = json.value;\r\n\t};\r\n\r\n\tconnectsdk.ValueMappingElement = ValueMappingElement;\r\n\treturn ValueMappingElement;\r\n});","define(\"connectsdk.FormElement\", [\"connectsdk.core\", \"connectsdk.ValueMappingElement\"], function(connectsdk, ValueMappingElement) {\r\n\r\n\tvar FormElement = function (json) {\r\n\r\n\t\tvar _parseJSON = function (_json, _valueMapping) {\r\n\t\t\tif (_json.valueMapping) {\r\n\t\t\t\tfor (var i = 0, l = _json.valueMapping.length; i < l; i++) {\r\n\t\t\t\t\t_valueMapping.push(new ValueMappingElement(_json.valueMapping[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type;\r\n\t\tthis.valueMapping = [];\r\n\r\n\t\t_parseJSON(json, this.valueMapping);\r\n\t};\r\n\r\n\tconnectsdk.FormElement = FormElement;\r\n\treturn FormElement;\r\n});\r\n","define(\"connectsdk.Tooltip\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Tooltip = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.image = json.image;\r\n\t\tthis.label = json.label;\r\n\t};\r\n\r\n\tconnectsdk.Tooltip = Tooltip;\r\n\treturn Tooltip;\r\n});","define(\"connectsdk.PaymentProductFieldDisplayHints\", [\"connectsdk.core\", \"connectsdk.Tooltip\", \"connectsdk.FormElement\"], function(connectsdk, Tooltip, FormElement) {\r\n\r\n\tvar PaymentProductFieldDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n \t\tthis.displayOrder = json.displayOrder;\r\n\t\tif (json.formElement) {\r\n\t\t\tthis.formElement = new FormElement(json.formElement);\r\n\t\t}\r\n\t\tthis.label = json.label;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.obfuscate = json.obfuscate;\r\n\t\tthis.placeholderLabel = json.placeholderLabel;\r\n\t\tthis.preferredInputType = json.preferredInputType;\r\n\t\tthis.tooltip = json.tooltip? new Tooltip(json.tooltip): undefined;\r\n\t\tthis.alwaysShow = json.alwaysShow;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductFieldDisplayHints = PaymentProductFieldDisplayHints;\r\n\treturn PaymentProductFieldDisplayHints;\r\n});","define(\"connectsdk.PaymentProductField\", [\"connectsdk.core\", \"connectsdk.PaymentProductFieldDisplayHints\", \"connectsdk.DataRestrictions\", \"connectsdk.MaskingUtil\"], function(connectsdk, PaymentProductFieldDisplayHints, DataRestrictions, MaskingUtil) {\r\n\tvar PaymentProductField = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayHints = json.displayHints ? new PaymentProductFieldDisplayHints(json.displayHints) : '';\r\n\t\tthis.dataRestrictions = new DataRestrictions(json.dataRestrictions, this.displayHints ? this.displayHints.mask : '');\r\n\t\tthis.id = json.id;\r\n\t\tthis.type = json.type;\r\n\t\tvar _errorCodes = [];\r\n\r\n\t\tthis.getErrorCodes = function (value) {\r\n\t\t\tif (value) {\r\n\t\t\t\t_errorCodes = [];\r\n\t\t\t\tthis.isValid(value);\r\n\t\t\t}\r\n\t\t\treturn _errorCodes;\r\n\t\t};\r\n\t\tthis.isValid = function (value) {\r\n\t\t\t// isValid checks all datarestrictions\r\n\t\t\tvar validators = this.dataRestrictions.validationRules;\r\n\t\t\tvar hasError = false;\r\n\r\n\t\t\t// Apply masking value first\r\n\t\t\tvar maskedValue = this.applyMask(value);\r\n\t\t\tvalue = this.removeMask(maskedValue.formattedValue);\r\n\t\t\tfor (var i = 0, il = validators.length; i < il; i++) {\r\n\t\t\t\tvar validator = validators[i];\r\n\t\t\t\tif (!validator.validate(value)) {\r\n\t\t\t\t\thasError = true;\r\n\t\t\t\t\t_errorCodes.push(validator.errorMessageId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn !hasError;\r\n\t\t};\r\n\t\tthis.applyMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.mask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.applyWildcardMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.wildcardMask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.removeMask = function (value) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.removeMask(this.displayHints.mask, value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductField = PaymentProductField;\r\n\treturn PaymentProductField;\r\n});","define(\"connectsdk.PaymentProduct\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProduct = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct = PaymentProduct;\r\n\treturn PaymentProduct;\r\n});\r\n","define(\"connectsdk.PaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProductGroup = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.json = json;\r\n\t\tbasicPaymentProduct.json.type = \"group\";\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductGroup = PaymentProductGroup;\r\n\treturn PaymentProductGroup;\r\n});","define(\"connectsdk.BasicPaymentProducts\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\"], function(connectsdk, BasicPaymentProduct) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProducts, _accountsOnFile, _paymentProductById, _accountOnFileById, _paymentProductByAccountOnFileId) {\r\n\t\tif (_json.paymentProducts) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProducts.length; i < il; i++) {\r\n\t\t\t\tvar paymentProduct = new BasicPaymentProduct(_json.paymentProducts[i]);\r\n\t\t\t\t_paymentProducts.push(paymentProduct);\r\n\t\t\t\t_paymentProductById[paymentProduct.id] = paymentProduct;\r\n\r\n\t\t\t\tif (paymentProduct.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProduct.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t\t_paymentProductByAccountOnFileId[aof.id] = paymentProduct;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProducts = function (json) {\r\n\t\tthis.basicPaymentProducts = [];\r\n\t\tthis.basicPaymentProductById = {};\r\n\t\tthis.basicPaymentProductByAccountOnFileId = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProducts, this.accountsOnFile, this.basicPaymentProductById, this.accountOnFileById, this.basicPaymentProductByAccountOnFileId);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProducts = BasicPaymentProducts;\r\n\treturn BasicPaymentProducts;\r\n});","define(\"connectsdk.BasicPaymentProductGroups\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProductGroup\"], function(connectsdk, BasicPaymentProductGroup) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProductGroups, _accountsOnFile, _paymentProductGroupById, _accountOnFileById) {\r\n\t\tif (_json.paymentProductGroups) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductGroup = new BasicPaymentProductGroup(_json.paymentProductGroups[i]);\r\n\t\t\t\t_paymentProductGroups.push(paymentProductGroup);\r\n\t\t\t\t_paymentProductGroupById[paymentProductGroup.id] = paymentProductGroup;\r\n\r\n\t\t\t\tif (paymentProductGroup.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProductGroup.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroups = function (json) {\r\n\t\tthis.basicPaymentProductGroups = [];\r\n\t\tthis.basicPaymentProductGroupById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProductGroups, this.accountsOnFile, this.basicPaymentProductGroupById, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroups = BasicPaymentProductGroups;\r\n\treturn BasicPaymentProductGroups;\r\n});","define(\"connectsdk.BasicPaymentItems\", [\"connectsdk.core\"], function(connectsdk) {\r\n\t\"use strict\";\r\n\r\n\t\tvar _parseJson = function (_products, _groups, _basicPaymentItems) {\r\n\t\tvar doRemove = [];\r\n\t\tif (_groups) {\r\n\t\t\tfor (var i = 0, il = _groups.basicPaymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar groupId = _groups.basicPaymentProductGroups[i].id,\r\n\t\t\t\t\t\tgroupReplaced = false;\r\n\t\t\t\tfor (var j = 0, jl = _products.basicPaymentProducts.length; j < jl; j++) {\r\n\t\t\t\t\tvar productMethod = _products.basicPaymentProducts[j].paymentProductGroup;\r\n\t\t\t\t\tif (productMethod === groupId && groupReplaced === false) {\r\n\t\t\t\t\t\t// replace instance by group\r\n\t\t\t\t\t\t_products.basicPaymentProducts.splice(j, 1, _groups.basicPaymentProductGroups[i]);\r\n\t\t\t\t\t\tgroupReplaced = true;\r\n\t\t\t\t\t} else if (productMethod === groupId && groupReplaced === true) {\r\n\t\t\t\t\t\t// mark for removal\r\n\t\t\t\t\t\tdoRemove.push(j);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = doRemove.length -1, il = 0; i >= il; i--) {\r\n\t\t\t\t_products.basicPaymentProducts.splice(doRemove[i], 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t_basicPaymentItems.basicPaymentItems = JSON.parse(JSON.stringify(_products.basicPaymentProducts));\r\n\t\tfor (var i = 0, il = _basicPaymentItems.basicPaymentItems.length; i < il; i++) {\r\n\t\t\tvar basicPaymentItem = _basicPaymentItems.basicPaymentItems[i];\r\n\t\t\t_basicPaymentItems.basicPaymentItemById[basicPaymentItem.id] = basicPaymentItem;\r\n\t\t\tif (basicPaymentItem.accountsOnFile) {\r\n\t\t\t\tvar aofs = basicPaymentItem.accountsOnFile;\r\n\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t_basicPaymentItems.accountsOnFile.push(aof);\r\n\t\t\t\t\t_basicPaymentItems.accountOnFileById[aof.id] = aof;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tvar BasicPaymentItems = function (products, groups) {\r\n\t\tthis.basicPaymentItems = [];\r\n\t\tthis.basicPaymentItemById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJson(products, groups, this);\r\n\t};\r\n\tconnectsdk.BasicPaymentItems = BasicPaymentItems;\r\n\treturn BasicPaymentItems;\r\n});","define(\"connectsdk.PaymentRequest\", [\"connectsdk.core\"], function(connectsdk) {\r\n  var PaymentRequest = function(clientSessionID) {\r\n    var _clientSessionID = clientSessionID;\r\n    var _fieldValues = {};\r\n    var _paymentProduct = null;\r\n    var _accountOnFile = null;\r\n    var _tokenize = false;\r\n\r\n    this.isValid = function() {\r\n      var errors = this.getErrorMessageIds();\r\n      // besides checking the fields for errors check if all mandatory fields are present as well\r\n      var paymentProduct = this.getPaymentProduct();\r\n      if (!paymentProduct) {\r\n        return false;\r\n      }\r\n      var allRequiredFieldsPresent = true;\r\n      for (var i = 0; i < paymentProduct.paymentProductFields.length; i++) {\r\n        var field = paymentProduct.paymentProductFields[i];\r\n        if (field.dataRestrictions.isRequired) {\r\n          // is this field present in the request?\r\n          var storedValue = this.getValue(field.id);\r\n          if (!storedValue && !this.getAccountOnFile()) {\r\n              // if we have an acoount on file the account on file could have the field, so we can ignore it\r\n            allRequiredFieldsPresent = false;\r\n          }\r\n        }\r\n      }\r\n      return errors.length === 0 && allRequiredFieldsPresent;\r\n    };\r\n    this.setValue = function(paymentProductFieldId, value) {\r\n      _fieldValues[paymentProductFieldId] = value;\r\n    };\r\n    this.setTokenize = function(tokenize) {\r\n      _tokenize = tokenize;\r\n    };\r\n    this.getTokenize = function() {\r\n      return _tokenize;\r\n    };\r\n    this.getErrorMessageIds = function() {\r\n      var errors = [];\r\n      for (key in _fieldValues) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[key];\r\n        if (paymentProductField) {\r\n          errors = errors.concat(paymentProductField.getErrorCodes(_fieldValues[key]));\r\n        }\r\n      }\r\n      return errors;\r\n    };\r\n    this.getValue = function(paymentProductFieldId) {\r\n      return _fieldValues[paymentProductFieldId];\r\n    };\r\n    this.getValues = function() {\r\n      return _fieldValues;\r\n    };\r\n    this.getMaskedValue = function(paymentProductFieldId) {\r\n      var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n      var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n      return maskedString.formattedValue();\r\n    };\r\n    this.getMaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n        result[paymentProductFieldId] = maskedString.formattedValue;\r\n      }\r\n      return result;\r\n    };\r\n    this.getUnmaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        if (paymentProductField) {\r\n          var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n          var formattedValue = maskedString.formattedValue;\r\n          result[paymentProductFieldId] = paymentProductField.removeMask(formattedValue);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n    this.setPaymentProduct = function(paymentProduct) {\r\n      if (paymentProduct.type === \"group\") {\r\n        return;\r\n      }\r\n      _paymentProduct = paymentProduct;\r\n    };\r\n    this.getPaymentProduct = function() {\r\n      return _paymentProduct;\r\n    };\r\n    this.setAccountOnFile = function(accountOnFile) {\r\n      for (var i = 0, il = accountOnFile.attributes.length; i < il; i++) {\r\n        var attribute = accountOnFile.attributes[i];\r\n        delete _fieldValues[attribute.key];\r\n      }\r\n      _accountOnFile = accountOnFile;\r\n    };\r\n    this.getAccountOnFile = function() {\r\n      return _accountOnFile;\r\n    };\r\n    this.getClientSessionID = function() {\r\n\t\t    return clientSessionID;\r\n    };\r\n  };\r\n  connectsdk.PaymentRequest = PaymentRequest;\r\n  return PaymentRequest;\r\n});","define(\"connectsdk.C2SPaymentProductContext\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n    var C2SPaymentProductContext = function (payload) {\r\n        this.totalAmount = typeof payload.totalAmount !== 'undefined' ? payload.totalAmount : '';\r\n        this.countryCode = payload.countryCode;\r\n        this.isRecurring = typeof payload.isRecurring !== 'undefined' ? payload.isRecurring : '';\r\n        this.currency = payload.currency;\r\n\r\n        if (typeof payload.locale !== 'undefined') {\r\n            this.locale = payload.locale;\r\n        }\r\n\r\n        if (typeof payload.accountOnFileId !== 'undefined') {\r\n            this.accountOnFileId = parseInt(payload.accountOnFileId);\r\n        }\r\n    };\r\n\r\n  connectsdk.C2SPaymentProductContext = C2SPaymentProductContext;\r\n  return C2SPaymentProductContext;\r\n});\r\n","define(\"connectsdk.JOSEEncryptor\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar pki = forge.pki;\r\n\tvar asn1 = forge.asn1;\r\n\tvar CEKKEYLENGTH = 512;\r\n\tvar IVLENGTH = 128;\r\n\r\n\tvar base64UrlEncode = function(str) {\r\n\t\tstr = forge.util.encode64(str);\r\n\t\tstr = str.split('=')[0];\r\n\t\tstr = str.replace(/\\+/g, '-');\r\n\t\tstr = str.replace(/\\//g, '_');\r\n\t\treturn str;\r\n\t};\r\n\r\n\tvar createProtectedHeader = function(kid) {\r\n\t\tvar JOSEHeader = {\r\n\t\t\t\"alg\" : \"RSA-OAEP\",\r\n\t\t\t\"enc\" : \"A256CBC-HS512\",\r\n\t\t\t\"kid\" : kid\r\n\t\t};\r\n\t\treturn JSON.stringify(JOSEHeader);\r\n\t};\r\n\r\n\tvar decodePemPublicKey = function(publickeyB64Encoded) {\r\n\t\t// step 1: base64decode\r\n\t\tvar publickeyB64Decoded = forge.util.decode64(publickeyB64Encoded);\r\n\t\t// create a bytebuffer with these bytes\r\n\t\tvar buffer2 = forge.util.createBuffer(publickeyB64Decoded, 'raw');\r\n\t\t// convert DER to ASN1 object\r\n\t\tvar publickeyObject2 = forge.asn1.fromDer(buffer2);\r\n\t\t// convert to publicKey object\r\n\t\tvar publicKey2 = pki.publicKeyFromAsn1(publickeyObject2);\r\n\t\treturn publicKey2;\r\n\t};\r\n\r\n\tvar encryptContentEncryptionKey = function(CEK, publicKey) {\r\n\t\t// encrypt CEK with OAEP+SHA-1+MGF1Padding\r\n\t\tvar encryptedCEK = publicKey.encrypt(CEK, 'RSA-OAEP');\r\n\t\treturn encryptedCEK;\r\n\t};\r\n\r\n\tvar encryptPayload = function(payload, encKey, initializationVector) {\r\n\t\tvar cipher = forge.cipher.createCipher('AES-CBC', encKey);\r\n\t\tcipher.start({\r\n\t\t\tiv : initializationVector\r\n\t\t});\r\n\t\tcipher.update(forge.util.createBuffer(payload));\r\n\t\tcipher.finish();\r\n\t\treturn cipher.output.bytes();\r\n\t};\r\n\r\n\tvar calculateAdditionalAuthenticatedDataLength = function(encodededProtectedHeader) {\r\n\t\tvar buffer = forge.util.createBuffer(encodededProtectedHeader);\r\n\t\tvar lengthInBits = buffer.length() * 8;\r\n\r\n\t\tvar buffer2 = forge.util.createBuffer();\r\n\t\t// convert int to 64bit big endian\r\n\t\tbuffer2.putInt32(0);\r\n\t\tbuffer2.putInt32(lengthInBits);\r\n\t\treturn buffer2.bytes();\r\n\t};\r\n\r\n\tvar calculateHMAC = function(macKey, encodededProtectedHeader, initializationVector, cipherText, al) {\r\n\t\tvar buffer = forge.util.createBuffer();\r\n\t\tbuffer.putBytes(encodededProtectedHeader);\r\n\t\tbuffer.putBytes(initializationVector);\r\n\t\tbuffer.putBytes(cipherText);\r\n\t\tbuffer.putBytes(al);\r\n\r\n\t\tvar hmacInput = buffer.bytes();\r\n\r\n\t\tvar hmac = forge.hmac.create();\r\n\t\thmac.start(forge.sha512.create(), macKey);\r\n\t\thmac.update(hmacInput);\r\n\t\treturn hmac.digest().bytes();\r\n\t};\r\n\r\n\tvar JOSEEncryptor = function() {\r\n\r\n\t\tthis.encrypt = function(plainTextValues, publicKeyResponse) {\r\n\t\t\t// Create protected header and encode it with Base64 encoding\r\n\t\t\tvar payload = JSON.stringify(plainTextValues);\r\n\t\t\tvar protectedHeader = createProtectedHeader(publicKeyResponse.keyId);\r\n\t\t\tvar encodededProtectedHeader = base64UrlEncode(protectedHeader);\r\n\r\n\t\t\t// Create ContentEncryptionKey, is a random byte[]\r\n\t\t\tvar CEK = forge.random.getBytesSync(CEKKEYLENGTH / 8);\r\n\t\t\tvar publicKey = decodePemPublicKey(publicKeyResponse.publicKey);\r\n\r\n\t\t\t// Encrypt the contentEncryptionKey with the GC gateway publickey and encode it with Base64 encoding\r\n\t\t\tvar encryptedContentEncryptionKey = encryptContentEncryptionKey(CEK, publicKey);\r\n\t\t\tvar encodedEncryptedContentEncryptionKey = base64UrlEncode(encryptedContentEncryptionKey);\r\n\r\n\t\t\t// Split the contentEncryptionKey in ENC_KEY and MAC_KEY for using hmac\r\n\t\t\tvar macKey = CEK.substring(0, CEKKEYLENGTH / 2 / 8);\r\n\t\t\tvar encKey = CEK.substring(CEKKEYLENGTH / 2 / 8);\r\n\r\n\t\t\t// Create Initialization Vector\r\n\t\t\tvar initializationVector = forge.random.getBytesSync(IVLENGTH / 8);\r\n\t\t\tvar encodededinitializationVector = base64UrlEncode(initializationVector);\r\n\r\n\t\t\t// Encrypt content with ContentEncryptionKey and Initialization Vector\r\n\t\t\tvar cipherText = encryptPayload(payload, encKey, initializationVector);\r\n\t\t\tvar encodedCipherText = base64UrlEncode(cipherText);\r\n\r\n\t\t\t// Create Additional Authenticated Data  and Additional Authenticated Data Length\r\n\t\t\tvar al = calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader);\r\n\r\n\t\t\t// Calculates HMAC\r\n\t\t\tvar calculatedHmac = calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al);\r\n\r\n\t\t\t// Truncate HMAC Value to Create Authentication Tag\r\n\t\t\tvar authenticationTag = calculatedHmac.substring(0, calculatedHmac.length / 2);\r\n\t\t\tvar encodedAuthenticationTag = base64UrlEncode(authenticationTag);\r\n\r\n\t\t\treturn encodededProtectedHeader + \".\" + encodedEncryptedContentEncryptionKey + \".\" + encodededinitializationVector + \".\" + encodedCipherText + \".\" + encodedAuthenticationTag;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.JOSEEncryptor = JOSEEncryptor;\r\n\treturn JOSEEncryptor;\r\n});","define(\"connectsdk.Encryptor\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.JOSEEncryptor\", \"connectsdk.Util\"], function(connectsdk, Promise, JOSEEncryptor, Util) {\r\n\r\n\tvar _util = Util.getInstance();\r\n\r\n\tvar Encryptor = function(publicKeyResponsePromise) {\r\n\t\tthis.encrypt = function(paymentRequest) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar encryptedString = '';\r\n\t\t\tpublicKeyResponsePromise.then(function (publicKeyResponse) {\r\n\t\t\t\tif (paymentRequest.isValid()) {\r\n\r\n\t\t\t\t\tvar blob = {\r\n\t\t\t\t\t   clientSessionId: paymentRequest.getClientSessionID()\r\n\t\t\t\t\t   ,nonce: forge.util.bytesToHex(forge.random.getBytesSync(16))\r\n\t\t\t\t\t   ,paymentProductId: paymentRequest.getPaymentProduct().id\r\n                       ,tokenize: paymentRequest.getTokenize()\r\n                    };\r\n\r\n\t\t\t\t\tif (paymentRequest.getAccountOnFile()) {\r\n                        blob[\"accountOnFileId\"] = paymentRequest.getAccountOnFile().id;\r\n                    }\r\n\r\n                    var paymentValues = [], values = paymentRequest.getUnmaskedValues();\r\n                    var ownValues = Object.getOwnPropertyNames(values);\r\n\t\t\t\t\tfor (var i = 0; i < ownValues.length; i++) {\r\n\t\t\t\t\t\tvar propertyName = ownValues[i];\r\n\t\t\t\t\t\tif (propertyName !== \"length\") {\r\n\t\t\t\t\t\t\tpaymentValues.push({\r\n\t\t\t\t\t\t\t\tkey: propertyName,\r\n\t\t\t\t\t\t\t\tvalue: values[propertyName]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    blob[\"paymentValues\"] = paymentValues;\r\n\r\n\t\t\t\t\tblob[\"collectedDeviceInformation\"] = _util.collectDeviceInformation();\r\n\r\n\t\t\t\t\t// use blob to encrypt\r\n\t\t\t\t\tvar joseEncryptor = new JOSEEncryptor();\r\n\t\t\t\t\tencryptedString = joseEncryptor.encrypt(blob, publicKeyResponse);\r\n\t\t\t\t\tpromise.resolve(encryptedString);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpromise.reject(paymentRequest.getErrorMessageIds());\r\n\t\t\t\t}\r\n\t\t\t}, function (error) {\r\n\t\t\t\tpromise.reject(error);\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.Encryptor = Encryptor;\r\n\treturn Encryptor;\r\n});\r\n","define(\"connectsdk.Session\", [\"connectsdk.core\", \"connectsdk.C2SCommunicator\", \"connectsdk.C2SCommunicatorConfiguration\", \"connectsdk.IinDetailsResponse\", \"connectsdk.promise\", \"connectsdk.C2SPaymentProductContext\", \"connectsdk.BasicPaymentProducts\", \"connectsdk.BasicPaymentProductGroups\", \"connectsdk.PaymentProduct\", \"connectsdk.PaymentProductGroup\", \"connectsdk.BasicPaymentItems\", \"connectsdk.PaymentRequest\", \"connectsdk.Encryptor\"], function (connectsdk, C2SCommunicator, C2SCommunicatorConfiguration, IinDetailsResponse, Promise, C2SPaymentProductContext, BasicPaymentProducts, BasicPaymentProductGroups, PaymentProduct, PaymentProductGroup, BasicPaymentItems, PaymentRequest, Encryptor) {\r\n\tvar APIVERSION = \"client/v1\";\r\n\tvar session = function (sessionDetails, paymentProduct) {\r\n\r\n\t\tvar _c2SCommunicatorConfiguration = new C2SCommunicatorConfiguration(sessionDetails, APIVERSION),\r\n\t\t\t_c2sCommunicator = new C2SCommunicator(_c2SCommunicatorConfiguration, paymentProduct),\r\n\t\t\t_session = this,\r\n\t\t\t_paymentProductId, _paymentProduct, _paymentRequestPayload, _paymentRequest, _paymentProductGroupId, _paymentProductGroup;\r\n\t\tthis.clientApiUrl = _c2SCommunicatorConfiguration.clientApiUrl;\r\n\t\tthis.assetUrl = _c2SCommunicatorConfiguration.assetUrl;\r\n\r\n\t\tthis.getBasicPaymentProducts = function (paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProducts(c2SPaymentProductContext, paymentProductSpecificInputs).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProducts = new BasicPaymentProducts(json);\r\n\t\t\t\tpromise.resolve(paymentProducts);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function (paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProductGroups(c2SPaymentProductContext).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProductGroups = new BasicPaymentProductGroups(json);\r\n\t\t\t\tpromise.resolve(paymentProductGroups);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentItems = function (paymentRequestPayload, useGroups, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t// get products & groups\r\n\t\t\tif (useGroups) {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\t_session.getBasicPaymentProductGroups(paymentRequestPayload).then(function (groups) {\r\n\t\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, groups);\r\n\t\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, null);\r\n\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function (paymentProductId, paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductId = paymentProductId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProduct(paymentProductId, c2SPaymentProductContext, paymentProductSpecificInputs).then(function (response) {\r\n\t\t\t\t_paymentProduct = new PaymentProduct(response);\r\n\t\t\t\tpromise.resolve(_paymentProduct);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProduct = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductGroupId = paymentProductGroupId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductGroup(paymentProductGroupId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentProductGroup = new PaymentProductGroup(response);\r\n\t\t\t\tpromise.resolve(_paymentProductGroup);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProductGroup = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getIinDetails = function (partialCreditCardNumber, paymentRequestPayload) {\r\n\t\t\tpartialCreditCardNumber = partialCreditCardNumber.replace(/ /g, '');\r\n\t\t\tif (partialCreditCardNumber.length >= 8) {\r\n\t\t\t\tpartialCreditCardNumber = partialCreditCardNumber.substring(0, 8);\r\n\t\t\t} else {\r\n\t\t\t\tpartialCreditCardNumber = partialCreditCardNumber.substring(0, 6);\r\n\t\t\t}\r\n\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\treturn _c2sCommunicator.getPaymentProductIdByCreditCardNumber(partialCreditCardNumber, c2SPaymentProductContext);\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\treturn _c2sCommunicator.getPublicKey();\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductNetworks(paymentProductId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tpromise.resolve(response);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\treturn _c2sCommunicator.getPaymentProductDirectory(paymentProductId, currencyCode, countryCode);\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\treturn _c2sCommunicator.convertAmount(amount, source, target);\r\n\t\t};\r\n\r\n\t\tthis.getPaymentRequest = function () {\r\n\t\t\tif (!_paymentRequest) {\r\n\t\t\t\t_paymentRequest = new PaymentRequest(_c2SCommunicatorConfiguration.clientSessionId);\r\n\t\t\t}\r\n\t\t\treturn _paymentRequest;\r\n\t\t};\r\n\r\n\t\tthis.getEncryptor = function () {\r\n\t\t\tvar publicKeyResponsePromise = _c2sCommunicator.getPublicKey();\r\n\t\t\treturn new Encryptor(publicKeyResponsePromise);\r\n\t\t};\r\n\r\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_c2sCommunicator.getThirdPartyPaymentStatus(paymentId).then(function (response) {\r\n\t\t\t\tpromise.resolve(response);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getCustomerDetails = function (paymentProductId, paymentRequestPayload) {\r\n\t\t\treturn _c2sCommunicator.getCustomerDetails(paymentProductId, paymentRequestPayload);\r\n\t\t};\r\n\r\n\t\tthis.createPaymentProductSession = function (paymentProductId, paymentRequestPayload) {\r\n\t\t\treturn _c2sCommunicator.createPaymentProductSession(paymentProductId, paymentRequestPayload);\r\n\t\t};\r\n\r\n\t\tthis.createApplePayPayment = function (context, paymentProductSpecificInputs, networks) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_c2sCommunicator.initApplePayPayment(context, paymentProductSpecificInputs, networks).then(function (res) {\r\n\t\t\t\tpromise.resolve(res)\r\n\t\t\t}, function (res) {\r\n\t\t\t\tpromise.reject(res);\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t}\r\n\r\n\t\t/* In case a full JSON representation of a payment product is already available in context,\r\n\t\t\t this method can be used instead of getPaymentProduct for the same (but synchronous) result. */\r\n\t\tthis.transformPaymentProductJSON = function (json) {\r\n\t\t\treturn new PaymentProduct(_c2sCommunicator.transformPaymentProductJSON(json))\r\n\t\t};\r\n\r\n\t\t/* In case a full JSON representation of a payment product group is already available in context,\r\n\t\t\t this method can be used instead of getPaymentProductGroup for the same (but synchronous) result. */\r\n\t\tthis.transformPaymentProductGroupJSON = function (json) {\r\n\t\t\treturn new PaymentProductGroup(_c2sCommunicator.transformPaymentProductJSON(json))\r\n\t\t};\r\n\t};\r\n\tconnectsdk.Session = session;\r\n\treturn session;\r\n});\r\n"]}